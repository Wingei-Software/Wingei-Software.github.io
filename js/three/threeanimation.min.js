"use strict";(()=>{var dh=Object.defineProperty;var ph=(i,e)=>{for(var t in e)dh(i,t,{get:e[t],enumerable:!0})};var ho="144",xi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},_i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},mh=0,Yo=1,gh=2;var hc=1,xh=2,Ms=3,Wi=0,$t=1,$n=2,Kn=0,Vi=1,Jo=2,$o=3,Ko=4,_h=5,Ui=100,vh=101,yh=102,jo=103,Qo=104,Mh=200,wh=201,bh=202,Sh=203,uc=204,fc=205,Th=206,Ah=207,Eh=208,Ch=209,Ph=210,Rh=0,Ih=1,Lh=2,Ca=3,Dh=4,Nh=5,Oh=6,Fh=7,dc=0,zh=1,Uh=2,Ln=0,Bh=1,kh=2,Vh=3,uo=4,Hh=5,pc=300,Xi=301,qi=302,Pa=303,Ra=304,Dr=306,st=1e3,Xt=1001,Ia=1002,At=1003,el=1004;var tl=1005;var yt=1006,Gh=1007;var Is=1008;var ui=1009,Wh=1010,Xh=1011,mc=1012,qh=1013,oi=1014,hn=1015,mn=1016,Zh=1017,Yh=1018,Hi=1020,Jh=1021,$h=1022,Jt=1023,Kh=1024,jh=1025,ci=1026,Zi=1027,fo=1028,Qh=1029,eu=1030,tu=1031,nu=1033,$r=33776,Kr=33777,jr=33778,Qr=33779,nl=35840,il=35841,sl=35842,rl=35843,iu=36196,al=37492,ol=37496,ll=37808,cl=37809,hl=37810,ul=37811,fl=37812,dl=37813,pl=37814,ml=37815,gl=37816,xl=37817,_l=37818,vl=37819,yl=37820,Ml=37821,wl=36492;var gr=2300,xr=2301,ea=2302,bl=2400,Sl=2401,Tl=2402;var gn=3e3,lt=3001,su=3200,ru=3201,gc=0,au=1;var Pn="srgb",li="srgb-linear";var ta=7680;var ou=519,Al=35044;var El="300 es",La=1035,xn=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});let n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;let n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;let s=this._listeners[e];if(s!==void 0){let r=s.indexOf(t);r!==-1&&s.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;let n=this._listeners[e.type];if(n!==void 0){e.target=this;let s=n.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,e);e.target=null}}},St=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];var na=Math.PI/180,Cl=180/Math.PI;function Ls(){let i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(St[i&255]+St[i>>8&255]+St[i>>16&255]+St[i>>24&255]+"-"+St[e&255]+St[e>>8&255]+"-"+St[e>>16&15|64]+St[e>>24&255]+"-"+St[t&63|128]+St[t>>8&255]+"-"+St[t>>16&255]+St[t>>24&255]+St[n&255]+St[n>>8&255]+St[n>>16&255]+St[n>>24&255]).toLowerCase()}function Rt(i,e,t){return Math.max(e,Math.min(t,i))}function lu(i,e){return(i%e+e)%e}function ia(i,e,t){return(1-t)*i+t*e}function Pl(i){return(i&i-1)===0&&i!==0}function Da(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function qs(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function Ht(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}var ze=class{constructor(e=0,t=0){ze.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,n=this.y,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6],this.y=s[1]*t+s[4]*n+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let n=Math.cos(t),s=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*s+e.x,this.y=r*s+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},kt=class{constructor(){kt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,s,r,o,a,c,l){let h=this.elements;return h[0]=e,h[1]=s,h[2]=a,h[3]=t,h[4]=r,h[5]=c,h[6]=n,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],h=n[4],u=n[7],f=n[2],g=n[5],_=n[8],p=s[0],d=s[3],y=s[6],w=s[1],S=s[4],v=s[7],b=s[2],R=s[5],D=s[8];return r[0]=o*p+a*w+c*b,r[3]=o*d+a*S+c*R,r[6]=o*y+a*v+c*D,r[1]=l*p+h*w+u*b,r[4]=l*d+h*S+u*R,r[7]=l*y+h*v+u*D,r[2]=f*p+g*w+_*b,r[5]=f*d+g*S+_*R,r[8]=f*y+g*v+_*D,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],h=e[8];return t*o*h-t*a*l-n*r*h+n*a*c+s*r*l-s*o*c}invert(){let e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],h=e[8],u=h*o-a*l,f=a*c-h*r,g=l*r-o*c,_=t*u+n*f+s*g;if(_===0)return this.set(0,0,0,0,0,0,0,0,0);let p=1/_;return e[0]=u*p,e[1]=(s*l-h*n)*p,e[2]=(a*n-s*o)*p,e[3]=f*p,e[4]=(h*t-s*c)*p,e[5]=(s*r-a*t)*p,e[6]=g*p,e[7]=(n*c-l*t)*p,e[8]=(o*t-n*r)*p,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,s,r,o,a){let c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-s*l,s*c,-s*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){let n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){let t=Math.cos(e),n=Math.sin(e),s=this.elements,r=s[0],o=s[3],a=s[6],c=s[1],l=s[4],h=s[7];return s[0]=t*r+n*c,s[3]=t*o+n*l,s[6]=t*a+n*h,s[1]=-n*r+t*c,s[4]=-n*o+t*l,s[7]=-n*a+t*h,this}translate(e,t){let n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){let t=this.elements,n=e.elements;for(let s=0;s<9;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}};function xc(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function Ss(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function hi(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function mr(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}var sa={[Pn]:{[li]:hi},[li]:{[Pn]:mr}},rn={legacyMode:!0,get workingColorSpace(){return li},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,e,t){if(this.legacyMode||e===t||!e||!t)return i;if(sa[e]&&sa[e][t]!==void 0){let n=sa[e][t];return i.r=n(i.r),i.g=n(i.g),i.b=n(i.b),i}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)}},_c={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},xt={r:0,g:0,b:0},an={h:0,s:0,l:0},Zs={h:0,s:0,l:0};function ra(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}function Ys(i,e){return e.r=i.r,e.g=i.g,e.b=i.b,e}var Ye=class{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Pn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,rn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,s=li){return this.r=e,this.g=t,this.b=n,rn.toWorkingColorSpace(this,s),this}setHSL(e,t,n,s=li){if(e=lu(e,1),t=Rt(t,0,1),n=Rt(n,0,1),t===0)this.r=this.g=this.b=n;else{let r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=ra(o,r,e+1/3),this.g=ra(o,r,e),this.b=ra(o,r,e-1/3)}return rn.toWorkingColorSpace(this,s),this}setStyle(e,t=Pn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r,o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,rn.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,rn.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){let c=parseFloat(r[1])/360,l=parseFloat(r[2])/100,h=parseFloat(r[3])/100;return n(r[4]),this.setHSL(c,l,h,t)}break}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){let r=s[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,rn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,rn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Pn){let n=_c[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=hi(e.r),this.g=hi(e.g),this.b=hi(e.b),this}copyLinearToSRGB(e){return this.r=mr(e.r),this.g=mr(e.g),this.b=mr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Pn){return rn.fromWorkingColorSpace(Ys(this,xt),e),Rt(xt.r*255,0,255)<<16^Rt(xt.g*255,0,255)<<8^Rt(xt.b*255,0,255)<<0}getHexString(e=Pn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=li){rn.fromWorkingColorSpace(Ys(this,xt),t);let n=xt.r,s=xt.g,r=xt.b,o=Math.max(n,s,r),a=Math.min(n,s,r),c,l,h=(a+o)/2;if(a===o)c=0,l=0;else{let u=o-a;switch(l=h<=.5?u/(o+a):u/(2-o-a),o){case n:c=(s-r)/u+(s<r?6:0);break;case s:c=(r-n)/u+2;break;case r:c=(n-s)/u+4;break}c/=6}return e.h=c,e.s=l,e.l=h,e}getRGB(e,t=li){return rn.fromWorkingColorSpace(Ys(this,xt),t),e.r=xt.r,e.g=xt.g,e.b=xt.b,e}getStyle(e=Pn){return rn.fromWorkingColorSpace(Ys(this,xt),e),e!==Pn?`color(${e} ${xt.r} ${xt.g} ${xt.b})`:`rgb(${xt.r*255|0},${xt.g*255|0},${xt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(an),an.h+=e,an.s+=t,an.l+=n,this.setHSL(an.h,an.s,an.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(an),e.getHSL(Zs);let n=ia(an.h,Zs.h,t),s=ia(an.s,Zs.s,t),r=ia(an.l,Zs.l,t);return this.setHSL(n,s,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};Ye.NAMES=_c;var Si,_r=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Si===void 0&&(Si=Ss("canvas")),Si.width=e.width,Si.height=e.height;let n=Si.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Si}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){let t=Ss("canvas");t.width=e.width,t.height=e.height;let n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);let s=n.getImageData(0,0,e.width,e.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=hi(r[o]/255)*255;return n.putImageData(s,0,0),t}else if(e.data){let t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(hi(t[n]/255)*255):t[n]=hi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},vr=class{constructor(e=null){this.isSource=!0,this.uuid=Ls(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){let t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];let n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(aa(s[o].image)):r.push(aa(s[o]))}else r=aa(s);n.url=r}return t||(e.images[this.uuid]=n),n}};function aa(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?_r.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var cu=0,Dt=class extends xn{constructor(e=Dt.DEFAULT_IMAGE,t=Dt.DEFAULT_MAPPING,n=Xt,s=Xt,r=yt,o=Is,a=Jt,c=ui,l=1,h=gn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:cu++}),this.uuid=Ls(),this.name="",this.source=new vr(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new ze(0,0),this.repeat=new ze(1,1),this.center=new ze(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new kt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];let n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==pc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case st:e.x=e.x-Math.floor(e.x);break;case Xt:e.x=e.x<0?0:1;break;case Ia:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case st:e.y=e.y-Math.floor(e.y);break;case Xt:e.y=e.y<0?0:1;break;case Ia:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}};Dt.DEFAULT_IMAGE=null;Dt.DEFAULT_MAPPING=pc;var _t=class{constructor(e=0,t=0,n=0,s=1){_t.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,n=this.y,s=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*s+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*s+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*s+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*s+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,s,r,c=e.elements,l=c[0],h=c[4],u=c[8],f=c[1],g=c[5],_=c[9],p=c[2],d=c[6],y=c[10];if(Math.abs(h-f)<.01&&Math.abs(u-p)<.01&&Math.abs(_-d)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+p)<.1&&Math.abs(_+d)<.1&&Math.abs(l+g+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;let S=(l+1)/2,v=(g+1)/2,b=(y+1)/2,R=(h+f)/4,D=(u+p)/4,x=(_+d)/4;return S>v&&S>b?S<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(S),s=R/n,r=D/n):v>b?v<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(v),n=R/s,r=x/s):b<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(b),n=D/r,s=x/r),this.set(n,s,r,t),this}let w=Math.sqrt((d-_)*(d-_)+(u-p)*(u-p)+(f-h)*(f-h));return Math.abs(w)<.001&&(w=1),this.x=(d-_)/w,this.y=(u-p)/w,this.z=(f-h)/w,this.w=Math.acos((l+g+y-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},Dn=class extends xn{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new _t(0,0,e,t),this.scissorTest=!1,this.viewport=new _t(0,0,e,t);let s={width:e,height:t,depth:1};this.texture=new Dt(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:yt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new vr(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},yr=class extends Dt{constructor(e=null,t=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=At,this.minFilter=At,this.wrapR=Xt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};var Na=class extends Dt{constructor(e=null,t=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=At,this.minFilter=At,this.wrapR=Xt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};var Zt=class{constructor(e=0,t=0,n=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=s}static slerpFlat(e,t,n,s,r,o,a){let c=n[s+0],l=n[s+1],h=n[s+2],u=n[s+3],f=r[o+0],g=r[o+1],_=r[o+2],p=r[o+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=f,e[t+1]=g,e[t+2]=_,e[t+3]=p;return}if(u!==p||c!==f||l!==g||h!==_){let d=1-a,y=c*f+l*g+h*_+u*p,w=y>=0?1:-1,S=1-y*y;if(S>Number.EPSILON){let b=Math.sqrt(S),R=Math.atan2(b,y*w);d=Math.sin(d*R)/b,a=Math.sin(a*R)/b}let v=a*w;if(c=c*d+f*v,l=l*d+g*v,h=h*d+_*v,u=u*d+p*v,d===1-a){let b=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=b,l*=b,h*=b,u*=b}}e[t]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,s,r,o){let a=n[s],c=n[s+1],l=n[s+2],h=n[s+3],u=r[o],f=r[o+1],g=r[o+2],_=r[o+3];return e[t]=a*_+h*u+c*g-l*f,e[t+1]=c*_+h*f+l*u-a*g,e[t+2]=l*_+h*g+a*f-c*u,e[t+3]=h*_-a*u-c*f-l*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){let n=e._x,s=e._y,r=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),h=a(s/2),u=a(r/2),f=c(n/2),g=c(s/2),_=c(r/2);switch(o){case"XYZ":this._x=f*h*u+l*g*_,this._y=l*g*u-f*h*_,this._z=l*h*_+f*g*u,this._w=l*h*u-f*g*_;break;case"YXZ":this._x=f*h*u+l*g*_,this._y=l*g*u-f*h*_,this._z=l*h*_-f*g*u,this._w=l*h*u+f*g*_;break;case"ZXY":this._x=f*h*u-l*g*_,this._y=l*g*u+f*h*_,this._z=l*h*_+f*g*u,this._w=l*h*u-f*g*_;break;case"ZYX":this._x=f*h*u-l*g*_,this._y=l*g*u+f*h*_,this._z=l*h*_-f*g*u,this._w=l*h*u+f*g*_;break;case"YZX":this._x=f*h*u+l*g*_,this._y=l*g*u+f*h*_,this._z=l*h*_-f*g*u,this._w=l*h*u-f*g*_;break;case"XZY":this._x=f*h*u-l*g*_,this._y=l*g*u-f*h*_,this._z=l*h*_+f*g*u,this._w=l*h*u+f*g*_;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let n=t/2,s=Math.sin(n);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,n=t[0],s=t[4],r=t[8],o=t[1],a=t[5],c=t[9],l=t[2],h=t[6],u=t[10],f=n+a+u;if(f>0){let g=.5/Math.sqrt(f+1);this._w=.25/g,this._x=(h-c)*g,this._y=(r-l)*g,this._z=(o-s)*g}else if(n>a&&n>u){let g=2*Math.sqrt(1+n-a-u);this._w=(h-c)/g,this._x=.25*g,this._y=(s+o)/g,this._z=(r+l)/g}else if(a>u){let g=2*Math.sqrt(1+a-n-u);this._w=(r-l)/g,this._x=(s+o)/g,this._y=.25*g,this._z=(c+h)/g}else{let g=2*Math.sqrt(1+u-n-a);this._w=(o-s)/g,this._x=(r+l)/g,this._y=(c+h)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Rt(this.dot(e),-1,1)))}rotateTowards(e,t){let n=this.angleTo(e);if(n===0)return this;let s=Math.min(1,t/n);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let n=e._x,s=e._y,r=e._z,o=e._w,a=t._x,c=t._y,l=t._z,h=t._w;return this._x=n*h+o*a+s*l-r*c,this._y=s*h+o*c+r*a-n*l,this._z=r*h+o*l+n*c-s*a,this._w=o*h-n*a-s*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);let n=this._x,s=this._y,r=this._z,o=this._w,a=o*e._w+n*e._x+s*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=s,this._z=r,this;let c=1-a*a;if(c<=Number.EPSILON){let g=1-t;return this._w=g*o+t*this._w,this._x=g*n+t*this._x,this._y=g*s+t*this._y,this._z=g*r+t*this._z,this.normalize(),this._onChangeCallback(),this}let l=Math.sqrt(c),h=Math.atan2(l,a),u=Math.sin((1-t)*h)/l,f=Math.sin(t*h)/l;return this._w=o*u+this._w*f,this._x=n*u+this._x*f,this._y=s*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){let e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),s=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(s),n*Math.sin(r),n*Math.cos(r),t*Math.sin(s))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},z=class{constructor(e=0,t=0,n=0){z.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Rl.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Rl.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*s,this.y=r[1]*t+r[4]*n+r[7]*s,this.z=r[2]*t+r[5]*n+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,n=this.y,s=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*s+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*s+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*s+r[14])*o,this}applyQuaternion(e){let t=this.x,n=this.y,s=this.z,r=e.x,o=e.y,a=e.z,c=e.w,l=c*t+o*s-a*n,h=c*n+a*t-r*s,u=c*s+r*n-o*t,f=-r*t-o*n-a*s;return this.x=l*c+f*-r+h*-a-u*-o,this.y=h*c+f*-o+u*-r-l*-a,this.z=u*c+f*-a+l*-o-h*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*s,this.y=r[1]*t+r[5]*n+r[9]*s,this.z=r[2]*t+r[6]*n+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let n=e.x,s=e.y,r=e.z,o=t.x,a=t.y,c=t.z;return this.x=s*c-r*a,this.y=r*o-n*c,this.z=n*a-s*o,this}projectOnVector(e){let t=e.lengthSq();if(t===0)return this.set(0,0,0);let n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return oa.copy(this).projectOnVector(e),this.sub(oa)}reflect(e){return this.sub(oa.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;let n=this.dot(e)/t;return Math.acos(Rt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){let s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}},oa=new z,Rl=new Zt,fi=class{constructor(e=new z(1/0,1/0,1/0),t=new z(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,s=1/0,r=-1/0,o=-1/0,a=-1/0;for(let c=0,l=e.length;c<l;c+=3){let h=e[c],u=e[c+1],f=e[c+2];h<t&&(t=h),u<n&&(n=u),f<s&&(s=f),h>r&&(r=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(t,n,s),this.max.set(r,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,s=1/0,r=-1/0,o=-1/0,a=-1/0;for(let c=0,l=e.count;c<l;c++){let h=e.getX(c),u=e.getY(c),f=e.getZ(c);h<t&&(t=h),u<n&&(n=u),f<s&&(s=f),h>r&&(r=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(t,n,s),this.max.set(r,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=ni.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){let r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)ni.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(ni)}else n.boundingBox===null&&n.computeBoundingBox(),la.copy(n.boundingBox),la.applyMatrix4(e.matrixWorld),this.union(la);let s=e.children;for(let r=0,o=s.length;r<o;r++)this.expandByObject(s[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ni),ni.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(xs),Js.subVectors(this.max,xs),Ti.subVectors(e.a,xs),Ai.subVectors(e.b,xs),Ei.subVectors(e.c,xs),Hn.subVectors(Ai,Ti),Gn.subVectors(Ei,Ai),ii.subVectors(Ti,Ei);let t=[0,-Hn.z,Hn.y,0,-Gn.z,Gn.y,0,-ii.z,ii.y,Hn.z,0,-Hn.x,Gn.z,0,-Gn.x,ii.z,0,-ii.x,-Hn.y,Hn.x,0,-Gn.y,Gn.x,0,-ii.y,ii.x,0];return!ca(t,Ti,Ai,Ei,Js)||(t=[1,0,0,0,1,0,0,0,1],!ca(t,Ti,Ai,Ei,Js))?!1:($s.crossVectors(Hn,Gn),t=[$s.x,$s.y,$s.z],ca(t,Ti,Ai,Ei,Js))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return ni.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(ni).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(bn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),bn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),bn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),bn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),bn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),bn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),bn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),bn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(bn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},bn=[new z,new z,new z,new z,new z,new z,new z,new z],ni=new z,la=new fi,Ti=new z,Ai=new z,Ei=new z,Hn=new z,Gn=new z,ii=new z,xs=new z,Js=new z,$s=new z,si=new z;function ca(i,e,t,n,s){for(let r=0,o=i.length-3;r<=o;r+=3){si.fromArray(i,r);let a=s.x*Math.abs(si.x)+s.y*Math.abs(si.y)+s.z*Math.abs(si.z),c=e.dot(si),l=t.dot(si),h=n.dot(si);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}var hu=new fi,Il=new z,Ks=new z,ha=new z,Ts=class{constructor(e=new z,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let n=this.center;t!==void 0?n.copy(t):hu.setFromPoints(e).getCenter(n);let s=0;for(let r=0,o=e.length;r<o;r++)s=Math.max(s,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){ha.subVectors(e,this.center);let t=ha.lengthSq();if(t>this.radius*this.radius){let n=Math.sqrt(t),s=(n-this.radius)*.5;this.center.add(ha.multiplyScalar(s/n)),this.radius+=s}return this}union(e){return this.center.equals(e.center)===!0?Ks.set(0,0,1).multiplyScalar(e.radius):Ks.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Il.copy(e.center).add(Ks)),this.expandByPoint(Il.copy(e.center).sub(Ks)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}},Sn=new z,ua=new z,js=new z,Wn=new z,fa=new z,Qs=new z,da=new z,Oa=class{constructor(e=new z,t=new z(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Sn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=Sn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Sn.copy(this.direction).multiplyScalar(t).add(this.origin),Sn.distanceToSquared(e))}distanceSqToSegment(e,t,n,s){ua.copy(e).add(t).multiplyScalar(.5),js.copy(t).sub(e).normalize(),Wn.copy(this.origin).sub(ua);let r=e.distanceTo(t)*.5,o=-this.direction.dot(js),a=Wn.dot(this.direction),c=-Wn.dot(js),l=Wn.lengthSq(),h=Math.abs(1-o*o),u,f,g,_;if(h>0)if(u=o*c-a,f=o*a-c,_=r*h,u>=0)if(f>=-_)if(f<=_){let p=1/h;u*=p,f*=p,g=u*(u+o*f+2*a)+f*(o*u+f+2*c)+l}else f=r,u=Math.max(0,-(o*f+a)),g=-u*u+f*(f+2*c)+l;else f=-r,u=Math.max(0,-(o*f+a)),g=-u*u+f*(f+2*c)+l;else f<=-_?(u=Math.max(0,-(-o*r+a)),f=u>0?-r:Math.min(Math.max(-r,-c),r),g=-u*u+f*(f+2*c)+l):f<=_?(u=0,f=Math.min(Math.max(-r,-c),r),g=f*(f+2*c)+l):(u=Math.max(0,-(o*r+a)),f=u>0?r:Math.min(Math.max(-r,-c),r),g=-u*u+f*(f+2*c)+l);else f=o>0?-r:r,u=Math.max(0,-(o*f+a)),g=-u*u+f*(f+2*c)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),s&&s.copy(js).multiplyScalar(f).add(ua),g}intersectSphere(e,t){Sn.subVectors(e.center,this.origin);let n=Sn.dot(this.direction),s=Sn.dot(Sn)-n*n,r=e.radius*e.radius;if(s>r)return null;let o=Math.sqrt(r-s),a=n-o,c=n+o;return a<0&&c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;let n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){let n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,s,r,o,a,c,l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return l>=0?(n=(e.min.x-f.x)*l,s=(e.max.x-f.x)*l):(n=(e.max.x-f.x)*l,s=(e.min.x-f.x)*l),h>=0?(r=(e.min.y-f.y)*h,o=(e.max.y-f.y)*h):(r=(e.max.y-f.y)*h,o=(e.min.y-f.y)*h),n>o||r>s||((r>n||n!==n)&&(n=r),(o<s||s!==s)&&(s=o),u>=0?(a=(e.min.z-f.z)*u,c=(e.max.z-f.z)*u):(a=(e.max.z-f.z)*u,c=(e.min.z-f.z)*u),n>c||a>s)||((a>n||n!==n)&&(n=a),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,t)}intersectsBox(e){return this.intersectBox(e,Sn)!==null}intersectTriangle(e,t,n,s,r){fa.subVectors(t,e),Qs.subVectors(n,e),da.crossVectors(fa,Qs);let o=this.direction.dot(da),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Wn.subVectors(this.origin,e);let c=a*this.direction.dot(Qs.crossVectors(Wn,Qs));if(c<0)return null;let l=a*this.direction.dot(fa.cross(Wn));if(l<0||c+l>o)return null;let h=-a*Wn.dot(da);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},ot=class{constructor(){ot.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,s,r,o,a,c,l,h,u,f,g,_,p,d){let y=this.elements;return y[0]=e,y[4]=t,y[8]=n,y[12]=s,y[1]=r,y[5]=o,y[9]=a,y[13]=c,y[2]=l,y[6]=h,y[10]=u,y[14]=f,y[3]=g,y[7]=_,y[11]=p,y[15]=d,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ot().fromArray(this.elements)}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){let t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,n=e.elements,s=1/Ci.setFromMatrixColumn(e,0).length(),r=1/Ci.setFromMatrixColumn(e,1).length(),o=1/Ci.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,n=e.x,s=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(s),l=Math.sin(s),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){let f=o*h,g=o*u,_=a*h,p=a*u;t[0]=c*h,t[4]=-c*u,t[8]=l,t[1]=g+_*l,t[5]=f-p*l,t[9]=-a*c,t[2]=p-f*l,t[6]=_+g*l,t[10]=o*c}else if(e.order==="YXZ"){let f=c*h,g=c*u,_=l*h,p=l*u;t[0]=f+p*a,t[4]=_*a-g,t[8]=o*l,t[1]=o*u,t[5]=o*h,t[9]=-a,t[2]=g*a-_,t[6]=p+f*a,t[10]=o*c}else if(e.order==="ZXY"){let f=c*h,g=c*u,_=l*h,p=l*u;t[0]=f-p*a,t[4]=-o*u,t[8]=_+g*a,t[1]=g+_*a,t[5]=o*h,t[9]=p-f*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){let f=o*h,g=o*u,_=a*h,p=a*u;t[0]=c*h,t[4]=_*l-g,t[8]=f*l+p,t[1]=c*u,t[5]=p*l+f,t[9]=g*l-_,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){let f=o*c,g=o*l,_=a*c,p=a*l;t[0]=c*h,t[4]=p-f*u,t[8]=_*u+g,t[1]=u,t[5]=o*h,t[9]=-a*h,t[2]=-l*h,t[6]=g*u+_,t[10]=f-p*u}else if(e.order==="XZY"){let f=o*c,g=o*l,_=a*c,p=a*l;t[0]=c*h,t[4]=-u,t[8]=l*h,t[1]=f*u+p,t[5]=o*h,t[9]=g*u-_,t[2]=_*u-g,t[6]=a*h,t[10]=p*u+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(uu,e,fu)}lookAt(e,t,n){let s=this.elements;return Gt.subVectors(e,t),Gt.lengthSq()===0&&(Gt.z=1),Gt.normalize(),Xn.crossVectors(n,Gt),Xn.lengthSq()===0&&(Math.abs(n.z)===1?Gt.x+=1e-4:Gt.z+=1e-4,Gt.normalize(),Xn.crossVectors(n,Gt)),Xn.normalize(),er.crossVectors(Gt,Xn),s[0]=Xn.x,s[4]=er.x,s[8]=Gt.x,s[1]=Xn.y,s[5]=er.y,s[9]=Gt.y,s[2]=Xn.z,s[6]=er.z,s[10]=Gt.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],h=n[1],u=n[5],f=n[9],g=n[13],_=n[2],p=n[6],d=n[10],y=n[14],w=n[3],S=n[7],v=n[11],b=n[15],R=s[0],D=s[4],x=s[8],C=s[12],L=s[1],ee=s[5],Y=s[9],V=s[13],F=s[2],Z=s[6],K=s[10],se=s[14],$=s[3],U=s[7],k=s[11],le=s[15];return r[0]=o*R+a*L+c*F+l*$,r[4]=o*D+a*ee+c*Z+l*U,r[8]=o*x+a*Y+c*K+l*k,r[12]=o*C+a*V+c*se+l*le,r[1]=h*R+u*L+f*F+g*$,r[5]=h*D+u*ee+f*Z+g*U,r[9]=h*x+u*Y+f*K+g*k,r[13]=h*C+u*V+f*se+g*le,r[2]=_*R+p*L+d*F+y*$,r[6]=_*D+p*ee+d*Z+y*U,r[10]=_*x+p*Y+d*K+y*k,r[14]=_*C+p*V+d*se+y*le,r[3]=w*R+S*L+v*F+b*$,r[7]=w*D+S*ee+v*Z+b*U,r[11]=w*x+S*Y+v*K+b*k,r[15]=w*C+S*V+v*se+b*le,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[4],s=e[8],r=e[12],o=e[1],a=e[5],c=e[9],l=e[13],h=e[2],u=e[6],f=e[10],g=e[14],_=e[3],p=e[7],d=e[11],y=e[15];return _*(+r*c*u-s*l*u-r*a*f+n*l*f+s*a*g-n*c*g)+p*(+t*c*g-t*l*f+r*o*f-s*o*g+s*l*h-r*c*h)+d*(+t*l*u-t*a*g-r*o*u+n*o*g+r*a*h-n*l*h)+y*(-s*a*h-t*c*u+t*a*f+s*o*u-n*o*f+n*c*h)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){let s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this}invert(){let e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],h=e[8],u=e[9],f=e[10],g=e[11],_=e[12],p=e[13],d=e[14],y=e[15],w=u*d*l-p*f*l+p*c*g-a*d*g-u*c*y+a*f*y,S=_*f*l-h*d*l-_*c*g+o*d*g+h*c*y-o*f*y,v=h*p*l-_*u*l+_*a*g-o*p*g-h*a*y+o*u*y,b=_*u*c-h*p*c-_*a*f+o*p*f+h*a*d-o*u*d,R=t*w+n*S+s*v+r*b;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let D=1/R;return e[0]=w*D,e[1]=(p*f*r-u*d*r-p*s*g+n*d*g+u*s*y-n*f*y)*D,e[2]=(a*d*r-p*c*r+p*s*l-n*d*l-a*s*y+n*c*y)*D,e[3]=(u*c*r-a*f*r-u*s*l+n*f*l+a*s*g-n*c*g)*D,e[4]=S*D,e[5]=(h*d*r-_*f*r+_*s*g-t*d*g-h*s*y+t*f*y)*D,e[6]=(_*c*r-o*d*r-_*s*l+t*d*l+o*s*y-t*c*y)*D,e[7]=(o*f*r-h*c*r+h*s*l-t*f*l-o*s*g+t*c*g)*D,e[8]=v*D,e[9]=(_*u*r-h*p*r-_*n*g+t*p*g+h*n*y-t*u*y)*D,e[10]=(o*p*r-_*a*r+_*n*l-t*p*l-o*n*y+t*a*y)*D,e[11]=(h*a*r-o*u*r-h*n*l+t*u*l+o*n*g-t*a*g)*D,e[12]=b*D,e[13]=(h*p*s-_*u*s+_*n*f-t*p*f-h*n*d+t*u*d)*D,e[14]=(_*a*s-o*p*s-_*n*c+t*p*c+o*n*d-t*a*d)*D,e[15]=(o*u*s-h*a*s+h*n*c-t*u*c-o*n*f+t*a*f)*D,this}scale(e){let t=this.elements,n=e.x,s=e.y,r=e.z;return t[0]*=n,t[4]*=s,t[8]*=r,t[1]*=n,t[5]*=s,t[9]*=r,t[2]*=n,t[6]*=s,t[10]*=r,t[3]*=n,t[7]*=s,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let n=Math.cos(t),s=Math.sin(t),r=1-n,o=e.x,a=e.y,c=e.z,l=r*o,h=r*a;return this.set(l*o+n,l*a-s*c,l*c+s*a,0,l*a+s*c,h*a+n,h*c-s*o,0,l*c-s*a,h*c+s*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,s,r,o){return this.set(1,n,r,0,e,1,o,0,t,s,1,0,0,0,0,1),this}compose(e,t,n){let s=this.elements,r=t._x,o=t._y,a=t._z,c=t._w,l=r+r,h=o+o,u=a+a,f=r*l,g=r*h,_=r*u,p=o*h,d=o*u,y=a*u,w=c*l,S=c*h,v=c*u,b=n.x,R=n.y,D=n.z;return s[0]=(1-(p+y))*b,s[1]=(g+v)*b,s[2]=(_-S)*b,s[3]=0,s[4]=(g-v)*R,s[5]=(1-(f+y))*R,s[6]=(d+w)*R,s[7]=0,s[8]=(_+S)*D,s[9]=(d-w)*D,s[10]=(1-(f+p))*D,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,n){let s=this.elements,r=Ci.set(s[0],s[1],s[2]).length(),o=Ci.set(s[4],s[5],s[6]).length(),a=Ci.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],on.copy(this);let l=1/r,h=1/o,u=1/a;return on.elements[0]*=l,on.elements[1]*=l,on.elements[2]*=l,on.elements[4]*=h,on.elements[5]*=h,on.elements[6]*=h,on.elements[8]*=u,on.elements[9]*=u,on.elements[10]*=u,t.setFromRotationMatrix(on),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,s,r,o){let a=this.elements,c=2*r/(t-e),l=2*r/(n-s),h=(t+e)/(t-e),u=(n+s)/(n-s),f=-(o+r)/(o-r),g=-2*o*r/(o-r);return a[0]=c,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=g,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,s,r,o){let a=this.elements,c=1/(t-e),l=1/(n-s),h=1/(o-r),u=(t+e)*c,f=(n+s)*l,g=(o+r)*h;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-g,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){let t=this.elements,n=e.elements;for(let s=0;s<16;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}},Ci=new z,on=new ot,uu=new z(0,0,0),fu=new z(1,1,1),Xn=new z,er=new z,Gt=new z,Ll=new ot,Dl=new Zt,Et=class{constructor(e=0,t=0,n=0,s=Et.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,s=this._order){return this._x=e,this._y=t,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){let s=e.elements,r=s[0],o=s[4],a=s[8],c=s[1],l=s[5],h=s[9],u=s[2],f=s[6],g=s[10];switch(t){case"XYZ":this._y=Math.asin(Rt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,g),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Rt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,g),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Rt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,g),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-Rt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,g),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(Rt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,g));break;case"XZY":this._z=Math.asin(-Rt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Ll.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ll,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Dl.setFromEuler(this),this.setFromQuaternion(Dl,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}};Et.DefaultOrder="XYZ";Et.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var Mr=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},du=0,Nl=new z,Pi=new Zt,Tn=new ot,tr=new z,_s=new z,pu=new z,mu=new Zt,Ol=new z(1,0,0),Fl=new z(0,1,0),zl=new z(0,0,1),gu={type:"added"},Ul={type:"removed"},Lt=class extends xn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:du++}),this.uuid=Ls(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Lt.DefaultUp.clone();let e=new z,t=new Et,n=new Zt,s=new z(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new ot},normalMatrix:{value:new kt}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=Lt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Lt.DefaultMatrixWorldAutoUpdate,this.layers=new Mr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Pi.setFromAxisAngle(e,t),this.quaternion.multiply(Pi),this}rotateOnWorldAxis(e,t){return Pi.setFromAxisAngle(e,t),this.quaternion.premultiply(Pi),this}rotateX(e){return this.rotateOnAxis(Ol,e)}rotateY(e){return this.rotateOnAxis(Fl,e)}rotateZ(e){return this.rotateOnAxis(zl,e)}translateOnAxis(e,t){return Nl.copy(e).applyQuaternion(this.quaternion),this.position.add(Nl.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ol,e)}translateY(e){return this.translateOnAxis(Fl,e)}translateZ(e){return this.translateOnAxis(zl,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Tn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?tr.copy(e):tr.set(e,t,n);let s=this.parent;this.updateWorldMatrix(!0,!1),_s.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Tn.lookAt(_s,tr,this.up):Tn.lookAt(tr,_s,this.up),this.quaternion.setFromRotationMatrix(Tn),s&&(Tn.extractRotation(s.matrixWorld),Pi.setFromRotationMatrix(Tn),this.quaternion.premultiply(Pi.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(gu)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}let t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Ul)),this}removeFromParent(){let e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(Ul)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Tn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Tn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Tn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,s=this.children.length;n<s;n++){let o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_s,e,pu),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_s,mu,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);let t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)}traverseAncestors(e){let t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let n=0,s=t.length;n<s;n++){let r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){let n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){let s=this.children;for(let r=0,o=s.length;r<o;r++){let a=s[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){let t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);let a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){let c=a.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){let u=c[l];r(e.shapes,u)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){let a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(e.materials,this.material[c]));s.material=a}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){let c=this.animations[a];s.animations.push(r(e.animations,c))}}if(t){let a=o(e.geometries),c=o(e.materials),l=o(e.textures),h=o(e.images),u=o(e.shapes),f=o(e.skeletons),g=o(e.animations),_=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),f.length>0&&(n.skeletons=f),g.length>0&&(n.animations=g),_.length>0&&(n.nodes=_)}return n.object=s,n;function o(a){let c=[];for(let l in a){let h=a[l];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){let s=e.children[n];this.add(s.clone())}return this}};Lt.DefaultUp=new z(0,1,0);Lt.DefaultMatrixAutoUpdate=!0;Lt.DefaultMatrixWorldAutoUpdate=!0;var ln=new z,An=new z,pa=new z,En=new z,Ri=new z,Ii=new z,Bl=new z,ma=new z,ga=new z,xa=new z,cn=class{constructor(e=new z,t=new z,n=new z){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,s){s.subVectors(n,t),ln.subVectors(e,t),s.cross(ln);let r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,t,n,s,r){ln.subVectors(s,t),An.subVectors(n,t),pa.subVectors(e,t);let o=ln.dot(ln),a=ln.dot(An),c=ln.dot(pa),l=An.dot(An),h=An.dot(pa),u=o*l-a*a;if(u===0)return r.set(-2,-1,-1);let f=1/u,g=(l*c-a*h)*f,_=(o*h-a*c)*f;return r.set(1-g-_,_,g)}static containsPoint(e,t,n,s){return this.getBarycoord(e,t,n,s,En),En.x>=0&&En.y>=0&&En.x+En.y<=1}static getUV(e,t,n,s,r,o,a,c){return this.getBarycoord(e,t,n,s,En),c.set(0,0),c.addScaledVector(r,En.x),c.addScaledVector(o,En.y),c.addScaledVector(a,En.z),c}static isFrontFacing(e,t,n,s){return ln.subVectors(n,t),An.subVectors(e,t),ln.cross(An).dot(s)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,n,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ln.subVectors(this.c,this.b),An.subVectors(this.a,this.b),ln.cross(An).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return cn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return cn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,s,r){return cn.getUV(e,this.a,this.b,this.c,t,n,s,r)}containsPoint(e){return cn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return cn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let n=this.a,s=this.b,r=this.c,o,a;Ri.subVectors(s,n),Ii.subVectors(r,n),ma.subVectors(e,n);let c=Ri.dot(ma),l=Ii.dot(ma);if(c<=0&&l<=0)return t.copy(n);ga.subVectors(e,s);let h=Ri.dot(ga),u=Ii.dot(ga);if(h>=0&&u<=h)return t.copy(s);let f=c*u-h*l;if(f<=0&&c>=0&&h<=0)return o=c/(c-h),t.copy(n).addScaledVector(Ri,o);xa.subVectors(e,r);let g=Ri.dot(xa),_=Ii.dot(xa);if(_>=0&&g<=_)return t.copy(r);let p=g*l-c*_;if(p<=0&&l>=0&&_<=0)return a=l/(l-_),t.copy(n).addScaledVector(Ii,a);let d=h*_-g*u;if(d<=0&&u-h>=0&&g-_>=0)return Bl.subVectors(r,s),a=(u-h)/(u-h+(g-_)),t.copy(s).addScaledVector(Bl,a);let y=1/(d+p+f);return o=p*y,a=f*y,t.copy(n).addScaledVector(Ri,o).addScaledVector(Ii,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},xu=0,di=class extends xn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xu++}),this.uuid=Ls(),this.name="",this.type="Material",this.blending=Vi,this.side=Wi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=uc,this.blendDst=fc,this.blendEquation=Ui,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ca,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ou,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ta,this.stencilZFail=ta,this.stencilZPass=ta,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(let t in e){let n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}let s=this[t];if(s===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[t]=n}}toJSON(e){let t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});let n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Vi&&(n.blending=this.blending),this.side!==Wi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function s(r){let o=[];for(let a in r){let c=r[a];delete c.metadata,o.push(c)}return o}if(t){let r=s(e.textures),o=s(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,n=null;if(t!==null){let s=t.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}},wr=class extends di{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ye(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=dc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},gt=new z,nr=new ze,qt=class{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Al,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=t.array[n+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)nr.fromBufferAttribute(this,t),nr.applyMatrix3(e),this.setXY(t,nr.x,nr.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyMatrix3(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyMatrix4(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyNormalMatrix(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.transformDirection(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=qs(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ht(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=qs(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ht(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=qs(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ht(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=qs(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ht(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ht(t,this.array),n=Ht(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=Ht(t,this.array),n=Ht(n,this.array),s=Ht(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e*=this.itemSize,this.normalized&&(t=Ht(t,this.array),n=Ht(n,this.array),s=Ht(s,this.array),r=Ht(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Al&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}};var br=class extends qt{constructor(e,t,n){super(new Uint16Array(e),t,n)}};var Sr=class extends qt{constructor(e,t,n){super(new Uint32Array(e),t,n)}};var Mt=class extends qt{constructor(e,t,n){super(new Float32Array(e),t,n)}};var _u=0,Yt=new ot,_a=new Lt,Li=new z,Wt=new fi,vs=new fi,vt=new z,Kt=class extends xn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:_u++}),this.uuid=Ls(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(xc(e)?Sr:br)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);let n=this.attributes.normal;if(n!==void 0){let r=new kt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}let s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Yt.makeRotationFromQuaternion(e),this.applyMatrix4(Yt),this}rotateX(e){return Yt.makeRotationX(e),this.applyMatrix4(Yt),this}rotateY(e){return Yt.makeRotationY(e),this.applyMatrix4(Yt),this}rotateZ(e){return Yt.makeRotationZ(e),this.applyMatrix4(Yt),this}translate(e,t,n){return Yt.makeTranslation(e,t,n),this.applyMatrix4(Yt),this}scale(e,t,n){return Yt.makeScale(e,t,n),this.applyMatrix4(Yt),this}lookAt(e){return _a.lookAt(e),_a.updateMatrix(),this.applyMatrix4(_a.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Li).negate(),this.translate(Li.x,Li.y,Li.z),this}setFromPoints(e){let t=[];for(let n=0,s=e.length;n<s;n++){let r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Mt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new fi);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new z(-1/0,-1/0,-1/0),new z(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,s=t.length;n<s;n++){let r=t[n];Wt.setFromBufferAttribute(r),this.morphTargetsRelative?(vt.addVectors(this.boundingBox.min,Wt.min),this.boundingBox.expandByPoint(vt),vt.addVectors(this.boundingBox.max,Wt.max),this.boundingBox.expandByPoint(vt)):(this.boundingBox.expandByPoint(Wt.min),this.boundingBox.expandByPoint(Wt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ts);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new z,1/0);return}if(e){let n=this.boundingSphere.center;if(Wt.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){let a=t[r];vs.setFromBufferAttribute(a),this.morphTargetsRelative?(vt.addVectors(Wt.min,vs.min),Wt.expandByPoint(vt),vt.addVectors(Wt.max,vs.max),Wt.expandByPoint(vt)):(Wt.expandByPoint(vs.min),Wt.expandByPoint(vs.max))}Wt.getCenter(n);let s=0;for(let r=0,o=e.count;r<o;r++)vt.fromBufferAttribute(e,r),s=Math.max(s,n.distanceToSquared(vt));if(t)for(let r=0,o=t.length;r<o;r++){let a=t[r],c=this.morphTargetsRelative;for(let l=0,h=a.count;l<h;l++)vt.fromBufferAttribute(a,l),c&&(Li.fromBufferAttribute(e,l),vt.add(Li)),s=Math.max(s,n.distanceToSquared(vt))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let n=e.array,s=t.position.array,r=t.normal.array,o=t.uv.array,a=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new qt(new Float32Array(4*a),4));let c=this.getAttribute("tangent").array,l=[],h=[];for(let L=0;L<a;L++)l[L]=new z,h[L]=new z;let u=new z,f=new z,g=new z,_=new ze,p=new ze,d=new ze,y=new z,w=new z;function S(L,ee,Y){u.fromArray(s,L*3),f.fromArray(s,ee*3),g.fromArray(s,Y*3),_.fromArray(o,L*2),p.fromArray(o,ee*2),d.fromArray(o,Y*2),f.sub(u),g.sub(u),p.sub(_),d.sub(_);let V=1/(p.x*d.y-d.x*p.y);!isFinite(V)||(y.copy(f).multiplyScalar(d.y).addScaledVector(g,-p.y).multiplyScalar(V),w.copy(g).multiplyScalar(p.x).addScaledVector(f,-d.x).multiplyScalar(V),l[L].add(y),l[ee].add(y),l[Y].add(y),h[L].add(w),h[ee].add(w),h[Y].add(w))}let v=this.groups;v.length===0&&(v=[{start:0,count:n.length}]);for(let L=0,ee=v.length;L<ee;++L){let Y=v[L],V=Y.start,F=Y.count;for(let Z=V,K=V+F;Z<K;Z+=3)S(n[Z+0],n[Z+1],n[Z+2])}let b=new z,R=new z,D=new z,x=new z;function C(L){D.fromArray(r,L*3),x.copy(D);let ee=l[L];b.copy(ee),b.sub(D.multiplyScalar(D.dot(ee))).normalize(),R.crossVectors(x,ee);let V=R.dot(h[L])<0?-1:1;c[L*4]=b.x,c[L*4+1]=b.y,c[L*4+2]=b.z,c[L*4+3]=V}for(let L=0,ee=v.length;L<ee;++L){let Y=v[L],V=Y.start,F=Y.count;for(let Z=V,K=V+F;Z<K;Z+=3)C(n[Z+0]),C(n[Z+1]),C(n[Z+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new qt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,g=n.count;f<g;f++)n.setXYZ(f,0,0,0);let s=new z,r=new z,o=new z,a=new z,c=new z,l=new z,h=new z,u=new z;if(e)for(let f=0,g=e.count;f<g;f+=3){let _=e.getX(f+0),p=e.getX(f+1),d=e.getX(f+2);s.fromBufferAttribute(t,_),r.fromBufferAttribute(t,p),o.fromBufferAttribute(t,d),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),a.fromBufferAttribute(n,_),c.fromBufferAttribute(n,p),l.fromBufferAttribute(n,d),a.add(h),c.add(h),l.add(h),n.setXYZ(_,a.x,a.y,a.z),n.setXYZ(p,c.x,c.y,c.z),n.setXYZ(d,l.x,l.y,l.z)}else for(let f=0,g=t.count;f<g;f+=3)s.fromBufferAttribute(t,f+0),r.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)vt.fromBufferAttribute(e,t),vt.normalize(),e.setXYZ(t,vt.x,vt.y,vt.z)}toNonIndexed(){function e(a,c){let l=a.array,h=a.itemSize,u=a.normalized,f=new l.constructor(c.length*h),g=0,_=0;for(let p=0,d=c.length;p<d;p++){a.isInterleavedBufferAttribute?g=c[p]*a.data.stride+a.offset:g=c[p]*h;for(let y=0;y<h;y++)f[_++]=l[g++]}return new qt(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new Kt,n=this.index.array,s=this.attributes;for(let a in s){let c=s[a],l=e(c,n);t.setAttribute(a,l)}let r=this.morphAttributes;for(let a in r){let c=[],l=r[a];for(let h=0,u=l.length;h<u;h++){let f=l[h],g=e(f,n);c.push(g)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;let o=this.groups;for(let a=0,c=o.length;a<c;a++){let l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){let c=this.parameters;for(let l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};let t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let n=this.attributes;for(let c in n){let l=n[c];e.data.attributes[c]=l.toJSON(e.data)}let s={},r=!1;for(let c in this.morphAttributes){let l=this.morphAttributes[c],h=[];for(let u=0,f=l.length;u<f;u++){let g=l[u];h.push(g.toJSON(e.data))}h.length>0&&(s[c]=h,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);let o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));let a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let n=e.index;n!==null&&this.setIndex(n.clone(t));let s=e.attributes;for(let l in s){let h=s[l];this.setAttribute(l,h.clone(t))}let r=e.morphAttributes;for(let l in r){let h=[],u=r[l];for(let f=0,g=u.length;f<g;f++)h.push(u[f].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;let o=e.groups;for(let l=0,h=o.length;l<h;l++){let u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}let a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());let c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}},kl=new ot,Di=new Oa,va=new Ts,qn=new z,Zn=new z,Yn=new z,ya=new z,Ma=new z,wa=new z,ir=new z,sr=new z,rr=new z,ar=new ze,or=new ze,lr=new ze,ba=new z,cr=new z,bt=class extends Lt{constructor(e=new Kt,t=new wr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){let s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){let a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}raycast(e,t){let n=this.geometry,s=this.material,r=this.matrixWorld;if(s===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),va.copy(n.boundingSphere),va.applyMatrix4(r),e.ray.intersectsSphere(va)===!1)||(kl.copy(r).invert(),Di.copy(e.ray).applyMatrix4(kl),n.boundingBox!==null&&Di.intersectsBox(n.boundingBox)===!1))return;let o,a=n.index,c=n.attributes.position,l=n.morphAttributes.position,h=n.morphTargetsRelative,u=n.attributes.uv,f=n.attributes.uv2,g=n.groups,_=n.drawRange;if(a!==null)if(Array.isArray(s))for(let p=0,d=g.length;p<d;p++){let y=g[p],w=s[y.materialIndex],S=Math.max(y.start,_.start),v=Math.min(a.count,Math.min(y.start+y.count,_.start+_.count));for(let b=S,R=v;b<R;b+=3){let D=a.getX(b),x=a.getX(b+1),C=a.getX(b+2);o=hr(this,w,e,Di,c,l,h,u,f,D,x,C),o&&(o.faceIndex=Math.floor(b/3),o.face.materialIndex=y.materialIndex,t.push(o))}}else{let p=Math.max(0,_.start),d=Math.min(a.count,_.start+_.count);for(let y=p,w=d;y<w;y+=3){let S=a.getX(y),v=a.getX(y+1),b=a.getX(y+2);o=hr(this,s,e,Di,c,l,h,u,f,S,v,b),o&&(o.faceIndex=Math.floor(y/3),t.push(o))}}else if(c!==void 0)if(Array.isArray(s))for(let p=0,d=g.length;p<d;p++){let y=g[p],w=s[y.materialIndex],S=Math.max(y.start,_.start),v=Math.min(c.count,Math.min(y.start+y.count,_.start+_.count));for(let b=S,R=v;b<R;b+=3){let D=b,x=b+1,C=b+2;o=hr(this,w,e,Di,c,l,h,u,f,D,x,C),o&&(o.faceIndex=Math.floor(b/3),o.face.materialIndex=y.materialIndex,t.push(o))}}else{let p=Math.max(0,_.start),d=Math.min(c.count,_.start+_.count);for(let y=p,w=d;y<w;y+=3){let S=y,v=y+1,b=y+2;o=hr(this,s,e,Di,c,l,h,u,f,S,v,b),o&&(o.faceIndex=Math.floor(y/3),t.push(o))}}}};function vu(i,e,t,n,s,r,o,a){let c;if(e.side===$t?c=n.intersectTriangle(o,r,s,!0,a):c=n.intersectTriangle(s,r,o,e.side!==$n,a),c===null)return null;cr.copy(a),cr.applyMatrix4(i.matrixWorld);let l=t.ray.origin.distanceTo(cr);return l<t.near||l>t.far?null:{distance:l,point:cr.clone(),object:i}}function hr(i,e,t,n,s,r,o,a,c,l,h,u){qn.fromBufferAttribute(s,l),Zn.fromBufferAttribute(s,h),Yn.fromBufferAttribute(s,u);let f=i.morphTargetInfluences;if(r&&f){ir.set(0,0,0),sr.set(0,0,0),rr.set(0,0,0);for(let _=0,p=r.length;_<p;_++){let d=f[_],y=r[_];d!==0&&(ya.fromBufferAttribute(y,l),Ma.fromBufferAttribute(y,h),wa.fromBufferAttribute(y,u),o?(ir.addScaledVector(ya,d),sr.addScaledVector(Ma,d),rr.addScaledVector(wa,d)):(ir.addScaledVector(ya.sub(qn),d),sr.addScaledVector(Ma.sub(Zn),d),rr.addScaledVector(wa.sub(Yn),d)))}qn.add(ir),Zn.add(sr),Yn.add(rr)}i.isSkinnedMesh&&(i.boneTransform(l,qn),i.boneTransform(h,Zn),i.boneTransform(u,Yn));let g=vu(i,e,t,n,qn,Zn,Yn,ba);if(g){a&&(ar.fromBufferAttribute(a,l),or.fromBufferAttribute(a,h),lr.fromBufferAttribute(a,u),g.uv=cn.getUV(ba,qn,Zn,Yn,ar,or,lr,new ze)),c&&(ar.fromBufferAttribute(c,l),or.fromBufferAttribute(c,h),lr.fromBufferAttribute(c,u),g.uv2=cn.getUV(ba,qn,Zn,Yn,ar,or,lr,new ze));let _={a:l,b:h,c:u,normal:new z,materialIndex:0};cn.getNormal(qn,Zn,Yn,_.normal),g.face=_}return g}var pi=class extends Kt{constructor(e=1,t=1,n=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:r,depthSegments:o};let a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);let c=[],l=[],h=[],u=[],f=0,g=0;_("z","y","x",-1,-1,n,t,e,o,r,0),_("z","y","x",1,-1,n,t,-e,o,r,1),_("x","z","y",1,1,e,n,t,s,o,2),_("x","z","y",1,-1,e,n,-t,s,o,3),_("x","y","z",1,-1,e,t,n,s,r,4),_("x","y","z",-1,-1,e,t,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new Mt(l,3)),this.setAttribute("normal",new Mt(h,3)),this.setAttribute("uv",new Mt(u,2));function _(p,d,y,w,S,v,b,R,D,x,C){let L=v/D,ee=b/x,Y=v/2,V=b/2,F=R/2,Z=D+1,K=x+1,se=0,$=0,U=new z;for(let k=0;k<K;k++){let le=k*ee-V;for(let ie=0;ie<Z;ie++){let ue=ie*L-Y;U[p]=ue*w,U[d]=le*S,U[y]=F,l.push(U.x,U.y,U.z),U[p]=0,U[d]=0,U[y]=R>0?1:-1,h.push(U.x,U.y,U.z),u.push(ie/D),u.push(1-k/x),se+=1}}for(let k=0;k<x;k++)for(let le=0;le<D;le++){let ie=f+le+Z*k,ue=f+le+Z*(k+1),xe=f+(le+1)+Z*(k+1),Ae=f+(le+1)+Z*k;c.push(ie,ue,Ae),c.push(ue,xe,Ae),$+=6}a.addGroup(g,$,C),g+=$,f+=se}}static fromJSON(e){return new pi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function Yi(i){let e={};for(let t in i){e[t]={};for(let n in i[t]){let s=i[t][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?e[t][n]=s.clone():Array.isArray(s)?e[t][n]=s.slice():e[t][n]=s}}return e}function Tt(i){let e={};for(let t=0;t<i.length;t++){let n=Yi(i[t]);for(let s in n)e[s]=n[s]}return e}function yu(i){let e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}var Mu={clone:Yi,merge:Tt},wu=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,bu=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,Nn=class extends di{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=wu,this.fragmentShader=bu,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Yi(e.uniforms),this.uniformsGroups=yu(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(let s in this.uniforms){let o=this.uniforms[s].value;o&&o.isTexture?t.uniforms[s]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[s]={type:"m4",value:o.toArray()}:t.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let n={};for(let s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}},Tr=class extends Lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ot,this.projectionMatrix=new ot,this.projectionMatrixInverse=new ot}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},It=class extends Tr{constructor(e=50,t=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=Cl*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(na*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Cl*2*Math.atan(Math.tan(na*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,s,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(na*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,r=-.5*s,o=this.view;if(this.view!==null&&this.view.enabled){let c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*s/c,t-=o.offsetY*n/l,s*=o.width/c,n*=o.height/l}let a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}},Ni=90,Oi=1,Fa=class extends Lt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;let s=new It(Ni,Oi,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new z(1,0,0)),this.add(s);let r=new It(Ni,Oi,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new z(-1,0,0)),this.add(r);let o=new It(Ni,Oi,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new z(0,1,0)),this.add(o);let a=new It(Ni,Oi,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new z(0,-1,0)),this.add(a);let c=new It(Ni,Oi,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new z(0,0,1)),this.add(c);let l=new It(Ni,Oi,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new z(0,0,-1)),this.add(l)}update(e,t){this.parent===null&&this.updateMatrixWorld();let n=this.renderTarget,[s,r,o,a,c,l]=this.children,h=e.getRenderTarget(),u=e.toneMapping,f=e.xr.enabled;e.toneMapping=Ln,e.xr.enabled=!1;let g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,s),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=g,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(h),e.toneMapping=u,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}},Ar=class extends Dt{constructor(e,t,n,s,r,o,a,c,l,h){e=e!==void 0?e:[],t=t!==void 0?t:Xi,super(e,t,n,s,r,o,a,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},za=class extends Dn{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let n={width:e,height:e,depth:1},s=[n,n,n,n,n,n];this.texture=new Ar(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:yt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new pi(5,5,5),r=new Nn({name:"CubemapFromEquirect",uniforms:Yi(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:$t,blending:Kn});r.uniforms.tEquirect.value=t;let o=new bt(s,r),a=t.minFilter;return t.minFilter===Is&&(t.minFilter=yt),new Fa(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,s){let r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,s);e.setRenderTarget(r)}},Sa=new z,Su=new z,Tu=new kt,Rn=class{constructor(e=new z(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){let s=Sa.subVectors(n,t).cross(Su.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let n=e.delta(Sa),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let n=t||Tu.getNormalMatrix(e),s=this.coplanarPoint(Sa).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}},Fi=new Ts,ur=new z,Er=class{constructor(e=new Rn,t=new Rn,n=new Rn,s=new Rn,r=new Rn,o=new Rn){this.planes=[e,t,n,s,r,o]}set(e,t,n,s,r,o){let a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(e){let t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){let t=this.planes,n=e.elements,s=n[0],r=n[1],o=n[2],a=n[3],c=n[4],l=n[5],h=n[6],u=n[7],f=n[8],g=n[9],_=n[10],p=n[11],d=n[12],y=n[13],w=n[14],S=n[15];return t[0].setComponents(a-s,u-c,p-f,S-d).normalize(),t[1].setComponents(a+s,u+c,p+f,S+d).normalize(),t[2].setComponents(a+r,u+l,p+g,S+y).normalize(),t[3].setComponents(a-r,u-l,p-g,S-y).normalize(),t[4].setComponents(a-o,u-h,p-_,S-w).normalize(),t[5].setComponents(a+o,u+h,p+_,S+w).normalize(),this}intersectsObject(e){let t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Fi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Fi)}intersectsSprite(e){return Fi.center.set(0,0,0),Fi.radius=.7071067811865476,Fi.applyMatrix4(e.matrixWorld),this.intersectsSphere(Fi)}intersectsSphere(e){let t=this.planes,n=e.center,s=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(e){let t=this.planes;for(let n=0;n<6;n++){let s=t[n];if(ur.x=s.normal.x>0?e.max.x:e.min.x,ur.y=s.normal.y>0?e.max.y:e.min.y,ur.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(ur)<0)return!1}return!0}containsPoint(e){let t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function vc(){let i=null,e=!1,t=null,n=null;function s(r,o){t(r,o),n=i.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(s),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){i=r}}}function Au(i,e){let t=e.isWebGL2,n=new WeakMap;function s(l,h){let u=l.array,f=l.usage,g=i.createBuffer();i.bindBuffer(h,g),i.bufferData(h,u,f),l.onUploadCallback();let _;if(u instanceof Float32Array)_=5126;else if(u instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(t)_=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else _=5123;else if(u instanceof Int16Array)_=5122;else if(u instanceof Uint32Array)_=5125;else if(u instanceof Int32Array)_=5124;else if(u instanceof Int8Array)_=5120;else if(u instanceof Uint8Array)_=5121;else if(u instanceof Uint8ClampedArray)_=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:g,type:_,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version}}function r(l,h,u){let f=h.array,g=h.updateRange;i.bindBuffer(u,l),g.count===-1?i.bufferSubData(u,0,f):(t?i.bufferSubData(u,g.offset*f.BYTES_PER_ELEMENT,f,g.offset,g.count):i.bufferSubData(u,g.offset*f.BYTES_PER_ELEMENT,f.subarray(g.offset,g.offset+g.count)),g.count=-1)}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);let h=n.get(l);h&&(i.deleteBuffer(h.buffer),n.delete(l))}function c(l,h){if(l.isGLBufferAttribute){let f=n.get(l);(!f||f.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);let u=n.get(l);u===void 0?n.set(l,s(l,h)):u.version<l.version&&(r(u.buffer,l,h),u.version=l.version)}return{get:o,remove:a,update:c}}var As=class extends Kt{constructor(e=1,t=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s};let r=e/2,o=t/2,a=Math.floor(n),c=Math.floor(s),l=a+1,h=c+1,u=e/a,f=t/c,g=[],_=[],p=[],d=[];for(let y=0;y<h;y++){let w=y*f-o;for(let S=0;S<l;S++){let v=S*u-r;_.push(v,-w,0),p.push(0,0,1),d.push(S/a),d.push(1-y/c)}}for(let y=0;y<c;y++)for(let w=0;w<a;w++){let S=w+l*y,v=w+l*(y+1),b=w+1+l*(y+1),R=w+1+l*y;g.push(S,v,R),g.push(v,b,R)}this.setIndex(g),this.setAttribute("position",new Mt(_,3)),this.setAttribute("normal",new Mt(p,3)),this.setAttribute("uv",new Mt(d,2))}static fromJSON(e){return new As(e.width,e.height,e.widthSegments,e.heightSegments)}},Eu=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Cu=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Pu=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Ru=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Iu=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Lu=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Du="vec3 transformed = vec3( position );",Nu=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Ou=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Fu=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,zu=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Uu=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Bu=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ku=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Vu=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Hu=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Gu=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Wu=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Xu=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,qu=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Zu=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Yu=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Ju=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,$u=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Ku=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,ju=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Qu="gl_FragColor = linearToOutputTexel( gl_FragColor );",ef=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,tf=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,nf=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,sf=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,rf=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,af=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,of=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,lf=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,cf=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,hf=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,uf=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ff=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,df=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,pf=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,mf=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,gf=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,xf=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,_f=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,vf=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,yf=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Mf=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,wf=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,bf=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Sf=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Tf=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Af=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Ef=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Cf=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Pf=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Rf=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,If=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Lf=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Df=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Nf=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Of=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ff=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,zf=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Uf=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Bf=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,kf=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Vf=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Hf=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Gf=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Wf=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Xf=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,qf=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Zf=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Yf=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Jf=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,$f=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Kf=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,jf=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Qf=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,ed=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,td=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,nd=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,id=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,sd=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,rd=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,ad=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,od=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,ld=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,cd=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,hd=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,ud=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,fd=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,dd=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,pd=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,md=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,gd=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,xd=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,_d=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,vd=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,yd=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Md=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,wd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,bd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Sd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Td=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,Ad=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Ed=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Cd=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Pd=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Rd=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Id=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Ld=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Dd=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Nd=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Od=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Fd=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zd=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ud=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Bd=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kd=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Vd=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hd=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Gd=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Wd=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Xd=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,qd=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Zd=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yd=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Jd=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$d=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Kd=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jd=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Qd=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ep=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,np=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ip=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,He={alphamap_fragment:Eu,alphamap_pars_fragment:Cu,alphatest_fragment:Pu,alphatest_pars_fragment:Ru,aomap_fragment:Iu,aomap_pars_fragment:Lu,begin_vertex:Du,beginnormal_vertex:Nu,bsdfs:Ou,iridescence_fragment:Fu,bumpmap_pars_fragment:zu,clipping_planes_fragment:Uu,clipping_planes_pars_fragment:Bu,clipping_planes_pars_vertex:ku,clipping_planes_vertex:Vu,color_fragment:Hu,color_pars_fragment:Gu,color_pars_vertex:Wu,color_vertex:Xu,common:qu,cube_uv_reflection_fragment:Zu,defaultnormal_vertex:Yu,displacementmap_pars_vertex:Ju,displacementmap_vertex:$u,emissivemap_fragment:Ku,emissivemap_pars_fragment:ju,encodings_fragment:Qu,encodings_pars_fragment:ef,envmap_fragment:tf,envmap_common_pars_fragment:nf,envmap_pars_fragment:sf,envmap_pars_vertex:rf,envmap_physical_pars_fragment:xf,envmap_vertex:af,fog_vertex:of,fog_pars_vertex:lf,fog_fragment:cf,fog_pars_fragment:hf,gradientmap_pars_fragment:uf,lightmap_fragment:ff,lightmap_pars_fragment:df,lights_lambert_fragment:pf,lights_lambert_pars_fragment:mf,lights_pars_begin:gf,lights_toon_fragment:_f,lights_toon_pars_fragment:vf,lights_phong_fragment:yf,lights_phong_pars_fragment:Mf,lights_physical_fragment:wf,lights_physical_pars_fragment:bf,lights_fragment_begin:Sf,lights_fragment_maps:Tf,lights_fragment_end:Af,logdepthbuf_fragment:Ef,logdepthbuf_pars_fragment:Cf,logdepthbuf_pars_vertex:Pf,logdepthbuf_vertex:Rf,map_fragment:If,map_pars_fragment:Lf,map_particle_fragment:Df,map_particle_pars_fragment:Nf,metalnessmap_fragment:Of,metalnessmap_pars_fragment:Ff,morphcolor_vertex:zf,morphnormal_vertex:Uf,morphtarget_pars_vertex:Bf,morphtarget_vertex:kf,normal_fragment_begin:Vf,normal_fragment_maps:Hf,normal_pars_fragment:Gf,normal_pars_vertex:Wf,normal_vertex:Xf,normalmap_pars_fragment:qf,clearcoat_normal_fragment_begin:Zf,clearcoat_normal_fragment_maps:Yf,clearcoat_pars_fragment:Jf,iridescence_pars_fragment:$f,output_fragment:Kf,packing:jf,premultiplied_alpha_fragment:Qf,project_vertex:ed,dithering_fragment:td,dithering_pars_fragment:nd,roughnessmap_fragment:id,roughnessmap_pars_fragment:sd,shadowmap_pars_fragment:rd,shadowmap_pars_vertex:ad,shadowmap_vertex:od,shadowmask_pars_fragment:ld,skinbase_vertex:cd,skinning_pars_vertex:hd,skinning_vertex:ud,skinnormal_vertex:fd,specularmap_fragment:dd,specularmap_pars_fragment:pd,tonemapping_fragment:md,tonemapping_pars_fragment:gd,transmission_fragment:xd,transmission_pars_fragment:_d,uv_pars_fragment:vd,uv_pars_vertex:yd,uv_vertex:Md,uv2_pars_fragment:wd,uv2_pars_vertex:bd,uv2_vertex:Sd,worldpos_vertex:Td,background_vert:Ad,background_frag:Ed,cube_vert:Cd,cube_frag:Pd,depth_vert:Rd,depth_frag:Id,distanceRGBA_vert:Ld,distanceRGBA_frag:Dd,equirect_vert:Nd,equirect_frag:Od,linedashed_vert:Fd,linedashed_frag:zd,meshbasic_vert:Ud,meshbasic_frag:Bd,meshlambert_vert:kd,meshlambert_frag:Vd,meshmatcap_vert:Hd,meshmatcap_frag:Gd,meshnormal_vert:Wd,meshnormal_frag:Xd,meshphong_vert:qd,meshphong_frag:Zd,meshphysical_vert:Yd,meshphysical_frag:Jd,meshtoon_vert:$d,meshtoon_frag:Kd,points_vert:jd,points_frag:Qd,shadow_vert:ep,shadow_frag:tp,sprite_vert:np,sprite_frag:ip},ve={common:{diffuse:{value:new Ye(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new kt},uv2Transform:{value:new kt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ze(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ye(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ye(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new kt}},sprite:{diffuse:{value:new Ye(16777215)},opacity:{value:1},center:{value:new ze(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new kt}}},pn={basic:{uniforms:Tt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.fog]),vertexShader:He.meshbasic_vert,fragmentShader:He.meshbasic_frag},lambert:{uniforms:Tt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,ve.lights,{emissive:{value:new Ye(0)}}]),vertexShader:He.meshlambert_vert,fragmentShader:He.meshlambert_frag},phong:{uniforms:Tt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,ve.lights,{emissive:{value:new Ye(0)},specular:{value:new Ye(1118481)},shininess:{value:30}}]),vertexShader:He.meshphong_vert,fragmentShader:He.meshphong_frag},standard:{uniforms:Tt([ve.common,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.roughnessmap,ve.metalnessmap,ve.fog,ve.lights,{emissive:{value:new Ye(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:He.meshphysical_vert,fragmentShader:He.meshphysical_frag},toon:{uniforms:Tt([ve.common,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.gradientmap,ve.fog,ve.lights,{emissive:{value:new Ye(0)}}]),vertexShader:He.meshtoon_vert,fragmentShader:He.meshtoon_frag},matcap:{uniforms:Tt([ve.common,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,{matcap:{value:null}}]),vertexShader:He.meshmatcap_vert,fragmentShader:He.meshmatcap_frag},points:{uniforms:Tt([ve.points,ve.fog]),vertexShader:He.points_vert,fragmentShader:He.points_frag},dashed:{uniforms:Tt([ve.common,ve.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:He.linedashed_vert,fragmentShader:He.linedashed_frag},depth:{uniforms:Tt([ve.common,ve.displacementmap]),vertexShader:He.depth_vert,fragmentShader:He.depth_frag},normal:{uniforms:Tt([ve.common,ve.bumpmap,ve.normalmap,ve.displacementmap,{opacity:{value:1}}]),vertexShader:He.meshnormal_vert,fragmentShader:He.meshnormal_frag},sprite:{uniforms:Tt([ve.sprite,ve.fog]),vertexShader:He.sprite_vert,fragmentShader:He.sprite_frag},background:{uniforms:{uvTransform:{value:new kt},t2D:{value:null}},vertexShader:He.background_vert,fragmentShader:He.background_frag},cube:{uniforms:Tt([ve.envmap,{opacity:{value:1}}]),vertexShader:He.cube_vert,fragmentShader:He.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:He.equirect_vert,fragmentShader:He.equirect_frag},distanceRGBA:{uniforms:Tt([ve.common,ve.displacementmap,{referencePosition:{value:new z},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:He.distanceRGBA_vert,fragmentShader:He.distanceRGBA_frag},shadow:{uniforms:Tt([ve.lights,ve.fog,{color:{value:new Ye(0)},opacity:{value:1}}]),vertexShader:He.shadow_vert,fragmentShader:He.shadow_frag}};pn.physical={uniforms:Tt([pn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ze(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ye(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ze},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ye(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ye(1,1,1)},specularColorMap:{value:null}}]),vertexShader:He.meshphysical_vert,fragmentShader:He.meshphysical_frag};function sp(i,e,t,n,s,r){let o=new Ye(0),a=s===!0?0:1,c,l,h=null,u=0,f=null;function g(p,d){let y=!1,w=d.isScene===!0?d.background:null;w&&w.isTexture&&(w=e.get(w));let S=i.xr,v=S.getSession&&S.getSession();v&&v.environmentBlendMode==="additive"&&(w=null),w===null?_(o,a):w&&w.isColor&&(_(w,1),y=!0),(i.autoClear||y)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),w&&(w.isCubeTexture||w.mapping===Dr)?(l===void 0&&(l=new bt(new pi(1,1,1),new Nn({name:"BackgroundCubeMaterial",uniforms:Yi(pn.cube.uniforms),vertexShader:pn.cube.vertexShader,fragmentShader:pn.cube.fragmentShader,side:$t,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(b,R,D){this.matrixWorld.copyPosition(D.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=w,l.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,(h!==w||u!==w.version||f!==i.toneMapping)&&(l.material.needsUpdate=!0,h=w,u=w.version,f=i.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null)):w&&w.isTexture&&(c===void 0&&(c=new bt(new As(2,2),new Nn({name:"BackgroundMaterial",uniforms:Yi(pn.background.uniforms),vertexShader:pn.background.vertexShader,fragmentShader:pn.background.fragmentShader,side:Wi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=w,w.matrixAutoUpdate===!0&&w.updateMatrix(),c.material.uniforms.uvTransform.value.copy(w.matrix),(h!==w||u!==w.version||f!==i.toneMapping)&&(c.material.needsUpdate=!0,h=w,u=w.version,f=i.toneMapping),c.layers.enableAll(),p.unshift(c,c.geometry,c.material,0,0,null))}function _(p,d){t.buffers.color.setClear(p.r,p.g,p.b,d,r)}return{getClearColor:function(){return o},setClearColor:function(p,d=1){o.set(p),a=d,_(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(p){a=p,_(o,a)},render:g}}function rp(i,e,t,n){let s=i.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},c=d(null),l=c,h=!1;function u(F,Z,K,se,$){let U=!1;if(o){let k=p(se,K,Z);l!==k&&(l=k,g(l.object)),U=y(F,se,K,$),U&&w(F,se,K,$)}else{let k=Z.wireframe===!0;(l.geometry!==se.id||l.program!==K.id||l.wireframe!==k)&&(l.geometry=se.id,l.program=K.id,l.wireframe=k,U=!0)}$!==null&&t.update($,34963),(U||h)&&(h=!1,x(F,Z,K,se),$!==null&&i.bindBuffer(34963,t.get($).buffer))}function f(){return n.isWebGL2?i.createVertexArray():r.createVertexArrayOES()}function g(F){return n.isWebGL2?i.bindVertexArray(F):r.bindVertexArrayOES(F)}function _(F){return n.isWebGL2?i.deleteVertexArray(F):r.deleteVertexArrayOES(F)}function p(F,Z,K){let se=K.wireframe===!0,$=a[F.id];$===void 0&&($={},a[F.id]=$);let U=$[Z.id];U===void 0&&(U={},$[Z.id]=U);let k=U[se];return k===void 0&&(k=d(f()),U[se]=k),k}function d(F){let Z=[],K=[],se=[];for(let $=0;$<s;$++)Z[$]=0,K[$]=0,se[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Z,enabledAttributes:K,attributeDivisors:se,object:F,attributes:{},index:null}}function y(F,Z,K,se){let $=l.attributes,U=Z.attributes,k=0,le=K.getAttributes();for(let ie in le)if(le[ie].location>=0){let xe=$[ie],Ae=U[ie];if(Ae===void 0&&(ie==="instanceMatrix"&&F.instanceMatrix&&(Ae=F.instanceMatrix),ie==="instanceColor"&&F.instanceColor&&(Ae=F.instanceColor)),xe===void 0||xe.attribute!==Ae||Ae&&xe.data!==Ae.data)return!0;k++}return l.attributesNum!==k||l.index!==se}function w(F,Z,K,se){let $={},U=Z.attributes,k=0,le=K.getAttributes();for(let ie in le)if(le[ie].location>=0){let xe=U[ie];xe===void 0&&(ie==="instanceMatrix"&&F.instanceMatrix&&(xe=F.instanceMatrix),ie==="instanceColor"&&F.instanceColor&&(xe=F.instanceColor));let Ae={};Ae.attribute=xe,xe&&xe.data&&(Ae.data=xe.data),$[ie]=Ae,k++}l.attributes=$,l.attributesNum=k,l.index=se}function S(){let F=l.newAttributes;for(let Z=0,K=F.length;Z<K;Z++)F[Z]=0}function v(F){b(F,0)}function b(F,Z){let K=l.newAttributes,se=l.enabledAttributes,$=l.attributeDivisors;K[F]=1,se[F]===0&&(i.enableVertexAttribArray(F),se[F]=1),$[F]!==Z&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](F,Z),$[F]=Z)}function R(){let F=l.newAttributes,Z=l.enabledAttributes;for(let K=0,se=Z.length;K<se;K++)Z[K]!==F[K]&&(i.disableVertexAttribArray(K),Z[K]=0)}function D(F,Z,K,se,$,U){n.isWebGL2===!0&&(K===5124||K===5125)?i.vertexAttribIPointer(F,Z,K,$,U):i.vertexAttribPointer(F,Z,K,se,$,U)}function x(F,Z,K,se){if(n.isWebGL2===!1&&(F.isInstancedMesh||se.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();let $=se.attributes,U=K.getAttributes(),k=Z.defaultAttributeValues;for(let le in U){let ie=U[le];if(ie.location>=0){let ue=$[le];if(ue===void 0&&(le==="instanceMatrix"&&F.instanceMatrix&&(ue=F.instanceMatrix),le==="instanceColor"&&F.instanceColor&&(ue=F.instanceColor)),ue!==void 0){let xe=ue.normalized,Ae=ue.itemSize,q=t.get(ue);if(q===void 0)continue;let Ue=q.buffer,Re=q.type,De=q.bytesPerElement;if(ue.isInterleavedBufferAttribute){let Te=ue.data,We=Te.stride,Fe=ue.offset;if(Te.isInstancedInterleavedBuffer){for(let Le=0;Le<ie.locationSize;Le++)b(ie.location+Le,Te.meshPerAttribute);F.isInstancedMesh!==!0&&se._maxInstanceCount===void 0&&(se._maxInstanceCount=Te.meshPerAttribute*Te.count)}else for(let Le=0;Le<ie.locationSize;Le++)v(ie.location+Le);i.bindBuffer(34962,Ue);for(let Le=0;Le<ie.locationSize;Le++)D(ie.location+Le,Ae/ie.locationSize,Re,xe,We*De,(Fe+Ae/ie.locationSize*Le)*De)}else{if(ue.isInstancedBufferAttribute){for(let Te=0;Te<ie.locationSize;Te++)b(ie.location+Te,ue.meshPerAttribute);F.isInstancedMesh!==!0&&se._maxInstanceCount===void 0&&(se._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let Te=0;Te<ie.locationSize;Te++)v(ie.location+Te);i.bindBuffer(34962,Ue);for(let Te=0;Te<ie.locationSize;Te++)D(ie.location+Te,Ae/ie.locationSize,Re,xe,Ae*De,Ae/ie.locationSize*Te*De)}}else if(k!==void 0){let xe=k[le];if(xe!==void 0)switch(xe.length){case 2:i.vertexAttrib2fv(ie.location,xe);break;case 3:i.vertexAttrib3fv(ie.location,xe);break;case 4:i.vertexAttrib4fv(ie.location,xe);break;default:i.vertexAttrib1fv(ie.location,xe)}}}}R()}function C(){Y();for(let F in a){let Z=a[F];for(let K in Z){let se=Z[K];for(let $ in se)_(se[$].object),delete se[$];delete Z[K]}delete a[F]}}function L(F){if(a[F.id]===void 0)return;let Z=a[F.id];for(let K in Z){let se=Z[K];for(let $ in se)_(se[$].object),delete se[$];delete Z[K]}delete a[F.id]}function ee(F){for(let Z in a){let K=a[Z];if(K[F.id]===void 0)continue;let se=K[F.id];for(let $ in se)_(se[$].object),delete se[$];delete K[F.id]}}function Y(){V(),h=!0,l!==c&&(l=c,g(l.object))}function V(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:u,reset:Y,resetDefaultState:V,dispose:C,releaseStatesOfGeometry:L,releaseStatesOfProgram:ee,initAttributes:S,enableAttribute:v,disableUnusedAttributes:R}}function ap(i,e,t,n){let s=n.isWebGL2,r;function o(l){r=l}function a(l,h){i.drawArrays(r,l,h),t.update(h,r,1)}function c(l,h,u){if(u===0)return;let f,g;if(s)f=i,g="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[g](r,l,h,u),t.update(h,r,u)}this.setMode=o,this.render=a,this.renderInstances=c}function op(i,e,t){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){let D=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(D){if(D==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";D="mediump"}return D==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let o=typeof WebGL2RenderingContext<"u"&&i instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&i instanceof WebGL2ComputeRenderingContext,a=t.precision!==void 0?t.precision:"highp",c=r(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);let l=o||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,u=i.getParameter(34930),f=i.getParameter(35660),g=i.getParameter(3379),_=i.getParameter(34076),p=i.getParameter(34921),d=i.getParameter(36347),y=i.getParameter(36348),w=i.getParameter(36349),S=f>0,v=o||e.has("OES_texture_float"),b=S&&v,R=o?i.getParameter(36183):0;return{isWebGL2:o,drawBuffers:l,getMaxAnisotropy:s,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:g,maxCubemapSize:_,maxAttributes:p,maxVertexUniforms:d,maxVaryings:y,maxFragmentUniforms:w,vertexTextures:S,floatFragmentTextures:v,floatVertexTextures:b,maxSamples:R}}function lp(i){let e=this,t=null,n=0,s=!1,r=!1,o=new Rn,a=new kt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,g){let _=u.length!==0||f||n!==0||s;return s=f,t=h(u,g,0),n=u.length,_},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,l()},this.setState=function(u,f,g){let _=u.clippingPlanes,p=u.clipIntersection,d=u.clipShadows,y=i.get(u);if(!s||_===null||_.length===0||r&&!d)r?h(null):l();else{let w=r?0:n,S=w*4,v=y.clippingState||null;c.value=v,v=h(_,f,S,g);for(let b=0;b!==S;++b)v[b]=t[b];y.clippingState=v,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=w}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,f,g,_){let p=u!==null?u.length:0,d=null;if(p!==0){if(d=c.value,_!==!0||d===null){let y=g+p*4,w=f.matrixWorldInverse;a.getNormalMatrix(w),(d===null||d.length<y)&&(d=new Float32Array(y));for(let S=0,v=g;S!==p;++S,v+=4)o.copy(u[S]).applyMatrix4(w,a),o.normal.toArray(d,v),d[v+3]=o.constant}c.value=d,c.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,d}}function cp(i){let e=new WeakMap;function t(o,a){return a===Pa?o.mapping=Xi:a===Ra&&(o.mapping=qi),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){let a=o.mapping;if(a===Pa||a===Ra)if(e.has(o)){let c=e.get(o).texture;return t(c,o.mapping)}else{let c=o.image;if(c&&c.height>0){let l=new za(c.height/2);return l.fromEquirectangularTexture(i,o),e.set(o,l),o.addEventListener("dispose",s),t(l.texture,o.mapping)}else return null}}return o}function s(o){let a=o.target;a.removeEventListener("dispose",s);let c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}var Ua=class extends Tr{constructor(e=-1,t=1,n=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2,r=n-e,o=n+e,a=s+t,c=s-t;if(this.view!==null&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=h*this.view.offsetY,c=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}},Bi=4,Vl=[.125,.215,.35,.446,.526,.582],ai=20,Ta=new Ua,Hl=new Ye,Aa=null,ri=(1+Math.sqrt(5))/2,zi=1/ri,Gl=[new z(1,1,1),new z(-1,1,1),new z(1,1,-1),new z(-1,1,-1),new z(0,ri,zi),new z(0,ri,-zi),new z(zi,0,ri),new z(-zi,0,ri),new z(ri,zi,0),new z(-ri,zi,0)],Ji=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,s=100){Aa=this._renderer.getRenderTarget(),this._setSize(256);let r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,s,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=ql(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Xl(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Aa),e.scissorTest=!1,fr(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Xi||e.mapping===qi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Aa=this._renderer.getRenderTarget();let n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:yt,minFilter:yt,generateMipmaps:!1,type:mn,format:Jt,encoding:gn,depthBuffer:!1},s=Wl(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Wl(e,t,n);let{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=hp(r)),this._blurMaterial=up(r,e,t)}return s}_compileMaterial(e){let t=new bt(this._lodPlanes[0],e);this._renderer.compile(t,Ta)}_sceneToCubeUV(e,t,n,s){let a=new It(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(Hl),h.toneMapping=Ln,h.autoClear=!1;let g=new wr({name:"PMREM.Background",side:$t,depthWrite:!1,depthTest:!1}),_=new bt(new pi,g),p=!1,d=e.background;d?d.isColor&&(g.color.copy(d),e.background=null,p=!0):(g.color.copy(Hl),p=!0);for(let y=0;y<6;y++){let w=y%3;w===0?(a.up.set(0,c[y],0),a.lookAt(l[y],0,0)):w===1?(a.up.set(0,0,c[y]),a.lookAt(0,l[y],0)):(a.up.set(0,c[y],0),a.lookAt(0,0,l[y]));let S=this._cubeSize;fr(s,w*S,y>2?S:0,S,S),h.setRenderTarget(s),p&&h.render(_,a),h.render(e,a)}_.geometry.dispose(),_.material.dispose(),h.toneMapping=f,h.autoClear=u,e.background=d}_textureToCubeUV(e,t){let n=this._renderer,s=e.mapping===Xi||e.mapping===qi;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=ql()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Xl());let r=s?this._cubemapMaterial:this._equirectMaterial,o=new bt(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;let c=this._cubeSize;fr(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,Ta)}_applyPMREM(e){let t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){let r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=Gl[(s-1)%Gl.length];this._blur(e,s-1,s,r,o)}t.autoClear=n}_blur(e,t,n,s,r){let o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,s,"latitudinal",r),this._halfBlur(o,e,n,n,s,"longitudinal",r)}_halfBlur(e,t,n,s,r,o,a){let c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");let h=3,u=new bt(this._lodPlanes[s],l),f=l.uniforms,g=this._sizeLods[n]-1,_=isFinite(r)?Math.PI/(2*g):2*Math.PI/(2*ai-1),p=r/_,d=isFinite(r)?1+Math.floor(h*p):ai;d>ai&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${d} samples when the maximum is set to ${ai}`);let y=[],w=0;for(let D=0;D<ai;++D){let x=D/p,C=Math.exp(-x*x/2);y.push(C),D===0?w+=C:D<d&&(w+=2*C)}for(let D=0;D<y.length;D++)y[D]=y[D]/w;f.envMap.value=e.texture,f.samples.value=d,f.weights.value=y,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);let{_lodMax:S}=this;f.dTheta.value=_,f.mipInt.value=S-n;let v=this._sizeLods[s],b=3*v*(s>S-Bi?s-S+Bi:0),R=4*(this._cubeSize-v);fr(t,b,R,3*v,2*v),c.setRenderTarget(t),c.render(u,Ta)}};function hp(i){let e=[],t=[],n=[],s=i,r=i-Bi+1+Vl.length;for(let o=0;o<r;o++){let a=Math.pow(2,s);t.push(a);let c=1/a;o>i-Bi?c=Vl[o-i+Bi-1]:o===0&&(c=0),n.push(c);let l=1/(a-2),h=-l,u=1+l,f=[h,h,u,h,u,u,h,h,u,u,h,u],g=6,_=6,p=3,d=2,y=1,w=new Float32Array(p*_*g),S=new Float32Array(d*_*g),v=new Float32Array(y*_*g);for(let R=0;R<g;R++){let D=R%3*2/3-1,x=R>2?0:-1,C=[D,x,0,D+2/3,x,0,D+2/3,x+1,0,D,x,0,D+2/3,x+1,0,D,x+1,0];w.set(C,p*_*R),S.set(f,d*_*R);let L=[R,R,R,R,R,R];v.set(L,y*_*R)}let b=new Kt;b.setAttribute("position",new qt(w,p)),b.setAttribute("uv",new qt(S,d)),b.setAttribute("faceIndex",new qt(v,y)),e.push(b),s>Bi&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Wl(i,e,t){let n=new Dn(i,e,t);return n.texture.mapping=Dr,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function fr(i,e,t,n,s){i.viewport.set(e,t,n,s),i.scissor.set(e,t,n,s)}function up(i,e,t){let n=new Float32Array(ai),s=new z(0,1,0);return new Nn({name:"SphericalGaussianBlur",defines:{n:ai,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:po(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function Xl(){return new Nn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:po(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function ql(){return new Nn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:po(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function po(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function fp(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){let c=a.mapping,l=c===Pa||c===Ra,h=c===Xi||c===qi;if(l||h)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let u=e.get(a);return t===null&&(t=new Ji(i)),u=l?t.fromEquirectangular(a,u):t.fromCubemap(a,u),e.set(a,u),u.texture}else{if(e.has(a))return e.get(a).texture;{let u=a.image;if(l&&u&&u.height>0||h&&u&&s(u)){t===null&&(t=new Ji(i));let f=l?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",r),f.texture}else return null}}}return a}function s(a){let c=0,l=6;for(let h=0;h<l;h++)a[h]!==void 0&&c++;return c===l}function r(a){let c=a.target;c.removeEventListener("dispose",r);let l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function dp(i){let e={};function t(n){if(e[n]!==void 0)return e[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return e[n]=s,s}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){let s=t(n);return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function pp(i,e,t,n){let s={},r=new WeakMap;function o(u){let f=u.target;f.index!==null&&e.remove(f.index);for(let _ in f.attributes)e.remove(f.attributes[_]);f.removeEventListener("dispose",o),delete s[f.id];let g=r.get(f);g&&(e.remove(g),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(u,f){return s[f.id]===!0||(f.addEventListener("dispose",o),s[f.id]=!0,t.memory.geometries++),f}function c(u){let f=u.attributes;for(let _ in f)e.update(f[_],34962);let g=u.morphAttributes;for(let _ in g){let p=g[_];for(let d=0,y=p.length;d<y;d++)e.update(p[d],34962)}}function l(u){let f=[],g=u.index,_=u.attributes.position,p=0;if(g!==null){let w=g.array;p=g.version;for(let S=0,v=w.length;S<v;S+=3){let b=w[S+0],R=w[S+1],D=w[S+2];f.push(b,R,R,D,D,b)}}else{let w=_.array;p=_.version;for(let S=0,v=w.length/3-1;S<v;S+=3){let b=S+0,R=S+1,D=S+2;f.push(b,R,R,D,D,b)}}let d=new(xc(f)?Sr:br)(f,1);d.version=p;let y=r.get(u);y&&e.remove(y),r.set(u,d)}function h(u){let f=r.get(u);if(f){let g=u.index;g!==null&&f.version<g.version&&l(u)}else l(u);return r.get(u)}return{get:a,update:c,getWireframeAttribute:h}}function mp(i,e,t,n){let s=n.isWebGL2,r;function o(f){r=f}let a,c;function l(f){a=f.type,c=f.bytesPerElement}function h(f,g){i.drawElements(r,g,a,f*c),t.update(g,r,1)}function u(f,g,_){if(_===0)return;let p,d;if(s)p=i,d="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[d](r,g,a,f*c,_),t.update(g,r,_)}this.setMode=o,this.setIndex=l,this.render=h,this.renderInstances=u}function gp(i){let e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(r/3);break;case 1:t.lines+=a*(r/2);break;case 3:t.lines+=a*(r-1);break;case 2:t.lines+=a*r;break;case 0:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function s(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:n}}function xp(i,e){return i[0]-e[0]}function _p(i,e){return Math.abs(e[1])-Math.abs(i[1])}function vp(i,e,t){let n={},s=new Float32Array(8),r=new WeakMap,o=new _t,a=[];for(let l=0;l<8;l++)a[l]=[l,0];function c(l,h,u,f){let g=l.morphTargetInfluences;if(e.isWebGL2===!0){let _=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,p=_!==void 0?_.length:0,d=r.get(h);if(d===void 0||d.count!==p){let Z=function(){V.dispose(),r.delete(h),h.removeEventListener("dispose",Z)};d!==void 0&&d.texture.dispose();let S=h.morphAttributes.position!==void 0,v=h.morphAttributes.normal!==void 0,b=h.morphAttributes.color!==void 0,R=h.morphAttributes.position||[],D=h.morphAttributes.normal||[],x=h.morphAttributes.color||[],C=0;S===!0&&(C=1),v===!0&&(C=2),b===!0&&(C=3);let L=h.attributes.position.count*C,ee=1;L>e.maxTextureSize&&(ee=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);let Y=new Float32Array(L*ee*4*p),V=new yr(Y,L,ee,p);V.type=hn,V.needsUpdate=!0;let F=C*4;for(let K=0;K<p;K++){let se=R[K],$=D[K],U=x[K],k=L*ee*4*K;for(let le=0;le<se.count;le++){let ie=le*F;S===!0&&(o.fromBufferAttribute(se,le),Y[k+ie+0]=o.x,Y[k+ie+1]=o.y,Y[k+ie+2]=o.z,Y[k+ie+3]=0),v===!0&&(o.fromBufferAttribute($,le),Y[k+ie+4]=o.x,Y[k+ie+5]=o.y,Y[k+ie+6]=o.z,Y[k+ie+7]=0),b===!0&&(o.fromBufferAttribute(U,le),Y[k+ie+8]=o.x,Y[k+ie+9]=o.y,Y[k+ie+10]=o.z,Y[k+ie+11]=U.itemSize===4?o.w:1)}}d={count:p,texture:V,size:new ze(L,ee)},r.set(h,d),h.addEventListener("dispose",Z)}let y=0;for(let S=0;S<g.length;S++)y+=g[S];let w=h.morphTargetsRelative?1:1-y;f.getUniforms().setValue(i,"morphTargetBaseInfluence",w),f.getUniforms().setValue(i,"morphTargetInfluences",g),f.getUniforms().setValue(i,"morphTargetsTexture",d.texture,t),f.getUniforms().setValue(i,"morphTargetsTextureSize",d.size)}else{let _=g===void 0?0:g.length,p=n[h.id];if(p===void 0||p.length!==_){p=[];for(let v=0;v<_;v++)p[v]=[v,0];n[h.id]=p}for(let v=0;v<_;v++){let b=p[v];b[0]=v,b[1]=g[v]}p.sort(_p);for(let v=0;v<8;v++)v<_&&p[v][1]?(a[v][0]=p[v][0],a[v][1]=p[v][1]):(a[v][0]=Number.MAX_SAFE_INTEGER,a[v][1]=0);a.sort(xp);let d=h.morphAttributes.position,y=h.morphAttributes.normal,w=0;for(let v=0;v<8;v++){let b=a[v],R=b[0],D=b[1];R!==Number.MAX_SAFE_INTEGER&&D?(d&&h.getAttribute("morphTarget"+v)!==d[R]&&h.setAttribute("morphTarget"+v,d[R]),y&&h.getAttribute("morphNormal"+v)!==y[R]&&h.setAttribute("morphNormal"+v,y[R]),s[v]=D,w+=D):(d&&h.hasAttribute("morphTarget"+v)===!0&&h.deleteAttribute("morphTarget"+v),y&&h.hasAttribute("morphNormal"+v)===!0&&h.deleteAttribute("morphNormal"+v),s[v]=0)}let S=h.morphTargetsRelative?1:1-w;f.getUniforms().setValue(i,"morphTargetBaseInfluence",S),f.getUniforms().setValue(i,"morphTargetInfluences",s)}}return{update:c}}function yp(i,e,t,n){let s=new WeakMap;function r(c){let l=n.render.frame,h=c.geometry,u=e.get(c,h);return s.get(u)!==l&&(e.update(u),s.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),t.update(c.instanceMatrix,34962),c.instanceColor!==null&&t.update(c.instanceColor,34962)),u}function o(){s=new WeakMap}function a(c){let l=c.target;l.removeEventListener("dispose",a),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:o}}var yc=new Dt,Mc=new yr,wc=new Na,bc=new Ar,Zl=[],Yl=[],Jl=new Float32Array(16),$l=new Float32Array(9),Kl=new Float32Array(4);function ts(i,e,t){let n=i[0];if(n<=0||n>0)return i;let s=e*t,r=Zl[s];if(r===void 0&&(r=new Float32Array(s),Zl[s]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(r,a)}return r}function Nt(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function Ot(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function Nr(i,e){let t=Yl[e];t===void 0&&(t=new Int32Array(e),Yl[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function Mp(i,e){let t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function wp(i,e){let t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Nt(t,e))return;i.uniform2fv(this.addr,e),Ot(t,e)}}function bp(i,e){let t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Nt(t,e))return;i.uniform3fv(this.addr,e),Ot(t,e)}}function Sp(i,e){let t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Nt(t,e))return;i.uniform4fv(this.addr,e),Ot(t,e)}}function Tp(i,e){let t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),Ot(t,e)}else{if(Nt(t,n))return;Kl.set(n),i.uniformMatrix2fv(this.addr,!1,Kl),Ot(t,n)}}function Ap(i,e){let t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),Ot(t,e)}else{if(Nt(t,n))return;$l.set(n),i.uniformMatrix3fv(this.addr,!1,$l),Ot(t,n)}}function Ep(i,e){let t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),Ot(t,e)}else{if(Nt(t,n))return;Jl.set(n),i.uniformMatrix4fv(this.addr,!1,Jl),Ot(t,n)}}function Cp(i,e){let t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function Pp(i,e){let t=this.cache;Nt(t,e)||(i.uniform2iv(this.addr,e),Ot(t,e))}function Rp(i,e){let t=this.cache;Nt(t,e)||(i.uniform3iv(this.addr,e),Ot(t,e))}function Ip(i,e){let t=this.cache;Nt(t,e)||(i.uniform4iv(this.addr,e),Ot(t,e))}function Lp(i,e){let t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function Dp(i,e){let t=this.cache;Nt(t,e)||(i.uniform2uiv(this.addr,e),Ot(t,e))}function Np(i,e){let t=this.cache;Nt(t,e)||(i.uniform3uiv(this.addr,e),Ot(t,e))}function Op(i,e){let t=this.cache;Nt(t,e)||(i.uniform4uiv(this.addr,e),Ot(t,e))}function Fp(i,e,t){let n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture2D(e||yc,s)}function zp(i,e,t){let n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture3D(e||wc,s)}function Up(i,e,t){let n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTextureCube(e||bc,s)}function Bp(i,e,t){let n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture2DArray(e||Mc,s)}function kp(i){switch(i){case 5126:return Mp;case 35664:return wp;case 35665:return bp;case 35666:return Sp;case 35674:return Tp;case 35675:return Ap;case 35676:return Ep;case 5124:case 35670:return Cp;case 35667:case 35671:return Pp;case 35668:case 35672:return Rp;case 35669:case 35673:return Ip;case 5125:return Lp;case 36294:return Dp;case 36295:return Np;case 36296:return Op;case 35678:case 36198:case 36298:case 36306:case 35682:return Fp;case 35679:case 36299:case 36307:return zp;case 35680:case 36300:case 36308:case 36293:return Up;case 36289:case 36303:case 36311:case 36292:return Bp}}function Vp(i,e){i.uniform1fv(this.addr,e)}function Hp(i,e){let t=ts(e,this.size,2);i.uniform2fv(this.addr,t)}function Gp(i,e){let t=ts(e,this.size,3);i.uniform3fv(this.addr,t)}function Wp(i,e){let t=ts(e,this.size,4);i.uniform4fv(this.addr,t)}function Xp(i,e){let t=ts(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function qp(i,e){let t=ts(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function Zp(i,e){let t=ts(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function Yp(i,e){i.uniform1iv(this.addr,e)}function Jp(i,e){i.uniform2iv(this.addr,e)}function $p(i,e){i.uniform3iv(this.addr,e)}function Kp(i,e){i.uniform4iv(this.addr,e)}function jp(i,e){i.uniform1uiv(this.addr,e)}function Qp(i,e){i.uniform2uiv(this.addr,e)}function em(i,e){i.uniform3uiv(this.addr,e)}function tm(i,e){i.uniform4uiv(this.addr,e)}function nm(i,e,t){let n=e.length,s=Nr(t,n);i.uniform1iv(this.addr,s);for(let r=0;r!==n;++r)t.setTexture2D(e[r]||yc,s[r])}function im(i,e,t){let n=e.length,s=Nr(t,n);i.uniform1iv(this.addr,s);for(let r=0;r!==n;++r)t.setTexture3D(e[r]||wc,s[r])}function sm(i,e,t){let n=e.length,s=Nr(t,n);i.uniform1iv(this.addr,s);for(let r=0;r!==n;++r)t.setTextureCube(e[r]||bc,s[r])}function rm(i,e,t){let n=e.length,s=Nr(t,n);i.uniform1iv(this.addr,s);for(let r=0;r!==n;++r)t.setTexture2DArray(e[r]||Mc,s[r])}function am(i){switch(i){case 5126:return Vp;case 35664:return Hp;case 35665:return Gp;case 35666:return Wp;case 35674:return Xp;case 35675:return qp;case 35676:return Zp;case 5124:case 35670:return Yp;case 35667:case 35671:return Jp;case 35668:case 35672:return $p;case 35669:case 35673:return Kp;case 5125:return jp;case 36294:return Qp;case 36295:return em;case 36296:return tm;case 35678:case 36198:case 36298:case 36306:case 35682:return nm;case 35679:case 36299:case 36307:return im;case 35680:case 36300:case 36308:case 36293:return sm;case 36289:case 36303:case 36311:case 36292:return rm}}var Ba=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=kp(t.type)}},ka=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=am(t.type)}},Va=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){let s=this.seq;for(let r=0,o=s.length;r!==o;++r){let a=s[r];a.setValue(e,t[a.id],n)}}},Ea=/(\w+)(\])?(\[|\.)?/g;function jl(i,e){i.seq.push(e),i.map[e.id]=e}function om(i,e,t){let n=i.name,s=n.length;for(Ea.lastIndex=0;;){let r=Ea.exec(n),o=Ea.lastIndex,a=r[1],c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===s){jl(t,l===void 0?new Ba(a,i,e):new ka(a,i,e));break}else{let u=t.map[a];u===void 0&&(u=new Va(a),jl(t,u)),t=u}}}var Gi=class{constructor(e,t){this.seq=[],this.map={};let n=e.getProgramParameter(t,35718);for(let s=0;s<n;++s){let r=e.getActiveUniform(t,s),o=e.getUniformLocation(t,r.name);om(r,o,this)}}setValue(e,t,n,s){let r=this.map[t];r!==void 0&&r.setValue(e,n,s)}setOptional(e,t,n){let s=t[n];s!==void 0&&this.setValue(e,n,s)}static upload(e,t,n,s){for(let r=0,o=t.length;r!==o;++r){let a=t[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(e,c.value,s)}}static seqWithValue(e,t){let n=[];for(let s=0,r=e.length;s!==r;++s){let o=e[s];o.id in t&&n.push(o)}return n}};function Ql(i,e,t){let n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}var lm=0;function cm(i,e){let t=i.split(`
`),n=[],s=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=s;o<r;o++){let a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function hm(i){switch(i){case gn:return["Linear","( value )"];case lt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function ec(i,e,t){let n=i.getShaderParameter(e,35713),s=i.getShaderInfoLog(e).trim();if(n&&s==="")return"";let r=/ERROR: 0:(\d+)/.exec(s);if(r){let o=parseInt(r[1]);return t.toUpperCase()+`

`+s+`

`+cm(i.getShaderSource(e),o)}else return s}function um(i,e){let t=hm(e);return"vec4 "+i+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function fm(i,e){let t;switch(e){case Bh:t="Linear";break;case kh:t="Reinhard";break;case Vh:t="OptimizedCineon";break;case uo:t="ACESFilmic";break;case Hh:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function dm(i){return[i.extensionDerivatives||!!i.envMapCubeUVHeight||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ws).join(`
`)}function pm(i){let e=[];for(let t in i){let n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function mm(i,e){let t={},n=i.getProgramParameter(e,35721);for(let s=0;s<n;s++){let r=i.getActiveAttrib(e,s),o=r.name,a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),t[o]={type:r.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function ws(i){return i!==""}function tc(i,e){let t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function nc(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var gm=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ha(i){return i.replace(gm,xm)}function xm(i,e){let t=He[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Ha(t)}var _m=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ic(i){return i.replace(_m,vm)}function vm(i,e,t,n){let s="";for(let r=parseInt(e);r<parseInt(t);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function sc(i){let e="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function ym(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===hc?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===xh?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Ms&&(e="SHADOWMAP_TYPE_VSM"),e}function Mm(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Xi:case qi:e="ENVMAP_TYPE_CUBE";break;case Dr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function wm(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case qi:e="ENVMAP_MODE_REFRACTION";break}return e}function bm(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case dc:e="ENVMAP_BLENDING_MULTIPLY";break;case zh:e="ENVMAP_BLENDING_MIX";break;case Uh:e="ENVMAP_BLENDING_ADD";break}return e}function Sm(i){let e=i.envMapCubeUVHeight;if(e===null)return null;let t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Tm(i,e,t,n){let s=i.getContext(),r=t.defines,o=t.vertexShader,a=t.fragmentShader,c=ym(t),l=Mm(t),h=wm(t),u=bm(t),f=Sm(t),g=t.isWebGL2?"":dm(t),_=pm(r),p=s.createProgram(),d,y,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(d=[_].filter(ws).join(`
`),d.length>0&&(d+=`
`),y=[g,_].filter(ws).join(`
`),y.length>0&&(y+=`
`)):(d=[sc(t),"#define SHADER_NAME "+t.shaderName,_,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ws).join(`
`),y=[g,sc(t),"#define SHADER_NAME "+t.shaderName,_,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ln?"#define TONE_MAPPING":"",t.toneMapping!==Ln?He.tonemapping_pars_fragment:"",t.toneMapping!==Ln?fm("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",He.encodings_pars_fragment,um("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ws).join(`
`)),o=Ha(o),o=tc(o,t),o=nc(o,t),a=Ha(a),a=tc(a,t),a=nc(a,t),o=ic(o),a=ic(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,d=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+d,y=["#define varying in",t.glslVersion===El?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===El?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);let S=w+d+o,v=w+y+a,b=Ql(s,35633,S),R=Ql(s,35632,v);if(s.attachShader(p,b),s.attachShader(p,R),t.index0AttributeName!==void 0?s.bindAttribLocation(p,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(p,0,"position"),s.linkProgram(p),i.debug.checkShaderErrors){let C=s.getProgramInfoLog(p).trim(),L=s.getShaderInfoLog(b).trim(),ee=s.getShaderInfoLog(R).trim(),Y=!0,V=!0;if(s.getProgramParameter(p,35714)===!1){Y=!1;let F=ec(s,b,"vertex"),Z=ec(s,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(p,35715)+`

Program Info Log: `+C+`
`+F+`
`+Z)}else C!==""?console.warn("THREE.WebGLProgram: Program Info Log:",C):(L===""||ee==="")&&(V=!1);V&&(this.diagnostics={runnable:Y,programLog:C,vertexShader:{log:L,prefix:d},fragmentShader:{log:ee,prefix:y}})}s.deleteShader(b),s.deleteShader(R);let D;this.getUniforms=function(){return D===void 0&&(D=new Gi(s,p)),D};let x;return this.getAttributes=function(){return x===void 0&&(x=mm(s,p)),x},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(p),this.program=void 0},this.name=t.shaderName,this.id=lm++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=b,this.fragmentShader=R,this}var Am=0,Ga=class{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,n=e.fragmentShader,s=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(s)===!1&&(o.add(s),s.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){let t=this.shaderCache,n=t.get(e);return n===void 0&&(n=new Wa(e),t.set(e,n)),n}},Wa=class{constructor(e){this.id=Am++,this.code=e,this.usedTimes=0}};function Em(i,e,t,n,s,r,o){let a=new Mr,c=new Ga,l=[],h=s.isWebGL2,u=s.logarithmicDepthBuffer,f=s.vertexTextures,g=s.precision,_={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(x,C,L,ee,Y){let V=ee.fog,F=Y.geometry,Z=x.isMeshStandardMaterial?ee.environment:null,K=(x.isMeshStandardMaterial?t:e).get(x.envMap||Z),se=!!K&&K.mapping===Dr?K.image.height:null,$=_[x.type];x.precision!==null&&(g=s.getMaxPrecision(x.precision),g!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",g,"instead."));let U=F.morphAttributes.position||F.morphAttributes.normal||F.morphAttributes.color,k=U!==void 0?U.length:0,le=0;F.morphAttributes.position!==void 0&&(le=1),F.morphAttributes.normal!==void 0&&(le=2),F.morphAttributes.color!==void 0&&(le=3);let ie,ue,xe,Ae;if($){let We=pn[$];ie=We.vertexShader,ue=We.fragmentShader}else ie=x.vertexShader,ue=x.fragmentShader,c.update(x),xe=c.getVertexShaderID(x),Ae=c.getFragmentShaderID(x);let q=i.getRenderTarget(),Ue=x.alphaTest>0,Re=x.clearcoat>0,De=x.iridescence>0;return{isWebGL2:h,shaderID:$,shaderName:x.type,vertexShader:ie,fragmentShader:ue,defines:x.defines,customVertexShaderID:xe,customFragmentShaderID:Ae,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:g,instancing:Y.isInstancedMesh===!0,instancingColor:Y.isInstancedMesh===!0&&Y.instanceColor!==null,supportsVertexTextures:f,outputEncoding:q===null?i.outputEncoding:q.isXRRenderTarget===!0?q.texture.encoding:gn,map:!!x.map,matcap:!!x.matcap,envMap:!!K,envMapMode:K&&K.mapping,envMapCubeUVHeight:se,lightMap:!!x.lightMap,aoMap:!!x.aoMap,emissiveMap:!!x.emissiveMap,bumpMap:!!x.bumpMap,normalMap:!!x.normalMap,objectSpaceNormalMap:x.normalMapType===au,tangentSpaceNormalMap:x.normalMapType===gc,decodeVideoTexture:!!x.map&&x.map.isVideoTexture===!0&&x.map.encoding===lt,clearcoat:Re,clearcoatMap:Re&&!!x.clearcoatMap,clearcoatRoughnessMap:Re&&!!x.clearcoatRoughnessMap,clearcoatNormalMap:Re&&!!x.clearcoatNormalMap,iridescence:De,iridescenceMap:De&&!!x.iridescenceMap,iridescenceThicknessMap:De&&!!x.iridescenceThicknessMap,displacementMap:!!x.displacementMap,roughnessMap:!!x.roughnessMap,metalnessMap:!!x.metalnessMap,specularMap:!!x.specularMap,specularIntensityMap:!!x.specularIntensityMap,specularColorMap:!!x.specularColorMap,opaque:x.transparent===!1&&x.blending===Vi,alphaMap:!!x.alphaMap,alphaTest:Ue,gradientMap:!!x.gradientMap,sheen:x.sheen>0,sheenColorMap:!!x.sheenColorMap,sheenRoughnessMap:!!x.sheenRoughnessMap,transmission:x.transmission>0,transmissionMap:!!x.transmissionMap,thicknessMap:!!x.thicknessMap,combine:x.combine,vertexTangents:!!x.normalMap&&!!F.attributes.tangent,vertexColors:x.vertexColors,vertexAlphas:x.vertexColors===!0&&!!F.attributes.color&&F.attributes.color.itemSize===4,vertexUvs:!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatMap||!!x.clearcoatRoughnessMap||!!x.clearcoatNormalMap||!!x.iridescenceMap||!!x.iridescenceThicknessMap||!!x.displacementMap||!!x.transmissionMap||!!x.thicknessMap||!!x.specularIntensityMap||!!x.specularColorMap||!!x.sheenColorMap||!!x.sheenRoughnessMap,uvsVertexOnly:!(!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatNormalMap||!!x.iridescenceMap||!!x.iridescenceThicknessMap||x.transmission>0||!!x.transmissionMap||!!x.thicknessMap||!!x.specularIntensityMap||!!x.specularColorMap||x.sheen>0||!!x.sheenColorMap||!!x.sheenRoughnessMap)&&!!x.displacementMap,fog:!!V,useFog:x.fog===!0,fogExp2:V&&V.isFogExp2,flatShading:!!x.flatShading,sizeAttenuation:x.sizeAttenuation,logarithmicDepthBuffer:u,skinning:Y.isSkinnedMesh===!0,morphTargets:F.morphAttributes.position!==void 0,morphNormals:F.morphAttributes.normal!==void 0,morphColors:F.morphAttributes.color!==void 0,morphTargetsCount:k,morphTextureStride:le,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:x.dithering,shadowMapEnabled:i.shadowMap.enabled&&L.length>0,shadowMapType:i.shadowMap.type,toneMapping:x.toneMapped?i.toneMapping:Ln,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:x.premultipliedAlpha,doubleSided:x.side===$n,flipSided:x.side===$t,useDepthPacking:!!x.depthPacking,depthPacking:x.depthPacking||0,index0AttributeName:x.index0AttributeName,extensionDerivatives:x.extensions&&x.extensions.derivatives,extensionFragDepth:x.extensions&&x.extensions.fragDepth,extensionDrawBuffers:x.extensions&&x.extensions.drawBuffers,extensionShaderTextureLOD:x.extensions&&x.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:x.customProgramCacheKey()}}function d(x){let C=[];if(x.shaderID?C.push(x.shaderID):(C.push(x.customVertexShaderID),C.push(x.customFragmentShaderID)),x.defines!==void 0)for(let L in x.defines)C.push(L),C.push(x.defines[L]);return x.isRawShaderMaterial===!1&&(y(C,x),w(C,x),C.push(i.outputEncoding)),C.push(x.customProgramCacheKey),C.join()}function y(x,C){x.push(C.precision),x.push(C.outputEncoding),x.push(C.envMapMode),x.push(C.envMapCubeUVHeight),x.push(C.combine),x.push(C.vertexUvs),x.push(C.fogExp2),x.push(C.sizeAttenuation),x.push(C.morphTargetsCount),x.push(C.morphAttributeCount),x.push(C.numDirLights),x.push(C.numPointLights),x.push(C.numSpotLights),x.push(C.numSpotLightMaps),x.push(C.numHemiLights),x.push(C.numRectAreaLights),x.push(C.numDirLightShadows),x.push(C.numPointLightShadows),x.push(C.numSpotLightShadows),x.push(C.numSpotLightShadowsWithMaps),x.push(C.shadowMapType),x.push(C.toneMapping),x.push(C.numClippingPlanes),x.push(C.numClipIntersection),x.push(C.depthPacking)}function w(x,C){a.disableAll(),C.isWebGL2&&a.enable(0),C.supportsVertexTextures&&a.enable(1),C.instancing&&a.enable(2),C.instancingColor&&a.enable(3),C.map&&a.enable(4),C.matcap&&a.enable(5),C.envMap&&a.enable(6),C.lightMap&&a.enable(7),C.aoMap&&a.enable(8),C.emissiveMap&&a.enable(9),C.bumpMap&&a.enable(10),C.normalMap&&a.enable(11),C.objectSpaceNormalMap&&a.enable(12),C.tangentSpaceNormalMap&&a.enable(13),C.clearcoat&&a.enable(14),C.clearcoatMap&&a.enable(15),C.clearcoatRoughnessMap&&a.enable(16),C.clearcoatNormalMap&&a.enable(17),C.iridescence&&a.enable(18),C.iridescenceMap&&a.enable(19),C.iridescenceThicknessMap&&a.enable(20),C.displacementMap&&a.enable(21),C.specularMap&&a.enable(22),C.roughnessMap&&a.enable(23),C.metalnessMap&&a.enable(24),C.gradientMap&&a.enable(25),C.alphaMap&&a.enable(26),C.alphaTest&&a.enable(27),C.vertexColors&&a.enable(28),C.vertexAlphas&&a.enable(29),C.vertexUvs&&a.enable(30),C.vertexTangents&&a.enable(31),C.uvsVertexOnly&&a.enable(32),x.push(a.mask),a.disableAll(),C.fog&&a.enable(0),C.useFog&&a.enable(1),C.flatShading&&a.enable(2),C.logarithmicDepthBuffer&&a.enable(3),C.skinning&&a.enable(4),C.morphTargets&&a.enable(5),C.morphNormals&&a.enable(6),C.morphColors&&a.enable(7),C.premultipliedAlpha&&a.enable(8),C.shadowMapEnabled&&a.enable(9),C.physicallyCorrectLights&&a.enable(10),C.doubleSided&&a.enable(11),C.flipSided&&a.enable(12),C.useDepthPacking&&a.enable(13),C.dithering&&a.enable(14),C.specularIntensityMap&&a.enable(15),C.specularColorMap&&a.enable(16),C.transmission&&a.enable(17),C.transmissionMap&&a.enable(18),C.thicknessMap&&a.enable(19),C.sheen&&a.enable(20),C.sheenColorMap&&a.enable(21),C.sheenRoughnessMap&&a.enable(22),C.decodeVideoTexture&&a.enable(23),C.opaque&&a.enable(24),x.push(a.mask)}function S(x){let C=_[x.type],L;if(C){let ee=pn[C];L=Mu.clone(ee.uniforms)}else L=x.uniforms;return L}function v(x,C){let L;for(let ee=0,Y=l.length;ee<Y;ee++){let V=l[ee];if(V.cacheKey===C){L=V,++L.usedTimes;break}}return L===void 0&&(L=new Tm(i,C,x,r),l.push(L)),L}function b(x){if(--x.usedTimes===0){let C=l.indexOf(x);l[C]=l[l.length-1],l.pop(),x.destroy()}}function R(x){c.remove(x)}function D(){c.dispose()}return{getParameters:p,getProgramCacheKey:d,getUniforms:S,acquireProgram:v,releaseProgram:b,releaseShaderCache:R,programs:l,dispose:D}}function Cm(){let i=new WeakMap;function e(r){let o=i.get(r);return o===void 0&&(o={},i.set(r,o)),o}function t(r){i.delete(r)}function n(r,o,a){i.get(r)[o]=a}function s(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:s}}function Pm(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function rc(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function ac(){let i=[],e=0,t=[],n=[],s=[];function r(){e=0,t.length=0,n.length=0,s.length=0}function o(u,f,g,_,p,d){let y=i[e];return y===void 0?(y={id:u.id,object:u,geometry:f,material:g,groupOrder:_,renderOrder:u.renderOrder,z:p,group:d},i[e]=y):(y.id=u.id,y.object=u,y.geometry=f,y.material=g,y.groupOrder=_,y.renderOrder=u.renderOrder,y.z=p,y.group=d),e++,y}function a(u,f,g,_,p,d){let y=o(u,f,g,_,p,d);g.transmission>0?n.push(y):g.transparent===!0?s.push(y):t.push(y)}function c(u,f,g,_,p,d){let y=o(u,f,g,_,p,d);g.transmission>0?n.unshift(y):g.transparent===!0?s.unshift(y):t.unshift(y)}function l(u,f){t.length>1&&t.sort(u||Pm),n.length>1&&n.sort(f||rc),s.length>1&&s.sort(f||rc)}function h(){for(let u=e,f=i.length;u<f;u++){let g=i[u];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:s,init:r,push:a,unshift:c,finish:h,sort:l}}function Rm(){let i=new WeakMap;function e(n,s){let r=i.get(n),o;return r===void 0?(o=new ac,i.set(n,[o])):s>=r.length?(o=new ac,r.push(o)):o=r[s],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function Im(){let i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new z,color:new Ye};break;case"SpotLight":t={position:new z,direction:new z,color:new Ye,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new z,color:new Ye,distance:0,decay:0};break;case"HemisphereLight":t={direction:new z,skyColor:new Ye,groundColor:new Ye};break;case"RectAreaLight":t={color:new Ye,position:new z,halfWidth:new z,halfHeight:new z};break}return i[e.id]=t,t}}}function Lm(){let i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ze};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ze};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ze,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}var Dm=0;function Nm(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function Om(i,e){let t=new Im,n=Lm(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let h=0;h<9;h++)s.probe.push(new z);let r=new z,o=new ot,a=new ot;function c(h,u){let f=0,g=0,_=0;for(let ee=0;ee<9;ee++)s.probe[ee].set(0,0,0);let p=0,d=0,y=0,w=0,S=0,v=0,b=0,R=0,D=0,x=0;h.sort(Nm);let C=u!==!0?Math.PI:1;for(let ee=0,Y=h.length;ee<Y;ee++){let V=h[ee],F=V.color,Z=V.intensity,K=V.distance,se=V.shadow&&V.shadow.map?V.shadow.map.texture:null;if(V.isAmbientLight)f+=F.r*Z*C,g+=F.g*Z*C,_+=F.b*Z*C;else if(V.isLightProbe)for(let $=0;$<9;$++)s.probe[$].addScaledVector(V.sh.coefficients[$],Z);else if(V.isDirectionalLight){let $=t.get(V);if($.color.copy(V.color).multiplyScalar(V.intensity*C),V.castShadow){let U=V.shadow,k=n.get(V);k.shadowBias=U.bias,k.shadowNormalBias=U.normalBias,k.shadowRadius=U.radius,k.shadowMapSize=U.mapSize,s.directionalShadow[p]=k,s.directionalShadowMap[p]=se,s.directionalShadowMatrix[p]=V.shadow.matrix,v++}s.directional[p]=$,p++}else if(V.isSpotLight){let $=t.get(V);$.position.setFromMatrixPosition(V.matrixWorld),$.color.copy(F).multiplyScalar(Z*C),$.distance=K,$.coneCos=Math.cos(V.angle),$.penumbraCos=Math.cos(V.angle*(1-V.penumbra)),$.decay=V.decay,s.spot[y]=$;let U=V.shadow;if(V.map&&(s.spotLightMap[D]=V.map,D++,U.updateMatrices(V),V.castShadow&&x++),s.spotLightMatrix[y]=U.matrix,V.castShadow){let k=n.get(V);k.shadowBias=U.bias,k.shadowNormalBias=U.normalBias,k.shadowRadius=U.radius,k.shadowMapSize=U.mapSize,s.spotShadow[y]=k,s.spotShadowMap[y]=se,R++}y++}else if(V.isRectAreaLight){let $=t.get(V);$.color.copy(F).multiplyScalar(Z),$.halfWidth.set(V.width*.5,0,0),$.halfHeight.set(0,V.height*.5,0),s.rectArea[w]=$,w++}else if(V.isPointLight){let $=t.get(V);if($.color.copy(V.color).multiplyScalar(V.intensity*C),$.distance=V.distance,$.decay=V.decay,V.castShadow){let U=V.shadow,k=n.get(V);k.shadowBias=U.bias,k.shadowNormalBias=U.normalBias,k.shadowRadius=U.radius,k.shadowMapSize=U.mapSize,k.shadowCameraNear=U.camera.near,k.shadowCameraFar=U.camera.far,s.pointShadow[d]=k,s.pointShadowMap[d]=se,s.pointShadowMatrix[d]=V.shadow.matrix,b++}s.point[d]=$,d++}else if(V.isHemisphereLight){let $=t.get(V);$.skyColor.copy(V.color).multiplyScalar(Z*C),$.groundColor.copy(V.groundColor).multiplyScalar(Z*C),s.hemi[S]=$,S++}}w>0&&(e.isWebGL2||i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=ve.LTC_FLOAT_1,s.rectAreaLTC2=ve.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=ve.LTC_HALF_1,s.rectAreaLTC2=ve.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=f,s.ambient[1]=g,s.ambient[2]=_;let L=s.hash;(L.directionalLength!==p||L.pointLength!==d||L.spotLength!==y||L.rectAreaLength!==w||L.hemiLength!==S||L.numDirectionalShadows!==v||L.numPointShadows!==b||L.numSpotShadows!==R||L.numSpotMaps!==D)&&(s.directional.length=p,s.spot.length=y,s.rectArea.length=w,s.point.length=d,s.hemi.length=S,s.directionalShadow.length=v,s.directionalShadowMap.length=v,s.pointShadow.length=b,s.pointShadowMap.length=b,s.spotShadow.length=R,s.spotShadowMap.length=R,s.directionalShadowMatrix.length=v,s.pointShadowMatrix.length=b,s.spotLightMatrix.length=R+D-x,s.spotLightMap.length=D,s.numSpotLightShadowsWithMaps=x,L.directionalLength=p,L.pointLength=d,L.spotLength=y,L.rectAreaLength=w,L.hemiLength=S,L.numDirectionalShadows=v,L.numPointShadows=b,L.numSpotShadows=R,L.numSpotMaps=D,s.version=Dm++)}function l(h,u){let f=0,g=0,_=0,p=0,d=0,y=u.matrixWorldInverse;for(let w=0,S=h.length;w<S;w++){let v=h[w];if(v.isDirectionalLight){let b=s.directional[f];b.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(y),f++}else if(v.isSpotLight){let b=s.spot[_];b.position.setFromMatrixPosition(v.matrixWorld),b.position.applyMatrix4(y),b.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(y),_++}else if(v.isRectAreaLight){let b=s.rectArea[p];b.position.setFromMatrixPosition(v.matrixWorld),b.position.applyMatrix4(y),a.identity(),o.copy(v.matrixWorld),o.premultiply(y),a.extractRotation(o),b.halfWidth.set(v.width*.5,0,0),b.halfHeight.set(0,v.height*.5,0),b.halfWidth.applyMatrix4(a),b.halfHeight.applyMatrix4(a),p++}else if(v.isPointLight){let b=s.point[g];b.position.setFromMatrixPosition(v.matrixWorld),b.position.applyMatrix4(y),g++}else if(v.isHemisphereLight){let b=s.hemi[d];b.direction.setFromMatrixPosition(v.matrixWorld),b.direction.transformDirection(y),d++}}}return{setup:c,setupView:l,state:s}}function oc(i,e){let t=new Om(i,e),n=[],s=[];function r(){n.length=0,s.length=0}function o(u){n.push(u)}function a(u){s.push(u)}function c(u){t.setup(n,u)}function l(u){t.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:s,lights:t},setupLights:c,setupLightsView:l,pushLight:o,pushShadow:a}}function Fm(i,e){let t=new WeakMap;function n(r,o=0){let a=t.get(r),c;return a===void 0?(c=new oc(i,e),t.set(r,[c])):o>=a.length?(c=new oc(i,e),a.push(c)):c=a[o],c}function s(){t=new WeakMap}return{get:n,dispose:s}}var Xa=class extends di{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=su,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},qa=class extends di{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new z,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}},zm=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Um=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Bm(i,e,t){let n=new Er,s=new ze,r=new ze,o=new _t,a=new Xa({depthPacking:ru}),c=new qa,l={},h=t.maxTextureSize,u={0:$t,1:Wi,2:$n},f=new Nn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ze},radius:{value:4}},vertexShader:zm,fragmentShader:Um}),g=f.clone();g.defines.HORIZONTAL_PASS=1;let _=new Kt;_.setAttribute("position",new qt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let p=new bt(_,f),d=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=hc,this.render=function(v,b,R){if(d.enabled===!1||d.autoUpdate===!1&&d.needsUpdate===!1||v.length===0)return;let D=i.getRenderTarget(),x=i.getActiveCubeFace(),C=i.getActiveMipmapLevel(),L=i.state;L.setBlending(Kn),L.buffers.color.setClear(1,1,1,1),L.buffers.depth.setTest(!0),L.setScissorTest(!1);for(let ee=0,Y=v.length;ee<Y;ee++){let V=v[ee],F=V.shadow;if(F===void 0){console.warn("THREE.WebGLShadowMap:",V,"has no shadow.");continue}if(F.autoUpdate===!1&&F.needsUpdate===!1)continue;s.copy(F.mapSize);let Z=F.getFrameExtents();if(s.multiply(Z),r.copy(F.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/Z.x),s.x=r.x*Z.x,F.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/Z.y),s.y=r.y*Z.y,F.mapSize.y=r.y)),F.map===null){let se=this.type!==Ms?{minFilter:At,magFilter:At}:{};F.map=new Dn(s.x,s.y,se),F.map.texture.name=V.name+".shadowMap",F.camera.updateProjectionMatrix()}i.setRenderTarget(F.map),i.clear();let K=F.getViewportCount();for(let se=0;se<K;se++){let $=F.getViewport(se);o.set(r.x*$.x,r.y*$.y,r.x*$.z,r.y*$.w),L.viewport(o),F.updateMatrices(V,se),n=F.getFrustum(),S(b,R,F.camera,V,this.type)}F.isPointLightShadow!==!0&&this.type===Ms&&y(F,R),F.needsUpdate=!1}d.needsUpdate=!1,i.setRenderTarget(D,x,C)};function y(v,b){let R=e.update(p);f.defines.VSM_SAMPLES!==v.blurSamples&&(f.defines.VSM_SAMPLES=v.blurSamples,g.defines.VSM_SAMPLES=v.blurSamples,f.needsUpdate=!0,g.needsUpdate=!0),v.mapPass===null&&(v.mapPass=new Dn(s.x,s.y)),f.uniforms.shadow_pass.value=v.map.texture,f.uniforms.resolution.value=v.mapSize,f.uniforms.radius.value=v.radius,i.setRenderTarget(v.mapPass),i.clear(),i.renderBufferDirect(b,null,R,f,p,null),g.uniforms.shadow_pass.value=v.mapPass.texture,g.uniforms.resolution.value=v.mapSize,g.uniforms.radius.value=v.radius,i.setRenderTarget(v.map),i.clear(),i.renderBufferDirect(b,null,R,g,p,null)}function w(v,b,R,D,x,C){let L=null,ee=R.isPointLight===!0?v.customDistanceMaterial:v.customDepthMaterial;if(ee!==void 0?L=ee:L=R.isPointLight===!0?c:a,i.localClippingEnabled&&b.clipShadows===!0&&Array.isArray(b.clippingPlanes)&&b.clippingPlanes.length!==0||b.displacementMap&&b.displacementScale!==0||b.alphaMap&&b.alphaTest>0){let Y=L.uuid,V=b.uuid,F=l[Y];F===void 0&&(F={},l[Y]=F);let Z=F[V];Z===void 0&&(Z=L.clone(),F[V]=Z),L=Z}return L.visible=b.visible,L.wireframe=b.wireframe,C===Ms?L.side=b.shadowSide!==null?b.shadowSide:b.side:L.side=b.shadowSide!==null?b.shadowSide:u[b.side],L.alphaMap=b.alphaMap,L.alphaTest=b.alphaTest,L.clipShadows=b.clipShadows,L.clippingPlanes=b.clippingPlanes,L.clipIntersection=b.clipIntersection,L.displacementMap=b.displacementMap,L.displacementScale=b.displacementScale,L.displacementBias=b.displacementBias,L.wireframeLinewidth=b.wireframeLinewidth,L.linewidth=b.linewidth,R.isPointLight===!0&&L.isMeshDistanceMaterial===!0&&(L.referencePosition.setFromMatrixPosition(R.matrixWorld),L.nearDistance=D,L.farDistance=x),L}function S(v,b,R,D,x){if(v.visible===!1)return;if(v.layers.test(b.layers)&&(v.isMesh||v.isLine||v.isPoints)&&(v.castShadow||v.receiveShadow&&x===Ms)&&(!v.frustumCulled||n.intersectsObject(v))){v.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,v.matrixWorld);let ee=e.update(v),Y=v.material;if(Array.isArray(Y)){let V=ee.groups;for(let F=0,Z=V.length;F<Z;F++){let K=V[F],se=Y[K.materialIndex];if(se&&se.visible){let $=w(v,se,D,R.near,R.far,x);i.renderBufferDirect(R,null,ee,$,v,K)}}}else if(Y.visible){let V=w(v,Y,D,R.near,R.far,x);i.renderBufferDirect(R,null,ee,V,v,null)}}let L=v.children;for(let ee=0,Y=L.length;ee<Y;ee++)S(L[ee],b,R,D,x)}}function km(i,e,t){let n=t.isWebGL2;function s(){let O=!1,ce=new _t,Q=null,J=new _t(0,0,0,0);return{setMask:function(ye){Q!==ye&&!O&&(i.colorMask(ye,ye,ye,ye),Q=ye)},setLocked:function(ye){O=ye},setClear:function(ye,Xe,mt,rt,fn){fn===!0&&(ye*=rt,Xe*=rt,mt*=rt),ce.set(ye,Xe,mt,rt),J.equals(ce)===!1&&(i.clearColor(ye,Xe,mt,rt),J.copy(ce))},reset:function(){O=!1,Q=null,J.set(-1,0,0,0)}}}function r(){let O=!1,ce=null,Q=null,J=null;return{setTest:function(ye){ye?Ue(2929):Re(2929)},setMask:function(ye){ce!==ye&&!O&&(i.depthMask(ye),ce=ye)},setFunc:function(ye){if(Q!==ye){if(ye)switch(ye){case Rh:i.depthFunc(512);break;case Ih:i.depthFunc(519);break;case Lh:i.depthFunc(513);break;case Ca:i.depthFunc(515);break;case Dh:i.depthFunc(514);break;case Nh:i.depthFunc(518);break;case Oh:i.depthFunc(516);break;case Fh:i.depthFunc(517);break;default:i.depthFunc(515)}else i.depthFunc(515);Q=ye}},setLocked:function(ye){O=ye},setClear:function(ye){J!==ye&&(i.clearDepth(ye),J=ye)},reset:function(){O=!1,ce=null,Q=null,J=null}}}function o(){let O=!1,ce=null,Q=null,J=null,ye=null,Xe=null,mt=null,rt=null,fn=null;return{setTest:function(it){O||(it?Ue(2960):Re(2960))},setMask:function(it){ce!==it&&!O&&(i.stencilMask(it),ce=it)},setFunc:function(it,sn,Ut){(Q!==it||J!==sn||ye!==Ut)&&(i.stencilFunc(it,sn,Ut),Q=it,J=sn,ye=Ut)},setOp:function(it,sn,Ut){(Xe!==it||mt!==sn||rt!==Ut)&&(i.stencilOp(it,sn,Ut),Xe=it,mt=sn,rt=Ut)},setLocked:function(it){O=it},setClear:function(it){fn!==it&&(i.clearStencil(it),fn=it)},reset:function(){O=!1,ce=null,Q=null,J=null,ye=null,Xe=null,mt=null,rt=null,fn=null}}}let a=new s,c=new r,l=new o,h=new WeakMap,u=new WeakMap,f={},g={},_=new WeakMap,p=[],d=null,y=!1,w=null,S=null,v=null,b=null,R=null,D=null,x=null,C=!1,L=null,ee=null,Y=null,V=null,F=null,Z=i.getParameter(35661),K=!1,se=0,$=i.getParameter(7938);$.indexOf("WebGL")!==-1?(se=parseFloat(/^WebGL (\d)/.exec($)[1]),K=se>=1):$.indexOf("OpenGL ES")!==-1&&(se=parseFloat(/^OpenGL ES (\d)/.exec($)[1]),K=se>=2);let U=null,k={},le=i.getParameter(3088),ie=i.getParameter(2978),ue=new _t().fromArray(le),xe=new _t().fromArray(ie);function Ae(O,ce,Q){let J=new Uint8Array(4),ye=i.createTexture();i.bindTexture(O,ye),i.texParameteri(O,10241,9728),i.texParameteri(O,10240,9728);for(let Xe=0;Xe<Q;Xe++)i.texImage2D(ce+Xe,0,6408,1,1,0,6408,5121,J);return ye}let q={};q[3553]=Ae(3553,3553,1),q[34067]=Ae(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),Ue(2929),c.setFunc(Ca),ct(!1),Ct(Yo),Ue(2884),et(Kn);function Ue(O){f[O]!==!0&&(i.enable(O),f[O]=!0)}function Re(O){f[O]!==!1&&(i.disable(O),f[O]=!1)}function De(O,ce){return g[O]!==ce?(i.bindFramebuffer(O,ce),g[O]=ce,n&&(O===36009&&(g[36160]=ce),O===36160&&(g[36009]=ce)),!0):!1}function Te(O,ce){let Q=p,J=!1;if(O)if(Q=_.get(ce),Q===void 0&&(Q=[],_.set(ce,Q)),O.isWebGLMultipleRenderTargets){let ye=O.texture;if(Q.length!==ye.length||Q[0]!==36064){for(let Xe=0,mt=ye.length;Xe<mt;Xe++)Q[Xe]=36064+Xe;Q.length=ye.length,J=!0}}else Q[0]!==36064&&(Q[0]=36064,J=!0);else Q[0]!==1029&&(Q[0]=1029,J=!0);J&&(t.isWebGL2?i.drawBuffers(Q):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Q))}function We(O){return d!==O?(i.useProgram(O),d=O,!0):!1}let Fe={[Ui]:32774,[vh]:32778,[yh]:32779};if(n)Fe[jo]=32775,Fe[Qo]=32776;else{let O=e.get("EXT_blend_minmax");O!==null&&(Fe[jo]=O.MIN_EXT,Fe[Qo]=O.MAX_EXT)}let Le={[Mh]:0,[wh]:1,[bh]:768,[uc]:770,[Ph]:776,[Eh]:774,[Th]:772,[Sh]:769,[fc]:771,[Ch]:775,[Ah]:773};function et(O,ce,Q,J,ye,Xe,mt,rt){if(O===Kn){y===!0&&(Re(3042),y=!1);return}if(y===!1&&(Ue(3042),y=!0),O!==_h){if(O!==w||rt!==C){if((S!==Ui||R!==Ui)&&(i.blendEquation(32774),S=Ui,R=Ui),rt)switch(O){case Vi:i.blendFuncSeparate(1,771,1,771);break;case Jo:i.blendFunc(1,1);break;case $o:i.blendFuncSeparate(0,769,0,1);break;case Ko:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case Vi:i.blendFuncSeparate(770,771,1,771);break;case Jo:i.blendFunc(770,1);break;case $o:i.blendFuncSeparate(0,769,0,1);break;case Ko:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}v=null,b=null,D=null,x=null,w=O,C=rt}return}ye=ye||ce,Xe=Xe||Q,mt=mt||J,(ce!==S||ye!==R)&&(i.blendEquationSeparate(Fe[ce],Fe[ye]),S=ce,R=ye),(Q!==v||J!==b||Xe!==D||mt!==x)&&(i.blendFuncSeparate(Le[Q],Le[J],Le[Xe],Le[mt]),v=Q,b=J,D=Xe,x=mt),w=O,C=null}function pt(O,ce){O.side===$n?Re(2884):Ue(2884);let Q=O.side===$t;ce&&(Q=!Q),ct(Q),O.blending===Vi&&O.transparent===!1?et(Kn):et(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),c.setFunc(O.depthFunc),c.setTest(O.depthTest),c.setMask(O.depthWrite),a.setMask(O.colorWrite);let J=O.stencilWrite;l.setTest(J),J&&(l.setMask(O.stencilWriteMask),l.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),l.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),qe(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?Ue(32926):Re(32926)}function ct(O){L!==O&&(O?i.frontFace(2304):i.frontFace(2305),L=O)}function Ct(O){O!==mh?(Ue(2884),O!==ee&&(O===Yo?i.cullFace(1029):O===gh?i.cullFace(1028):i.cullFace(1032))):Re(2884),ee=O}function ht(O){O!==Y&&(K&&i.lineWidth(O),Y=O)}function qe(O,ce,Q){O?(Ue(32823),(V!==ce||F!==Q)&&(i.polygonOffset(ce,Q),V=ce,F=Q)):Re(32823)}function zt(O){O?Ue(3089):Re(3089)}function Pt(O){O===void 0&&(O=33984+Z-1),U!==O&&(i.activeTexture(O),U=O)}function I(O,ce){U===null&&Pt();let Q=k[U];Q===void 0&&(Q={type:void 0,texture:void 0},k[U]=Q),(Q.type!==O||Q.texture!==ce)&&(i.bindTexture(O,ce||q[O]),Q.type=O,Q.texture=ce)}function T(){let O=k[U];O!==void 0&&O.type!==void 0&&(i.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function te(){try{i.compressedTexImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function he(){try{i.texSubImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function me(){try{i.texSubImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Me(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ne(){try{i.texStorage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function A(){try{i.texStorage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function oe(){try{i.texImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ge(){try{i.texImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function we(O){ue.equals(O)===!1&&(i.scissor(O.x,O.y,O.z,O.w),ue.copy(O))}function _e(O){xe.equals(O)===!1&&(i.viewport(O.x,O.y,O.z,O.w),xe.copy(O))}function Ce(O,ce){let Q=u.get(ce);Q===void 0&&(Q=new WeakMap,u.set(ce,Q));let J=Q.get(O);J===void 0&&(J=i.getUniformBlockIndex(ce,O.name),Q.set(O,J))}function ke(O,ce){let J=u.get(ce).get(O);h.get(O)!==J&&(i.uniformBlockBinding(ce,J,O.__bindingPointIndex),h.set(O,J))}function Ze(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),f={},U=null,k={},g={},_=new WeakMap,p=[],d=null,y=!1,w=null,S=null,v=null,b=null,R=null,D=null,x=null,C=!1,L=null,ee=null,Y=null,V=null,F=null,ue.set(0,0,i.canvas.width,i.canvas.height),xe.set(0,0,i.canvas.width,i.canvas.height),a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:Ue,disable:Re,bindFramebuffer:De,drawBuffers:Te,useProgram:We,setBlending:et,setMaterial:pt,setFlipSided:ct,setCullFace:Ct,setLineWidth:ht,setPolygonOffset:qe,setScissorTest:zt,activeTexture:Pt,bindTexture:I,unbindTexture:T,compressedTexImage2D:te,texImage2D:oe,texImage3D:ge,updateUBOMapping:Ce,uniformBlockBinding:ke,texStorage2D:Ne,texStorage3D:A,texSubImage2D:he,texSubImage3D:me,compressedTexSubImage2D:Me,scissor:we,viewport:_e,reset:Ze}}function Vm(i,e,t,n,s,r,o){let a=s.isWebGL2,c=s.maxTextures,l=s.maxCubemapSize,h=s.maxTextureSize,u=s.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=/OculusBrowser/g.test(navigator.userAgent),_=new WeakMap,p,d=new WeakMap,y=!1;try{y=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(I,T){return y?new OffscreenCanvas(I,T):Ss("canvas")}function S(I,T,te,he){let me=1;if((I.width>he||I.height>he)&&(me=he/Math.max(I.width,I.height)),me<1||T===!0)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap){let Me=T?Da:Math.floor,Ne=Me(me*I.width),A=Me(me*I.height);p===void 0&&(p=w(Ne,A));let oe=te?w(Ne,A):p;return oe.width=Ne,oe.height=A,oe.getContext("2d").drawImage(I,0,0,Ne,A),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+I.width+"x"+I.height+") to ("+Ne+"x"+A+")."),oe}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+I.width+"x"+I.height+")."),I;return I}function v(I){return Pl(I.width)&&Pl(I.height)}function b(I){return a?!1:I.wrapS!==Xt||I.wrapT!==Xt||I.minFilter!==At&&I.minFilter!==yt}function R(I,T){return I.generateMipmaps&&T&&I.minFilter!==At&&I.minFilter!==yt}function D(I){i.generateMipmap(I)}function x(I,T,te,he,me=!1){if(a===!1)return T;if(I!==null){if(i[I]!==void 0)return i[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let Me=T;return T===6403&&(te===5126&&(Me=33326),te===5131&&(Me=33325),te===5121&&(Me=33321)),T===33319&&(te===5126&&(Me=33328),te===5131&&(Me=33327),te===5121&&(Me=33323)),T===6408&&(te===5126&&(Me=34836),te===5131&&(Me=34842),te===5121&&(Me=he===lt&&me===!1?35907:32856),te===32819&&(Me=32854),te===32820&&(Me=32855)),(Me===33325||Me===33326||Me===33327||Me===33328||Me===34842||Me===34836)&&e.get("EXT_color_buffer_float"),Me}function C(I,T,te){return R(I,te)===!0||I.isFramebufferTexture&&I.minFilter!==At&&I.minFilter!==yt?Math.log2(Math.max(T.width,T.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?T.mipmaps.length:1}function L(I){return I===At||I===el||I===tl?9728:9729}function ee(I){let T=I.target;T.removeEventListener("dispose",ee),V(T),T.isVideoTexture&&_.delete(T)}function Y(I){let T=I.target;T.removeEventListener("dispose",Y),Z(T)}function V(I){let T=n.get(I);if(T.__webglInit===void 0)return;let te=I.source,he=d.get(te);if(he){let me=he[T.__cacheKey];me.usedTimes--,me.usedTimes===0&&F(I),Object.keys(he).length===0&&d.delete(te)}n.remove(I)}function F(I){let T=n.get(I);i.deleteTexture(T.__webglTexture);let te=I.source,he=d.get(te);delete he[T.__cacheKey],o.memory.textures--}function Z(I){let T=I.texture,te=n.get(I),he=n.get(T);if(he.__webglTexture!==void 0&&(i.deleteTexture(he.__webglTexture),o.memory.textures--),I.depthTexture&&I.depthTexture.dispose(),I.isWebGLCubeRenderTarget)for(let me=0;me<6;me++)i.deleteFramebuffer(te.__webglFramebuffer[me]),te.__webglDepthbuffer&&i.deleteRenderbuffer(te.__webglDepthbuffer[me]);else{if(i.deleteFramebuffer(te.__webglFramebuffer),te.__webglDepthbuffer&&i.deleteRenderbuffer(te.__webglDepthbuffer),te.__webglMultisampledFramebuffer&&i.deleteFramebuffer(te.__webglMultisampledFramebuffer),te.__webglColorRenderbuffer)for(let me=0;me<te.__webglColorRenderbuffer.length;me++)te.__webglColorRenderbuffer[me]&&i.deleteRenderbuffer(te.__webglColorRenderbuffer[me]);te.__webglDepthRenderbuffer&&i.deleteRenderbuffer(te.__webglDepthRenderbuffer)}if(I.isWebGLMultipleRenderTargets)for(let me=0,Me=T.length;me<Me;me++){let Ne=n.get(T[me]);Ne.__webglTexture&&(i.deleteTexture(Ne.__webglTexture),o.memory.textures--),n.remove(T[me])}n.remove(T),n.remove(I)}let K=0;function se(){K=0}function $(){let I=K;return I>=c&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+c),K+=1,I}function U(I){let T=[];return T.push(I.wrapS),T.push(I.wrapT),T.push(I.magFilter),T.push(I.minFilter),T.push(I.anisotropy),T.push(I.internalFormat),T.push(I.format),T.push(I.type),T.push(I.generateMipmaps),T.push(I.premultiplyAlpha),T.push(I.flipY),T.push(I.unpackAlignment),T.push(I.encoding),T.join()}function k(I,T){let te=n.get(I);if(I.isVideoTexture&&zt(I),I.isRenderTargetTexture===!1&&I.version>0&&te.__version!==I.version){let he=I.image;if(he===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(he.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Re(te,I,T);return}}t.activeTexture(33984+T),t.bindTexture(3553,te.__webglTexture)}function le(I,T){let te=n.get(I);if(I.version>0&&te.__version!==I.version){Re(te,I,T);return}t.activeTexture(33984+T),t.bindTexture(35866,te.__webglTexture)}function ie(I,T){let te=n.get(I);if(I.version>0&&te.__version!==I.version){Re(te,I,T);return}t.activeTexture(33984+T),t.bindTexture(32879,te.__webglTexture)}function ue(I,T){let te=n.get(I);if(I.version>0&&te.__version!==I.version){De(te,I,T);return}t.activeTexture(33984+T),t.bindTexture(34067,te.__webglTexture)}let xe={[st]:10497,[Xt]:33071,[Ia]:33648},Ae={[At]:9728,[el]:9984,[tl]:9986,[yt]:9729,[Gh]:9985,[Is]:9987};function q(I,T,te){if(te?(i.texParameteri(I,10242,xe[T.wrapS]),i.texParameteri(I,10243,xe[T.wrapT]),(I===32879||I===35866)&&i.texParameteri(I,32882,xe[T.wrapR]),i.texParameteri(I,10240,Ae[T.magFilter]),i.texParameteri(I,10241,Ae[T.minFilter])):(i.texParameteri(I,10242,33071),i.texParameteri(I,10243,33071),(I===32879||I===35866)&&i.texParameteri(I,32882,33071),(T.wrapS!==Xt||T.wrapT!==Xt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(I,10240,L(T.magFilter)),i.texParameteri(I,10241,L(T.minFilter)),T.minFilter!==At&&T.minFilter!==yt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){let he=e.get("EXT_texture_filter_anisotropic");if(T.type===hn&&e.has("OES_texture_float_linear")===!1||a===!1&&T.type===mn&&e.has("OES_texture_half_float_linear")===!1)return;(T.anisotropy>1||n.get(T).__currentAnisotropy)&&(i.texParameterf(I,he.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,s.getMaxAnisotropy())),n.get(T).__currentAnisotropy=T.anisotropy)}}function Ue(I,T){let te=!1;I.__webglInit===void 0&&(I.__webglInit=!0,T.addEventListener("dispose",ee));let he=T.source,me=d.get(he);me===void 0&&(me={},d.set(he,me));let Me=U(T);if(Me!==I.__cacheKey){me[Me]===void 0&&(me[Me]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,te=!0),me[Me].usedTimes++;let Ne=me[I.__cacheKey];Ne!==void 0&&(me[I.__cacheKey].usedTimes--,Ne.usedTimes===0&&F(T)),I.__cacheKey=Me,I.__webglTexture=me[Me].texture}return te}function Re(I,T,te){let he=3553;T.isDataArrayTexture&&(he=35866),T.isData3DTexture&&(he=32879);let me=Ue(I,T),Me=T.source;if(t.activeTexture(33984+te),t.bindTexture(he,I.__webglTexture),Me.version!==Me.__currentVersion||me===!0){i.pixelStorei(37440,T.flipY),i.pixelStorei(37441,T.premultiplyAlpha),i.pixelStorei(3317,T.unpackAlignment),i.pixelStorei(37443,0);let Ne=b(T)&&v(T.image)===!1,A=S(T.image,Ne,!1,h);A=Pt(T,A);let oe=v(A)||a,ge=r.convert(T.format,T.encoding),we=r.convert(T.type),_e=x(T.internalFormat,ge,we,T.encoding,T.isVideoTexture);q(he,T,oe);let Ce,ke=T.mipmaps,Ze=a&&T.isVideoTexture!==!0,O=Me.__currentVersion===void 0||me===!0,ce=C(T,A,oe);if(T.isDepthTexture)_e=6402,a?T.type===hn?_e=36012:T.type===oi?_e=33190:T.type===Hi?_e=35056:_e=33189:T.type===hn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),T.format===ci&&_e===6402&&T.type!==mc&&T.type!==oi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),T.type=oi,we=r.convert(T.type)),T.format===Zi&&_e===6402&&(_e=34041,T.type!==Hi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),T.type=Hi,we=r.convert(T.type))),O&&(Ze?t.texStorage2D(3553,1,_e,A.width,A.height):t.texImage2D(3553,0,_e,A.width,A.height,0,ge,we,null));else if(T.isDataTexture)if(ke.length>0&&oe){Ze&&O&&t.texStorage2D(3553,ce,_e,ke[0].width,ke[0].height);for(let Q=0,J=ke.length;Q<J;Q++)Ce=ke[Q],Ze?t.texSubImage2D(3553,Q,0,0,Ce.width,Ce.height,ge,we,Ce.data):t.texImage2D(3553,Q,_e,Ce.width,Ce.height,0,ge,we,Ce.data);T.generateMipmaps=!1}else Ze?(O&&t.texStorage2D(3553,ce,_e,A.width,A.height),t.texSubImage2D(3553,0,0,0,A.width,A.height,ge,we,A.data)):t.texImage2D(3553,0,_e,A.width,A.height,0,ge,we,A.data);else if(T.isCompressedTexture){Ze&&O&&t.texStorage2D(3553,ce,_e,ke[0].width,ke[0].height);for(let Q=0,J=ke.length;Q<J;Q++)Ce=ke[Q],T.format!==Jt?ge!==null?Ze?t.compressedTexSubImage2D(3553,Q,0,0,Ce.width,Ce.height,ge,Ce.data):t.compressedTexImage2D(3553,Q,_e,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ze?t.texSubImage2D(3553,Q,0,0,Ce.width,Ce.height,ge,we,Ce.data):t.texImage2D(3553,Q,_e,Ce.width,Ce.height,0,ge,we,Ce.data)}else if(T.isDataArrayTexture)Ze?(O&&t.texStorage3D(35866,ce,_e,A.width,A.height,A.depth),t.texSubImage3D(35866,0,0,0,0,A.width,A.height,A.depth,ge,we,A.data)):t.texImage3D(35866,0,_e,A.width,A.height,A.depth,0,ge,we,A.data);else if(T.isData3DTexture)Ze?(O&&t.texStorage3D(32879,ce,_e,A.width,A.height,A.depth),t.texSubImage3D(32879,0,0,0,0,A.width,A.height,A.depth,ge,we,A.data)):t.texImage3D(32879,0,_e,A.width,A.height,A.depth,0,ge,we,A.data);else if(T.isFramebufferTexture){if(O)if(Ze)t.texStorage2D(3553,ce,_e,A.width,A.height);else{let Q=A.width,J=A.height;for(let ye=0;ye<ce;ye++)t.texImage2D(3553,ye,_e,Q,J,0,ge,we,null),Q>>=1,J>>=1}}else if(ke.length>0&&oe){Ze&&O&&t.texStorage2D(3553,ce,_e,ke[0].width,ke[0].height);for(let Q=0,J=ke.length;Q<J;Q++)Ce=ke[Q],Ze?t.texSubImage2D(3553,Q,0,0,ge,we,Ce):t.texImage2D(3553,Q,_e,ge,we,Ce);T.generateMipmaps=!1}else Ze?(O&&t.texStorage2D(3553,ce,_e,A.width,A.height),t.texSubImage2D(3553,0,0,0,ge,we,A)):t.texImage2D(3553,0,_e,ge,we,A);R(T,oe)&&D(he),Me.__currentVersion=Me.version,T.onUpdate&&T.onUpdate(T)}I.__version=T.version}function De(I,T,te){if(T.image.length!==6)return;let he=Ue(I,T),me=T.source;if(t.activeTexture(33984+te),t.bindTexture(34067,I.__webglTexture),me.version!==me.__currentVersion||he===!0){i.pixelStorei(37440,T.flipY),i.pixelStorei(37441,T.premultiplyAlpha),i.pixelStorei(3317,T.unpackAlignment),i.pixelStorei(37443,0);let Me=T.isCompressedTexture||T.image[0].isCompressedTexture,Ne=T.image[0]&&T.image[0].isDataTexture,A=[];for(let Q=0;Q<6;Q++)!Me&&!Ne?A[Q]=S(T.image[Q],!1,!0,l):A[Q]=Ne?T.image[Q].image:T.image[Q],A[Q]=Pt(T,A[Q]);let oe=A[0],ge=v(oe)||a,we=r.convert(T.format,T.encoding),_e=r.convert(T.type),Ce=x(T.internalFormat,we,_e,T.encoding),ke=a&&T.isVideoTexture!==!0,Ze=me.__currentVersion===void 0||he===!0,O=C(T,oe,ge);q(34067,T,ge);let ce;if(Me){ke&&Ze&&t.texStorage2D(34067,O,Ce,oe.width,oe.height);for(let Q=0;Q<6;Q++){ce=A[Q].mipmaps;for(let J=0;J<ce.length;J++){let ye=ce[J];T.format!==Jt?we!==null?ke?t.compressedTexSubImage2D(34069+Q,J,0,0,ye.width,ye.height,we,ye.data):t.compressedTexImage2D(34069+Q,J,Ce,ye.width,ye.height,0,ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ke?t.texSubImage2D(34069+Q,J,0,0,ye.width,ye.height,we,_e,ye.data):t.texImage2D(34069+Q,J,Ce,ye.width,ye.height,0,we,_e,ye.data)}}}else{ce=T.mipmaps,ke&&Ze&&(ce.length>0&&O++,t.texStorage2D(34067,O,Ce,A[0].width,A[0].height));for(let Q=0;Q<6;Q++)if(Ne){ke?t.texSubImage2D(34069+Q,0,0,0,A[Q].width,A[Q].height,we,_e,A[Q].data):t.texImage2D(34069+Q,0,Ce,A[Q].width,A[Q].height,0,we,_e,A[Q].data);for(let J=0;J<ce.length;J++){let Xe=ce[J].image[Q].image;ke?t.texSubImage2D(34069+Q,J+1,0,0,Xe.width,Xe.height,we,_e,Xe.data):t.texImage2D(34069+Q,J+1,Ce,Xe.width,Xe.height,0,we,_e,Xe.data)}}else{ke?t.texSubImage2D(34069+Q,0,0,0,we,_e,A[Q]):t.texImage2D(34069+Q,0,Ce,we,_e,A[Q]);for(let J=0;J<ce.length;J++){let ye=ce[J];ke?t.texSubImage2D(34069+Q,J+1,0,0,we,_e,ye.image[Q]):t.texImage2D(34069+Q,J+1,Ce,we,_e,ye.image[Q])}}}R(T,ge)&&D(34067),me.__currentVersion=me.version,T.onUpdate&&T.onUpdate(T)}I.__version=T.version}function Te(I,T,te,he,me){let Me=r.convert(te.format,te.encoding),Ne=r.convert(te.type),A=x(te.internalFormat,Me,Ne,te.encoding);n.get(T).__hasExternalTextures||(me===32879||me===35866?t.texImage3D(me,0,A,T.width,T.height,T.depth,0,Me,Ne,null):t.texImage2D(me,0,A,T.width,T.height,0,Me,Ne,null)),t.bindFramebuffer(36160,I),qe(T)?f.framebufferTexture2DMultisampleEXT(36160,he,me,n.get(te).__webglTexture,0,ht(T)):i.framebufferTexture2D(36160,he,me,n.get(te).__webglTexture,0),t.bindFramebuffer(36160,null)}function We(I,T,te){if(i.bindRenderbuffer(36161,I),T.depthBuffer&&!T.stencilBuffer){let he=33189;if(te||qe(T)){let me=T.depthTexture;me&&me.isDepthTexture&&(me.type===hn?he=36012:me.type===oi&&(he=33190));let Me=ht(T);qe(T)?f.renderbufferStorageMultisampleEXT(36161,Me,he,T.width,T.height):i.renderbufferStorageMultisample(36161,Me,he,T.width,T.height)}else i.renderbufferStorage(36161,he,T.width,T.height);i.framebufferRenderbuffer(36160,36096,36161,I)}else if(T.depthBuffer&&T.stencilBuffer){let he=ht(T);te&&qe(T)===!1?i.renderbufferStorageMultisample(36161,he,35056,T.width,T.height):qe(T)?f.renderbufferStorageMultisampleEXT(36161,he,35056,T.width,T.height):i.renderbufferStorage(36161,34041,T.width,T.height),i.framebufferRenderbuffer(36160,33306,36161,I)}else{let he=T.isWebGLMultipleRenderTargets===!0?T.texture:[T.texture];for(let me=0;me<he.length;me++){let Me=he[me],Ne=r.convert(Me.format,Me.encoding),A=r.convert(Me.type),oe=x(Me.internalFormat,Ne,A,Me.encoding),ge=ht(T);te&&qe(T)===!1?i.renderbufferStorageMultisample(36161,ge,oe,T.width,T.height):qe(T)?f.renderbufferStorageMultisampleEXT(36161,ge,oe,T.width,T.height):i.renderbufferStorage(36161,oe,T.width,T.height)}}i.bindRenderbuffer(36161,null)}function Fe(I,T){if(T&&T.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,I),!(T.depthTexture&&T.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(T.depthTexture).__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),k(T.depthTexture,0);let he=n.get(T.depthTexture).__webglTexture,me=ht(T);if(T.depthTexture.format===ci)qe(T)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,he,0,me):i.framebufferTexture2D(36160,36096,3553,he,0);else if(T.depthTexture.format===Zi)qe(T)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,he,0,me):i.framebufferTexture2D(36160,33306,3553,he,0);else throw new Error("Unknown depthTexture format")}function Le(I){let T=n.get(I),te=I.isWebGLCubeRenderTarget===!0;if(I.depthTexture&&!T.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");Fe(T.__webglFramebuffer,I)}else if(te){T.__webglDepthbuffer=[];for(let he=0;he<6;he++)t.bindFramebuffer(36160,T.__webglFramebuffer[he]),T.__webglDepthbuffer[he]=i.createRenderbuffer(),We(T.__webglDepthbuffer[he],I,!1)}else t.bindFramebuffer(36160,T.__webglFramebuffer),T.__webglDepthbuffer=i.createRenderbuffer(),We(T.__webglDepthbuffer,I,!1);t.bindFramebuffer(36160,null)}function et(I,T,te){let he=n.get(I);T!==void 0&&Te(he.__webglFramebuffer,I,I.texture,36064,3553),te!==void 0&&Le(I)}function pt(I){let T=I.texture,te=n.get(I),he=n.get(T);I.addEventListener("dispose",Y),I.isWebGLMultipleRenderTargets!==!0&&(he.__webglTexture===void 0&&(he.__webglTexture=i.createTexture()),he.__version=T.version,o.memory.textures++);let me=I.isWebGLCubeRenderTarget===!0,Me=I.isWebGLMultipleRenderTargets===!0,Ne=v(I)||a;if(me){te.__webglFramebuffer=[];for(let A=0;A<6;A++)te.__webglFramebuffer[A]=i.createFramebuffer()}else{if(te.__webglFramebuffer=i.createFramebuffer(),Me)if(s.drawBuffers){let A=I.texture;for(let oe=0,ge=A.length;oe<ge;oe++){let we=n.get(A[oe]);we.__webglTexture===void 0&&(we.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&I.samples>0&&qe(I)===!1){let A=Me?T:[T];te.__webglMultisampledFramebuffer=i.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,te.__webglMultisampledFramebuffer);for(let oe=0;oe<A.length;oe++){let ge=A[oe];te.__webglColorRenderbuffer[oe]=i.createRenderbuffer(),i.bindRenderbuffer(36161,te.__webglColorRenderbuffer[oe]);let we=r.convert(ge.format,ge.encoding),_e=r.convert(ge.type),Ce=x(ge.internalFormat,we,_e,ge.encoding),ke=ht(I);i.renderbufferStorageMultisample(36161,ke,Ce,I.width,I.height),i.framebufferRenderbuffer(36160,36064+oe,36161,te.__webglColorRenderbuffer[oe])}i.bindRenderbuffer(36161,null),I.depthBuffer&&(te.__webglDepthRenderbuffer=i.createRenderbuffer(),We(te.__webglDepthRenderbuffer,I,!0)),t.bindFramebuffer(36160,null)}}if(me){t.bindTexture(34067,he.__webglTexture),q(34067,T,Ne);for(let A=0;A<6;A++)Te(te.__webglFramebuffer[A],I,T,36064,34069+A);R(T,Ne)&&D(34067),t.unbindTexture()}else if(Me){let A=I.texture;for(let oe=0,ge=A.length;oe<ge;oe++){let we=A[oe],_e=n.get(we);t.bindTexture(3553,_e.__webglTexture),q(3553,we,Ne),Te(te.__webglFramebuffer,I,we,36064+oe,3553),R(we,Ne)&&D(3553)}t.unbindTexture()}else{let A=3553;(I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(a?A=I.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(A,he.__webglTexture),q(A,T,Ne),Te(te.__webglFramebuffer,I,T,36064,A),R(T,Ne)&&D(A),t.unbindTexture()}I.depthBuffer&&Le(I)}function ct(I){let T=v(I)||a,te=I.isWebGLMultipleRenderTargets===!0?I.texture:[I.texture];for(let he=0,me=te.length;he<me;he++){let Me=te[he];if(R(Me,T)){let Ne=I.isWebGLCubeRenderTarget?34067:3553,A=n.get(Me).__webglTexture;t.bindTexture(Ne,A),D(Ne),t.unbindTexture()}}}function Ct(I){if(a&&I.samples>0&&qe(I)===!1){let T=I.isWebGLMultipleRenderTargets?I.texture:[I.texture],te=I.width,he=I.height,me=16384,Me=[],Ne=I.stencilBuffer?33306:36096,A=n.get(I),oe=I.isWebGLMultipleRenderTargets===!0;if(oe)for(let ge=0;ge<T.length;ge++)t.bindFramebuffer(36160,A.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+ge,36161,null),t.bindFramebuffer(36160,A.__webglFramebuffer),i.framebufferTexture2D(36009,36064+ge,3553,null,0);t.bindFramebuffer(36008,A.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,A.__webglFramebuffer);for(let ge=0;ge<T.length;ge++){Me.push(36064+ge),I.depthBuffer&&Me.push(Ne);let we=A.__ignoreDepthValues!==void 0?A.__ignoreDepthValues:!1;if(we===!1&&(I.depthBuffer&&(me|=256),I.stencilBuffer&&(me|=1024)),oe&&i.framebufferRenderbuffer(36008,36064,36161,A.__webglColorRenderbuffer[ge]),we===!0&&(i.invalidateFramebuffer(36008,[Ne]),i.invalidateFramebuffer(36009,[Ne])),oe){let _e=n.get(T[ge]).__webglTexture;i.framebufferTexture2D(36009,36064,3553,_e,0)}i.blitFramebuffer(0,0,te,he,0,0,te,he,me,9728),g&&i.invalidateFramebuffer(36008,Me)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),oe)for(let ge=0;ge<T.length;ge++){t.bindFramebuffer(36160,A.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+ge,36161,A.__webglColorRenderbuffer[ge]);let we=n.get(T[ge]).__webglTexture;t.bindFramebuffer(36160,A.__webglFramebuffer),i.framebufferTexture2D(36009,36064+ge,3553,we,0)}t.bindFramebuffer(36009,A.__webglMultisampledFramebuffer)}}function ht(I){return Math.min(u,I.samples)}function qe(I){let T=n.get(I);return a&&I.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&T.__useRenderToTexture!==!1}function zt(I){let T=o.render.frame;_.get(I)!==T&&(_.set(I,T),I.update())}function Pt(I,T){let te=I.encoding,he=I.format,me=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||I.format===La||te!==gn&&(te===lt?a===!1?e.has("EXT_sRGB")===!0&&he===Jt?(I.format=La,I.minFilter=yt,I.generateMipmaps=!1):T=_r.sRGBToLinear(T):(he!==Jt||me!==ui)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",te)),T}this.allocateTextureUnit=$,this.resetTextureUnits=se,this.setTexture2D=k,this.setTexture2DArray=le,this.setTexture3D=ie,this.setTextureCube=ue,this.rebindTextures=et,this.setupRenderTarget=pt,this.updateRenderTargetMipmap=ct,this.updateMultisampleRenderTarget=Ct,this.setupDepthRenderbuffer=Le,this.setupFrameBufferTexture=Te,this.useMultisampledRTT=qe}function Hm(i,e,t){let n=t.isWebGL2;function s(r,o=null){let a;if(r===ui)return 5121;if(r===Zh)return 32819;if(r===Yh)return 32820;if(r===Wh)return 5120;if(r===Xh)return 5122;if(r===mc)return 5123;if(r===qh)return 5124;if(r===oi)return 5125;if(r===hn)return 5126;if(r===mn)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===Jh)return 6406;if(r===Jt)return 6408;if(r===Kh)return 6409;if(r===jh)return 6410;if(r===ci)return 6402;if(r===Zi)return 34041;if(r===fo)return 6403;if(r===$h)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===La)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===Qh)return 36244;if(r===eu)return 33319;if(r===tu)return 33320;if(r===nu)return 36249;if(r===$r||r===Kr||r===jr||r===Qr)if(o===lt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===$r)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Kr)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===jr)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Qr)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===$r)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Kr)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===jr)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Qr)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===nl||r===il||r===sl||r===rl)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===nl)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===il)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===sl)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===rl)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===iu)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===al||r===ol)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(r===al)return o===lt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===ol)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===ll||r===cl||r===hl||r===ul||r===fl||r===dl||r===pl||r===ml||r===gl||r===xl||r===_l||r===vl||r===yl||r===Ml)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(r===ll)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===cl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===hl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===ul)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===fl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===dl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===pl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===ml)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===gl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===xl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===_l)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===vl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===yl)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Ml)return o===lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===wl)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(r===wl)return o===lt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===Hi?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[r]!==void 0?i[r]:null}return{convert:s}}var Za=class extends It{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}},ki=class extends Lt{constructor(){super(),this.isGroup=!0,this.type="Group"}},Gm={type:"move"},bs=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ki,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ki,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new z,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new z),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ki,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new z,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new z),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let s=null,r=null,o=null,a=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(let p of e.hand.values()){let d=t.getJointPose(p,n);if(l.joints[p.jointName]===void 0){let w=new ki;w.matrixAutoUpdate=!1,w.visible=!1,l.joints[p.jointName]=w,l.add(w)}let y=l.joints[p.jointName];d!==null&&(y.matrix.fromArray(d.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.jointRadius=d.radius),y.visible=d!==null}let h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],f=h.position.distanceTo(u.position),g=.02,_=.005;l.inputState.pinching&&f>g+_?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&f<=g-_&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(s=t.getPose(e.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Gm)))}return a!==null&&(a.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}},Ya=class extends Dt{constructor(e,t,n,s,r,o,a,c,l,h){if(h=h!==void 0?h:ci,h!==ci&&h!==Zi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===ci&&(n=oi),n===void 0&&h===Zi&&(n=Hi),super(null,s,r,o,a,c,h,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:At,this.minFilter=c!==void 0?c:At,this.flipY=!1,this.generateMipmaps=!1}},Ja=class extends xn{constructor(e,t){super();let n=this,s=null,r=1,o=null,a="local-floor",c=null,l=null,h=null,u=null,f=null,g=null,_=t.getContextAttributes(),p=null,d=null,y=[],w=[],S=new It;S.layers.enable(1),S.viewport=new _t;let v=new It;v.layers.enable(2),v.viewport=new _t;let b=[S,v],R=new Za;R.layers.enable(1),R.layers.enable(2);let D=null,x=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(U){let k=y[U];return k===void 0&&(k=new bs,y[U]=k),k.getTargetRaySpace()},this.getControllerGrip=function(U){let k=y[U];return k===void 0&&(k=new bs,y[U]=k),k.getGripSpace()},this.getHand=function(U){let k=y[U];return k===void 0&&(k=new bs,y[U]=k),k.getHandSpace()};function C(U){let k=w.indexOf(U.inputSource);if(k===-1)return;let le=y[k];le!==void 0&&le.dispatchEvent({type:U.type,data:U.inputSource})}function L(){s.removeEventListener("select",C),s.removeEventListener("selectstart",C),s.removeEventListener("selectend",C),s.removeEventListener("squeeze",C),s.removeEventListener("squeezestart",C),s.removeEventListener("squeezeend",C),s.removeEventListener("end",L),s.removeEventListener("inputsourceschange",ee);for(let U=0;U<y.length;U++){let k=w[U];k!==null&&(w[U]=null,y[U].disconnect(k))}D=null,x=null,e.setRenderTarget(p),f=null,u=null,h=null,s=null,d=null,$.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(U){r=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(U){a=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(U){c=U},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return h},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(U){if(s=U,s!==null){if(p=e.getRenderTarget(),s.addEventListener("select",C),s.addEventListener("selectstart",C),s.addEventListener("selectend",C),s.addEventListener("squeeze",C),s.addEventListener("squeezestart",C),s.addEventListener("squeezeend",C),s.addEventListener("end",L),s.addEventListener("inputsourceschange",ee),_.xrCompatible!==!0&&await t.makeXRCompatible(),s.renderState.layers===void 0||e.capabilities.isWebGL2===!1){let k={antialias:s.renderState.layers===void 0?_.antialias:!0,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(s,t,k),s.updateRenderState({baseLayer:f}),d=new Dn(f.framebufferWidth,f.framebufferHeight,{format:Jt,type:ui,encoding:e.outputEncoding,stencilBuffer:_.stencil})}else{let k=null,le=null,ie=null;_.depth&&(ie=_.stencil?35056:33190,k=_.stencil?Zi:ci,le=_.stencil?Hi:oi);let ue={colorFormat:32856,depthFormat:ie,scaleFactor:r};h=new XRWebGLBinding(s,t),u=h.createProjectionLayer(ue),s.updateRenderState({layers:[u]}),d=new Dn(u.textureWidth,u.textureHeight,{format:Jt,type:ui,depthTexture:new Ya(u.textureWidth,u.textureHeight,le,void 0,void 0,void 0,void 0,void 0,void 0,k),stencilBuffer:_.stencil,encoding:e.outputEncoding,samples:_.antialias?4:0});let xe=e.properties.get(d);xe.__ignoreDepthValues=u.ignoreDepthValues}d.isXRRenderTarget=!0,this.setFoveation(1),c=null,o=await s.requestReferenceSpace(a),$.setContext(s),$.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function ee(U){for(let k=0;k<U.removed.length;k++){let le=U.removed[k],ie=w.indexOf(le);ie>=0&&(w[ie]=null,y[ie].dispatchEvent({type:"disconnected",data:le}))}for(let k=0;k<U.added.length;k++){let le=U.added[k],ie=w.indexOf(le);if(ie===-1){for(let xe=0;xe<y.length;xe++)if(xe>=w.length){w.push(le),ie=xe;break}else if(w[xe]===null){w[xe]=le,ie=xe;break}if(ie===-1)break}let ue=y[ie];ue&&ue.dispatchEvent({type:"connected",data:le})}}let Y=new z,V=new z;function F(U,k,le){Y.setFromMatrixPosition(k.matrixWorld),V.setFromMatrixPosition(le.matrixWorld);let ie=Y.distanceTo(V),ue=k.projectionMatrix.elements,xe=le.projectionMatrix.elements,Ae=ue[14]/(ue[10]-1),q=ue[14]/(ue[10]+1),Ue=(ue[9]+1)/ue[5],Re=(ue[9]-1)/ue[5],De=(ue[8]-1)/ue[0],Te=(xe[8]+1)/xe[0],We=Ae*De,Fe=Ae*Te,Le=ie/(-De+Te),et=Le*-De;k.matrixWorld.decompose(U.position,U.quaternion,U.scale),U.translateX(et),U.translateZ(Le),U.matrixWorld.compose(U.position,U.quaternion,U.scale),U.matrixWorldInverse.copy(U.matrixWorld).invert();let pt=Ae+Le,ct=q+Le,Ct=We-et,ht=Fe+(ie-et),qe=Ue*q/ct*pt,zt=Re*q/ct*pt;U.projectionMatrix.makePerspective(Ct,ht,qe,zt,pt,ct)}function Z(U,k){k===null?U.matrixWorld.copy(U.matrix):U.matrixWorld.multiplyMatrices(k.matrixWorld,U.matrix),U.matrixWorldInverse.copy(U.matrixWorld).invert()}this.updateCamera=function(U){if(s===null)return;R.near=v.near=S.near=U.near,R.far=v.far=S.far=U.far,(D!==R.near||x!==R.far)&&(s.updateRenderState({depthNear:R.near,depthFar:R.far}),D=R.near,x=R.far);let k=U.parent,le=R.cameras;Z(R,k);for(let ue=0;ue<le.length;ue++)Z(le[ue],k);R.matrixWorld.decompose(R.position,R.quaternion,R.scale),U.matrix.copy(R.matrix),U.matrix.decompose(U.position,U.quaternion,U.scale);let ie=U.children;for(let ue=0,xe=ie.length;ue<xe;ue++)ie[ue].updateMatrixWorld(!0);le.length===2?F(R,S,v):R.projectionMatrix.copy(S.projectionMatrix)},this.getCamera=function(){return R},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(U){u!==null&&(u.fixedFoveation=U),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=U)};let K=null;function se(U,k){if(l=k.getViewerPose(c||o),g=k,l!==null){let le=l.views;f!==null&&(e.setRenderTargetFramebuffer(d,f.framebuffer),e.setRenderTarget(d));let ie=!1;le.length!==R.cameras.length&&(R.cameras.length=0,ie=!0);for(let ue=0;ue<le.length;ue++){let xe=le[ue],Ae=null;if(f!==null)Ae=f.getViewport(xe);else{let Ue=h.getViewSubImage(u,xe);Ae=Ue.viewport,ue===0&&(e.setRenderTargetTextures(d,Ue.colorTexture,u.ignoreDepthValues?void 0:Ue.depthStencilTexture),e.setRenderTarget(d))}let q=b[ue];q===void 0&&(q=new It,q.layers.enable(ue),q.viewport=new _t,b[ue]=q),q.matrix.fromArray(xe.transform.matrix),q.projectionMatrix.fromArray(xe.projectionMatrix),q.viewport.set(Ae.x,Ae.y,Ae.width,Ae.height),ue===0&&R.matrix.copy(q.matrix),ie===!0&&R.cameras.push(q)}}for(let le=0;le<y.length;le++){let ie=w[le],ue=y[le];ie!==null&&ue!==void 0&&ue.update(ie,k,c||o)}K&&K(U,k),g=null}let $=new vc;$.setAnimationLoop(se),this.setAnimationLoop=function(U){K=U},this.dispose=function(){}}};function Wm(i,e){function t(p,d){p.fogColor.value.copy(d.color),d.isFog?(p.fogNear.value=d.near,p.fogFar.value=d.far):d.isFogExp2&&(p.fogDensity.value=d.density)}function n(p,d,y,w,S){d.isMeshBasicMaterial||d.isMeshLambertMaterial?s(p,d):d.isMeshToonMaterial?(s(p,d),h(p,d)):d.isMeshPhongMaterial?(s(p,d),l(p,d)):d.isMeshStandardMaterial?(s(p,d),u(p,d),d.isMeshPhysicalMaterial&&f(p,d,S)):d.isMeshMatcapMaterial?(s(p,d),g(p,d)):d.isMeshDepthMaterial?s(p,d):d.isMeshDistanceMaterial?(s(p,d),_(p,d)):d.isMeshNormalMaterial?s(p,d):d.isLineBasicMaterial?(r(p,d),d.isLineDashedMaterial&&o(p,d)):d.isPointsMaterial?a(p,d,y,w):d.isSpriteMaterial?c(p,d):d.isShadowMaterial?(p.color.value.copy(d.color),p.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function s(p,d){p.opacity.value=d.opacity,d.color&&p.diffuse.value.copy(d.color),d.emissive&&p.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,d.side===$t&&(p.bumpScale.value*=-1)),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),d.side===$t&&p.normalScale.value.negate()),d.specularMap&&(p.specularMap.value=d.specularMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let y=e.get(d).envMap;if(y&&(p.envMap.value=y,p.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=d.reflectivity,p.ior.value=d.ior,p.refractionRatio.value=d.refractionRatio),d.lightMap){p.lightMap.value=d.lightMap;let v=i.physicallyCorrectLights!==!0?Math.PI:1;p.lightMapIntensity.value=d.lightMapIntensity*v}d.aoMap&&(p.aoMap.value=d.aoMap,p.aoMapIntensity.value=d.aoMapIntensity);let w;d.map?w=d.map:d.specularMap?w=d.specularMap:d.displacementMap?w=d.displacementMap:d.normalMap?w=d.normalMap:d.bumpMap?w=d.bumpMap:d.roughnessMap?w=d.roughnessMap:d.metalnessMap?w=d.metalnessMap:d.alphaMap?w=d.alphaMap:d.emissiveMap?w=d.emissiveMap:d.clearcoatMap?w=d.clearcoatMap:d.clearcoatNormalMap?w=d.clearcoatNormalMap:d.clearcoatRoughnessMap?w=d.clearcoatRoughnessMap:d.iridescenceMap?w=d.iridescenceMap:d.iridescenceThicknessMap?w=d.iridescenceThicknessMap:d.specularIntensityMap?w=d.specularIntensityMap:d.specularColorMap?w=d.specularColorMap:d.transmissionMap?w=d.transmissionMap:d.thicknessMap?w=d.thicknessMap:d.sheenColorMap?w=d.sheenColorMap:d.sheenRoughnessMap&&(w=d.sheenRoughnessMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),p.uvTransform.value.copy(w.matrix));let S;d.aoMap?S=d.aoMap:d.lightMap&&(S=d.lightMap),S!==void 0&&(S.isWebGLRenderTarget&&(S=S.texture),S.matrixAutoUpdate===!0&&S.updateMatrix(),p.uv2Transform.value.copy(S.matrix))}function r(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity}function o(p,d){p.dashSize.value=d.dashSize,p.totalSize.value=d.dashSize+d.gapSize,p.scale.value=d.scale}function a(p,d,y,w){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.size.value=d.size*y,p.scale.value=w*.5,d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let S;d.map?S=d.map:d.alphaMap&&(S=d.alphaMap),S!==void 0&&(S.matrixAutoUpdate===!0&&S.updateMatrix(),p.uvTransform.value.copy(S.matrix))}function c(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.rotation.value=d.rotation,d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let y;d.map?y=d.map:d.alphaMap&&(y=d.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),p.uvTransform.value.copy(y.matrix))}function l(p,d){p.specular.value.copy(d.specular),p.shininess.value=Math.max(d.shininess,1e-4)}function h(p,d){d.gradientMap&&(p.gradientMap.value=d.gradientMap)}function u(p,d){p.roughness.value=d.roughness,p.metalness.value=d.metalness,d.roughnessMap&&(p.roughnessMap.value=d.roughnessMap),d.metalnessMap&&(p.metalnessMap.value=d.metalnessMap),e.get(d).envMap&&(p.envMapIntensity.value=d.envMapIntensity)}function f(p,d,y){p.ior.value=d.ior,d.sheen>0&&(p.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),p.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(p.sheenColorMap.value=d.sheenColorMap),d.sheenRoughnessMap&&(p.sheenRoughnessMap.value=d.sheenRoughnessMap)),d.clearcoat>0&&(p.clearcoat.value=d.clearcoat,p.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(p.clearcoatMap.value=d.clearcoatMap),d.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap),d.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),p.clearcoatNormalMap.value=d.clearcoatNormalMap,d.side===$t&&p.clearcoatNormalScale.value.negate())),d.iridescence>0&&(p.iridescence.value=d.iridescence,p.iridescenceIOR.value=d.iridescenceIOR,p.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(p.iridescenceMap.value=d.iridescenceMap),d.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=d.iridescenceThicknessMap)),d.transmission>0&&(p.transmission.value=d.transmission,p.transmissionSamplerMap.value=y.texture,p.transmissionSamplerSize.value.set(y.width,y.height),d.transmissionMap&&(p.transmissionMap.value=d.transmissionMap),p.thickness.value=d.thickness,d.thicknessMap&&(p.thicknessMap.value=d.thicknessMap),p.attenuationDistance.value=d.attenuationDistance,p.attenuationColor.value.copy(d.attenuationColor)),p.specularIntensity.value=d.specularIntensity,p.specularColor.value.copy(d.specularColor),d.specularIntensityMap&&(p.specularIntensityMap.value=d.specularIntensityMap),d.specularColorMap&&(p.specularColorMap.value=d.specularColorMap)}function g(p,d){d.matcap&&(p.matcap.value=d.matcap)}function _(p,d){p.referencePosition.value.copy(d.referencePosition),p.nearDistance.value=d.nearDistance,p.farDistance.value=d.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Xm(i,e,t,n){let s={},r={},o=[],a=t.isWebGL2?i.getParameter(35375):0;function c(w,S){let v=S.program;n.uniformBlockBinding(w,v)}function l(w,S){let v=s[w.id];v===void 0&&(_(w),v=h(w),s[w.id]=v,w.addEventListener("dispose",d));let b=S.program;n.updateUBOMapping(w,b);let R=e.render.frame;r[w.id]!==R&&(f(w),r[w.id]=R)}function h(w){let S=u();w.__bindingPointIndex=S;let v=i.createBuffer(),b=w.__size,R=w.usage;return i.bindBuffer(35345,v),i.bufferData(35345,b,R),i.bindBuffer(35345,null),i.bindBufferBase(35345,S,v),v}function u(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(w){let S=s[w.id],v=w.uniforms,b=w.__cache;i.bindBuffer(35345,S);for(let R=0,D=v.length;R<D;R++){let x=v[R];if(g(x,R,b)===!0){let C=x.value,L=x.__offset;typeof C=="number"?(x.__data[0]=C,i.bufferSubData(35345,L,x.__data)):(x.value.isMatrix3?(x.__data[0]=x.value.elements[0],x.__data[1]=x.value.elements[1],x.__data[2]=x.value.elements[2],x.__data[3]=x.value.elements[0],x.__data[4]=x.value.elements[3],x.__data[5]=x.value.elements[4],x.__data[6]=x.value.elements[5],x.__data[7]=x.value.elements[0],x.__data[8]=x.value.elements[6],x.__data[9]=x.value.elements[7],x.__data[10]=x.value.elements[8],x.__data[11]=x.value.elements[0]):C.toArray(x.__data),i.bufferSubData(35345,L,x.__data))}}i.bindBuffer(35345,null)}function g(w,S,v){let b=w.value;if(v[S]===void 0)return typeof b=="number"?v[S]=b:v[S]=b.clone(),!0;if(typeof b=="number"){if(v[S]!==b)return v[S]=b,!0}else{let R=v[S];if(R.equals(b)===!1)return R.copy(b),!0}return!1}function _(w){let S=w.uniforms,v=0,b=16,R=0;for(let D=0,x=S.length;D<x;D++){let C=S[D],L=p(C);if(C.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),C.__offset=v,D>0){R=v%b;let ee=b-R;R!==0&&ee-L.boundary<0&&(v+=b-R,C.__offset=v)}v+=L.storage}return R=v%b,R>0&&(v+=b-R),w.__size=v,w.__cache={},this}function p(w){let S=w.value,v={boundary:0,storage:0};return typeof S=="number"?(v.boundary=4,v.storage=4):S.isVector2?(v.boundary=8,v.storage=8):S.isVector3||S.isColor?(v.boundary=16,v.storage=12):S.isVector4?(v.boundary=16,v.storage=16):S.isMatrix3?(v.boundary=48,v.storage=48):S.isMatrix4?(v.boundary=64,v.storage=64):S.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",S),v}function d(w){let S=w.target;S.removeEventListener("dispose",d);let v=o.indexOf(S.__bindingPointIndex);o.splice(v,1),i.deleteBuffer(s[S.id]),delete s[S.id],delete r[S.id]}function y(){for(let w in s)i.deleteBuffer(s[w]);o=[],s={},r={}}return{bind:c,update:l,dispose:y}}function qm(){let i=Ss("canvas");return i.style.display="block",i}function mo(i={}){this.isWebGLRenderer=!0;let e=i.canvas!==void 0?i.canvas:qm(),t=i.context!==void 0?i.context:null,n=i.depth!==void 0?i.depth:!0,s=i.stencil!==void 0?i.stencil:!0,r=i.antialias!==void 0?i.antialias:!1,o=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,a=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,c=i.powerPreference!==void 0?i.powerPreference:"default",l=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1,h;t!==null?h=t.getContextAttributes().alpha:h=i.alpha!==void 0?i.alpha:!1;let u=null,f=null,g=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=gn,this.physicallyCorrectLights=!1,this.toneMapping=Ln,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});let p=this,d=!1,y=0,w=0,S=null,v=-1,b=null,R=new _t,D=new _t,x=null,C=e.width,L=e.height,ee=1,Y=null,V=null,F=new _t(0,0,C,L),Z=new _t(0,0,C,L),K=!1,se=new Er,$=!1,U=!1,k=null,le=new ot,ie=new ze,ue=new z,xe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ae(){return S===null?ee:1}let q=t;function Ue(E,W){for(let G=0;G<E.length;G++){let H=E[G],ne=e.getContext(H,W);if(ne!==null)return ne}return null}try{let E={alpha:!0,depth:n,stencil:s,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:c,failIfMajorPerformanceCaveat:l};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${ho}`),e.addEventListener("webglcontextlost",Ce,!1),e.addEventListener("webglcontextrestored",ke,!1),e.addEventListener("webglcontextcreationerror",Ze,!1),q===null){let W=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&W.shift(),q=Ue(W,E),q===null)throw Ue(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}q.getShaderPrecisionFormat===void 0&&(q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(E){throw console.error("THREE.WebGLRenderer: "+E.message),E}let Re,De,Te,We,Fe,Le,et,pt,ct,Ct,ht,qe,zt,Pt,I,T,te,he,me,Me,Ne,A,oe,ge;function we(){Re=new dp(q),De=new op(q,Re,i),Re.init(De),A=new Hm(q,Re,De),Te=new km(q,Re,De),We=new gp,Fe=new Cm,Le=new Vm(q,Re,Te,Fe,De,A,We),et=new cp(p),pt=new fp(p),ct=new Au(q,De),oe=new rp(q,Re,ct,De),Ct=new pp(q,ct,We,oe),ht=new yp(q,Ct,ct,We),me=new vp(q,De,Le),T=new lp(Fe),qe=new Em(p,et,pt,Re,De,oe,T),zt=new Wm(p,Fe),Pt=new Rm,I=new Fm(Re,De),he=new sp(p,et,Te,ht,h,o),te=new Bm(p,ht,De),ge=new Xm(q,We,De,Te),Me=new ap(q,Re,We,De),Ne=new mp(q,Re,We,De),We.programs=qe.programs,p.capabilities=De,p.extensions=Re,p.properties=Fe,p.renderLists=Pt,p.shadowMap=te,p.state=Te,p.info=We}we();let _e=new Ja(p,q);this.xr=_e,this.getContext=function(){return q},this.getContextAttributes=function(){return q.getContextAttributes()},this.forceContextLoss=function(){let E=Re.get("WEBGL_lose_context");E&&E.loseContext()},this.forceContextRestore=function(){let E=Re.get("WEBGL_lose_context");E&&E.restoreContext()},this.getPixelRatio=function(){return ee},this.setPixelRatio=function(E){E!==void 0&&(ee=E,this.setSize(C,L,!1))},this.getSize=function(E){return E.set(C,L)},this.setSize=function(E,W,G){if(_e.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=E,L=W,e.width=Math.floor(E*ee),e.height=Math.floor(W*ee),G!==!1&&(e.style.width=E+"px",e.style.height=W+"px"),this.setViewport(0,0,E,W)},this.getDrawingBufferSize=function(E){return E.set(C*ee,L*ee).floor()},this.setDrawingBufferSize=function(E,W,G){C=E,L=W,ee=G,e.width=Math.floor(E*G),e.height=Math.floor(W*G),this.setViewport(0,0,E,W)},this.getCurrentViewport=function(E){return E.copy(R)},this.getViewport=function(E){return E.copy(F)},this.setViewport=function(E,W,G,H){E.isVector4?F.set(E.x,E.y,E.z,E.w):F.set(E,W,G,H),Te.viewport(R.copy(F).multiplyScalar(ee).floor())},this.getScissor=function(E){return E.copy(Z)},this.setScissor=function(E,W,G,H){E.isVector4?Z.set(E.x,E.y,E.z,E.w):Z.set(E,W,G,H),Te.scissor(D.copy(Z).multiplyScalar(ee).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(E){Te.setScissorTest(K=E)},this.setOpaqueSort=function(E){Y=E},this.setTransparentSort=function(E){V=E},this.getClearColor=function(E){return E.copy(he.getClearColor())},this.setClearColor=function(){he.setClearColor.apply(he,arguments)},this.getClearAlpha=function(){return he.getClearAlpha()},this.setClearAlpha=function(){he.setClearAlpha.apply(he,arguments)},this.clear=function(E=!0,W=!0,G=!0){let H=0;E&&(H|=16384),W&&(H|=256),G&&(H|=1024),q.clear(H)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ce,!1),e.removeEventListener("webglcontextrestored",ke,!1),e.removeEventListener("webglcontextcreationerror",Ze,!1),Pt.dispose(),I.dispose(),Fe.dispose(),et.dispose(),pt.dispose(),ht.dispose(),oe.dispose(),ge.dispose(),qe.dispose(),_e.dispose(),_e.removeEventListener("sessionstart",Xe),_e.removeEventListener("sessionend",mt),k&&(k.dispose(),k=null),rt.stop()};function Ce(E){E.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),d=!0}function ke(){console.log("THREE.WebGLRenderer: Context Restored."),d=!1;let E=We.autoReset,W=te.enabled,G=te.autoUpdate,H=te.needsUpdate,ne=te.type;we(),We.autoReset=E,te.enabled=W,te.autoUpdate=G,te.needsUpdate=H,te.type=ne}function Ze(E){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",E.statusMessage)}function O(E){let W=E.target;W.removeEventListener("dispose",O),ce(W)}function ce(E){Q(E),Fe.remove(E)}function Q(E){let W=Fe.get(E).programs;W!==void 0&&(W.forEach(function(G){qe.releaseProgram(G)}),E.isShaderMaterial&&qe.releaseShaderCache(E))}this.renderBufferDirect=function(E,W,G,H,ne,m){W===null&&(W=xe);let M=ne.isMesh&&ne.matrixWorld.determinant()<0,P=Yr(E,W,G,H,ne);Te.setMaterial(H,M);let N=G.index,X=G.attributes.position;if(N===null){if(X===void 0||X.count===0)return}else if(N.count===0)return;let B=1;H.wireframe===!0&&(N=Ct.getWireframeAttribute(G),B=2),oe.setup(ne,H,P,G,N);let j,re=Me;N!==null&&(j=ct.get(N),re=Ne,re.setIndex(j));let pe=N!==null?N.count:X.count,ae=G.drawRange.start*B,fe=G.drawRange.count*B,be=m!==null?m.start*B:0,de=m!==null?m.count*B:1/0,Ie=Math.max(ae,be),Pe=Math.min(pe,ae+fe,be+de)-1,Se=Math.max(0,Pe-Ie+1);if(Se!==0){if(ne.isMesh)H.wireframe===!0?(Te.setLineWidth(H.wireframeLinewidth*Ae()),re.setMode(1)):re.setMode(4);else if(ne.isLine){let Ee=H.linewidth;Ee===void 0&&(Ee=1),Te.setLineWidth(Ee*Ae()),ne.isLineSegments?re.setMode(1):ne.isLineLoop?re.setMode(2):re.setMode(3)}else ne.isPoints?re.setMode(0):ne.isSprite&&re.setMode(4);if(ne.isInstancedMesh)re.renderInstances(Ie,Se,ne.count);else if(G.isInstancedBufferGeometry){let Ee=Math.min(G.instanceCount,G._maxInstanceCount);re.renderInstances(Ie,Se,Ee)}else re.render(Ie,Se)}},this.compile=function(E,W){function G(H,ne,m){H.transparent===!0&&H.side===$n?(H.side=$t,H.needsUpdate=!0,wi(H,ne,m),H.side=Wi,H.needsUpdate=!0,wi(H,ne,m),H.side=$n):wi(H,ne,m)}f=I.get(E),f.init(),_.push(f),E.traverseVisible(function(H){H.isLight&&H.layers.test(W.layers)&&(f.pushLight(H),H.castShadow&&f.pushShadow(H))}),f.setupLights(p.physicallyCorrectLights),E.traverse(function(H){let ne=H.material;if(ne)if(Array.isArray(ne))for(let m=0;m<ne.length;m++){let M=ne[m];G(M,E,H)}else G(ne,E,H)}),_.pop(),f=null};let J=null;function ye(E){J&&J(E)}function Xe(){rt.stop()}function mt(){rt.start()}let rt=new vc;rt.setAnimationLoop(ye),typeof self<"u"&&rt.setContext(self),this.setAnimationLoop=function(E){J=E,_e.setAnimationLoop(E),E===null?rt.stop():rt.start()},_e.addEventListener("sessionstart",Xe),_e.addEventListener("sessionend",mt),this.render=function(E,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(d===!0)return;E.matrixWorldAutoUpdate===!0&&E.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),_e.enabled===!0&&_e.isPresenting===!0&&(_e.cameraAutoUpdate===!0&&_e.updateCamera(W),W=_e.getCamera()),E.isScene===!0&&E.onBeforeRender(p,E,W,S),f=I.get(E,_.length),f.init(),_.push(f),le.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),se.setFromProjectionMatrix(le),U=this.localClippingEnabled,$=T.init(this.clippingPlanes,U,W),u=Pt.get(E,g.length),u.init(),g.push(u),fn(E,W,0,p.sortObjects),u.finish(),p.sortObjects===!0&&u.sort(Y,V),$===!0&&T.beginShadows();let G=f.state.shadowsArray;if(te.render(G,E,W),$===!0&&T.endShadows(),this.info.autoReset===!0&&this.info.reset(),he.render(u,E),f.setupLights(p.physicallyCorrectLights),W.isArrayCamera){let H=W.cameras;for(let ne=0,m=H.length;ne<m;ne++){let M=H[ne];it(u,E,M,M.viewport)}}else it(u,E,W);S!==null&&(Le.updateMultisampleRenderTarget(S),Le.updateRenderTargetMipmap(S)),E.isScene===!0&&E.onAfterRender(p,E,W),oe.resetDefaultState(),v=-1,b=null,_.pop(),_.length>0?f=_[_.length-1]:f=null,g.pop(),g.length>0?u=g[g.length-1]:u=null};function fn(E,W,G,H){if(E.visible===!1)return;if(E.layers.test(W.layers)){if(E.isGroup)G=E.renderOrder;else if(E.isLOD)E.autoUpdate===!0&&E.update(W);else if(E.isLight)f.pushLight(E),E.castShadow&&f.pushShadow(E);else if(E.isSprite){if(!E.frustumCulled||se.intersectsSprite(E)){H&&ue.setFromMatrixPosition(E.matrixWorld).applyMatrix4(le);let M=ht.update(E),P=E.material;P.visible&&u.push(E,M,P,G,ue.z,null)}}else if((E.isMesh||E.isLine||E.isPoints)&&(E.isSkinnedMesh&&E.skeleton.frame!==We.render.frame&&(E.skeleton.update(),E.skeleton.frame=We.render.frame),!E.frustumCulled||se.intersectsObject(E))){H&&ue.setFromMatrixPosition(E.matrixWorld).applyMatrix4(le);let M=ht.update(E),P=E.material;if(Array.isArray(P)){let N=M.groups;for(let X=0,B=N.length;X<B;X++){let j=N[X],re=P[j.materialIndex];re&&re.visible&&u.push(E,M,re,G,ue.z,j)}}else P.visible&&u.push(E,M,P,G,ue.z,null)}}let m=E.children;for(let M=0,P=m.length;M<P;M++)fn(m[M],W,G,H)}function it(E,W,G,H){let ne=E.opaque,m=E.transmissive,M=E.transparent;f.setupLightsView(G),m.length>0&&sn(ne,W,G),H&&Te.viewport(R.copy(H)),ne.length>0&&Ut(ne,W,G),m.length>0&&Ut(m,W,G),M.length>0&&Ut(M,W,G),Te.buffers.depth.setTest(!0),Te.buffers.depth.setMask(!0),Te.buffers.color.setMask(!0),Te.setPolygonOffset(!1)}function sn(E,W,G){let H=De.isWebGL2;k===null&&(k=new Dn(1,1,{generateMipmaps:!0,type:Re.has("EXT_color_buffer_half_float")?mn:ui,minFilter:Is,samples:H&&r===!0?4:0})),p.getDrawingBufferSize(ie),H?k.setSize(ie.x,ie.y):k.setSize(Da(ie.x),Da(ie.y));let ne=p.getRenderTarget();p.setRenderTarget(k),p.clear();let m=p.toneMapping;p.toneMapping=Ln,Ut(E,W,G),p.toneMapping=m,Le.updateMultisampleRenderTarget(k),Le.updateRenderTargetMipmap(k),p.setRenderTarget(ne)}function Ut(E,W,G){let H=W.isScene===!0?W.overrideMaterial:null;for(let ne=0,m=E.length;ne<m;ne++){let M=E[ne],P=M.object,N=M.geometry,X=H===null?M.material:H,B=M.group;P.layers.test(G.layers)&&Zr(P,W,G,N,X,B)}}function Zr(E,W,G,H,ne,m){E.onBeforeRender(p,W,G,H,ne,m),E.modelViewMatrix.multiplyMatrices(G.matrixWorldInverse,E.matrixWorld),E.normalMatrix.getNormalMatrix(E.modelViewMatrix),ne.onBeforeRender(p,W,G,H,E,m),ne.transparent===!0&&ne.side===$n?(ne.side=$t,ne.needsUpdate=!0,p.renderBufferDirect(G,W,H,ne,E,m),ne.side=Wi,ne.needsUpdate=!0,p.renderBufferDirect(G,W,H,ne,E,m),ne.side=$n):p.renderBufferDirect(G,W,H,ne,E,m),E.onAfterRender(p,W,G,H,ne,m)}function wi(E,W,G){W.isScene!==!0&&(W=xe);let H=Fe.get(E),ne=f.state.lights,m=f.state.shadowsArray,M=ne.state.version,P=qe.getParameters(E,ne.state,m,W,G),N=qe.getProgramCacheKey(P),X=H.programs;H.environment=E.isMeshStandardMaterial?W.environment:null,H.fog=W.fog,H.envMap=(E.isMeshStandardMaterial?pt:et).get(E.envMap||H.environment),X===void 0&&(E.addEventListener("dispose",O),X=new Map,H.programs=X);let B=X.get(N);if(B!==void 0){if(H.currentProgram===B&&H.lightsStateVersion===M)return Ws(E,P),B}else P.uniforms=qe.getUniforms(E),E.onBuild(G,P,p),E.onBeforeCompile(P,p),B=qe.acquireProgram(P,N),X.set(N,B),H.uniforms=P.uniforms;let j=H.uniforms;(!E.isShaderMaterial&&!E.isRawShaderMaterial||E.clipping===!0)&&(j.clippingPlanes=T.uniform),Ws(E,P),H.needsLights=Jr(E),H.lightsStateVersion=M,H.needsLights&&(j.ambientLightColor.value=ne.state.ambient,j.lightProbe.value=ne.state.probe,j.directionalLights.value=ne.state.directional,j.directionalLightShadows.value=ne.state.directionalShadow,j.spotLights.value=ne.state.spot,j.spotLightShadows.value=ne.state.spotShadow,j.rectAreaLights.value=ne.state.rectArea,j.ltc_1.value=ne.state.rectAreaLTC1,j.ltc_2.value=ne.state.rectAreaLTC2,j.pointLights.value=ne.state.point,j.pointLightShadows.value=ne.state.pointShadow,j.hemisphereLights.value=ne.state.hemi,j.directionalShadowMap.value=ne.state.directionalShadowMap,j.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,j.spotShadowMap.value=ne.state.spotShadowMap,j.spotLightMatrix.value=ne.state.spotLightMatrix,j.spotLightMap.value=ne.state.spotLightMap,j.pointShadowMap.value=ne.state.pointShadowMap,j.pointShadowMatrix.value=ne.state.pointShadowMatrix);let re=B.getUniforms(),pe=Gi.seqWithValue(re.seq,j);return H.currentProgram=B,H.uniformsList=pe,B}function Ws(E,W){let G=Fe.get(E);G.outputEncoding=W.outputEncoding,G.instancing=W.instancing,G.skinning=W.skinning,G.morphTargets=W.morphTargets,G.morphNormals=W.morphNormals,G.morphColors=W.morphColors,G.morphTargetsCount=W.morphTargetsCount,G.numClippingPlanes=W.numClippingPlanes,G.numIntersection=W.numClipIntersection,G.vertexAlphas=W.vertexAlphas,G.vertexTangents=W.vertexTangents,G.toneMapping=W.toneMapping}function Yr(E,W,G,H,ne){W.isScene!==!0&&(W=xe),Le.resetTextureUnits();let m=W.fog,M=H.isMeshStandardMaterial?W.environment:null,P=S===null?p.outputEncoding:S.isXRRenderTarget===!0?S.texture.encoding:gn,N=(H.isMeshStandardMaterial?pt:et).get(H.envMap||M),X=H.vertexColors===!0&&!!G.attributes.color&&G.attributes.color.itemSize===4,B=!!H.normalMap&&!!G.attributes.tangent,j=!!G.morphAttributes.position,re=!!G.morphAttributes.normal,pe=!!G.morphAttributes.color,ae=H.toneMapped?p.toneMapping:Ln,fe=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,be=fe!==void 0?fe.length:0,de=Fe.get(H),Ie=f.state.lights;if($===!0&&(U===!0||E!==b)){let Oe=E===b&&H.id===v;T.setState(H,E,Oe)}let Pe=!1;H.version===de.__version?(de.needsLights&&de.lightsStateVersion!==Ie.state.version||de.outputEncoding!==P||ne.isInstancedMesh&&de.instancing===!1||!ne.isInstancedMesh&&de.instancing===!0||ne.isSkinnedMesh&&de.skinning===!1||!ne.isSkinnedMesh&&de.skinning===!0||de.envMap!==N||H.fog===!0&&de.fog!==m||de.numClippingPlanes!==void 0&&(de.numClippingPlanes!==T.numPlanes||de.numIntersection!==T.numIntersection)||de.vertexAlphas!==X||de.vertexTangents!==B||de.morphTargets!==j||de.morphNormals!==re||de.morphColors!==pe||de.toneMapping!==ae||De.isWebGL2===!0&&de.morphTargetsCount!==be)&&(Pe=!0):(Pe=!0,de.__version=H.version);let Se=de.currentProgram;Pe===!0&&(Se=wi(H,W,ne));let Ee=!1,Be=!1,tt=!1,Ve=Se.getUniforms(),ut=de.uniforms;if(Te.useProgram(Se.program)&&(Ee=!0,Be=!0,tt=!0),H.id!==v&&(v=H.id,Be=!0),Ee||b!==E){if(Ve.setValue(q,"projectionMatrix",E.projectionMatrix),De.logarithmicDepthBuffer&&Ve.setValue(q,"logDepthBufFC",2/(Math.log(E.far+1)/Math.LN2)),b!==E&&(b=E,Be=!0,tt=!0),H.isShaderMaterial||H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshStandardMaterial||H.envMap){let Oe=Ve.map.cameraPosition;Oe!==void 0&&Oe.setValue(q,ue.setFromMatrixPosition(E.matrixWorld))}(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial)&&Ve.setValue(q,"isOrthographic",E.isOrthographicCamera===!0),(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial||H.isShadowMaterial||ne.isSkinnedMesh)&&Ve.setValue(q,"viewMatrix",E.matrixWorldInverse)}if(ne.isSkinnedMesh){Ve.setOptional(q,ne,"bindMatrix"),Ve.setOptional(q,ne,"bindMatrixInverse");let Oe=ne.skeleton;Oe&&(De.floatVertexTextures?(Oe.boneTexture===null&&Oe.computeBoneTexture(),Ve.setValue(q,"boneTexture",Oe.boneTexture,Le),Ve.setValue(q,"boneTextureSize",Oe.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let je=G.morphAttributes;if((je.position!==void 0||je.normal!==void 0||je.color!==void 0&&De.isWebGL2===!0)&&me.update(ne,G,H,Se),(Be||de.receiveShadow!==ne.receiveShadow)&&(de.receiveShadow=ne.receiveShadow,Ve.setValue(q,"receiveShadow",ne.receiveShadow)),H.isMeshGouraudMaterial&&H.envMap!==null&&(ut.envMap.value=N,ut.flipEnvMap.value=N.isCubeTexture&&N.isRenderTargetTexture===!1?-1:1),Be&&(Ve.setValue(q,"toneMappingExposure",p.toneMappingExposure),de.needsLights&&bi(ut,tt),m&&H.fog===!0&&zt.refreshFogUniforms(ut,m),zt.refreshMaterialUniforms(ut,H,ee,L,k),Gi.upload(q,de.uniformsList,ut,Le)),H.isShaderMaterial&&H.uniformsNeedUpdate===!0&&(Gi.upload(q,de.uniformsList,ut,Le),H.uniformsNeedUpdate=!1),H.isSpriteMaterial&&Ve.setValue(q,"center",ne.center),Ve.setValue(q,"modelViewMatrix",ne.modelViewMatrix),Ve.setValue(q,"normalMatrix",ne.normalMatrix),Ve.setValue(q,"modelMatrix",ne.matrixWorld),H.isShaderMaterial||H.isRawShaderMaterial){let Oe=H.uniformsGroups;for(let at=0,Bt=Oe.length;at<Bt;at++)if(De.isWebGL2){let ft=Oe[at];ge.update(ft,Se),ge.bind(ft,Se)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Se}function bi(E,W){E.ambientLightColor.needsUpdate=W,E.lightProbe.needsUpdate=W,E.directionalLights.needsUpdate=W,E.directionalLightShadows.needsUpdate=W,E.pointLights.needsUpdate=W,E.pointLightShadows.needsUpdate=W,E.spotLights.needsUpdate=W,E.spotLightShadows.needsUpdate=W,E.rectAreaLights.needsUpdate=W,E.hemisphereLights.needsUpdate=W}function Jr(E){return E.isMeshLambertMaterial||E.isMeshToonMaterial||E.isMeshPhongMaterial||E.isMeshStandardMaterial||E.isShadowMaterial||E.isShaderMaterial&&E.lights===!0}this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(E,W,G){Fe.get(E.texture).__webglTexture=W,Fe.get(E.depthTexture).__webglTexture=G;let H=Fe.get(E);H.__hasExternalTextures=!0,H.__hasExternalTextures&&(H.__autoAllocateDepthBuffer=G===void 0,H.__autoAllocateDepthBuffer||Re.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),H.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(E,W){let G=Fe.get(E);G.__webglFramebuffer=W,G.__useDefaultFramebuffer=W===void 0},this.setRenderTarget=function(E,W=0,G=0){S=E,y=W,w=G;let H=!0;if(E){let N=Fe.get(E);N.__useDefaultFramebuffer!==void 0?(Te.bindFramebuffer(36160,null),H=!1):N.__webglFramebuffer===void 0?Le.setupRenderTarget(E):N.__hasExternalTextures&&Le.rebindTextures(E,Fe.get(E.texture).__webglTexture,Fe.get(E.depthTexture).__webglTexture)}let ne=null,m=!1,M=!1;if(E){let N=E.texture;(N.isData3DTexture||N.isDataArrayTexture)&&(M=!0);let X=Fe.get(E).__webglFramebuffer;E.isWebGLCubeRenderTarget?(ne=X[W],m=!0):De.isWebGL2&&E.samples>0&&Le.useMultisampledRTT(E)===!1?ne=Fe.get(E).__webglMultisampledFramebuffer:ne=X,R.copy(E.viewport),D.copy(E.scissor),x=E.scissorTest}else R.copy(F).multiplyScalar(ee).floor(),D.copy(Z).multiplyScalar(ee).floor(),x=K;if(Te.bindFramebuffer(36160,ne)&&De.drawBuffers&&H&&Te.drawBuffers(E,ne),Te.viewport(R),Te.scissor(D),Te.setScissorTest(x),m){let N=Fe.get(E.texture);q.framebufferTexture2D(36160,36064,34069+W,N.__webglTexture,G)}else if(M){let N=Fe.get(E.texture),X=W||0;q.framebufferTextureLayer(36160,36064,N.__webglTexture,G||0,X)}v=-1},this.readRenderTargetPixels=function(E,W,G,H,ne,m,M){if(!(E&&E.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let P=Fe.get(E).__webglFramebuffer;if(E.isWebGLCubeRenderTarget&&M!==void 0&&(P=P[M]),P){Te.bindFramebuffer(36160,P);try{let N=E.texture,X=N.format,B=N.type;if(X!==Jt&&A.convert(X)!==q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let j=B===mn&&(Re.has("EXT_color_buffer_half_float")||De.isWebGL2&&Re.has("EXT_color_buffer_float"));if(B!==ui&&A.convert(B)!==q.getParameter(35738)&&!(B===hn&&(De.isWebGL2||Re.has("OES_texture_float")||Re.has("WEBGL_color_buffer_float")))&&!j){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=E.width-H&&G>=0&&G<=E.height-ne&&q.readPixels(W,G,H,ne,A.convert(X),A.convert(B),m)}finally{let N=S!==null?Fe.get(S).__webglFramebuffer:null;Te.bindFramebuffer(36160,N)}}},this.copyFramebufferToTexture=function(E,W,G=0){let H=Math.pow(2,-G),ne=Math.floor(W.image.width*H),m=Math.floor(W.image.height*H);Le.setTexture2D(W,0),q.copyTexSubImage2D(3553,G,0,0,E.x,E.y,ne,m),Te.unbindTexture()},this.copyTextureToTexture=function(E,W,G,H=0){let ne=W.image.width,m=W.image.height,M=A.convert(G.format),P=A.convert(G.type);Le.setTexture2D(G,0),q.pixelStorei(37440,G.flipY),q.pixelStorei(37441,G.premultiplyAlpha),q.pixelStorei(3317,G.unpackAlignment),W.isDataTexture?q.texSubImage2D(3553,H,E.x,E.y,ne,m,M,P,W.image.data):W.isCompressedTexture?q.compressedTexSubImage2D(3553,H,E.x,E.y,W.mipmaps[0].width,W.mipmaps[0].height,M,W.mipmaps[0].data):q.texSubImage2D(3553,H,E.x,E.y,M,P,W.image),H===0&&G.generateMipmaps&&q.generateMipmap(3553),Te.unbindTexture()},this.copyTextureToTexture3D=function(E,W,G,H,ne=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let m=E.max.x-E.min.x+1,M=E.max.y-E.min.y+1,P=E.max.z-E.min.z+1,N=A.convert(H.format),X=A.convert(H.type),B;if(H.isData3DTexture)Le.setTexture3D(H,0),B=32879;else if(H.isDataArrayTexture)Le.setTexture2DArray(H,0),B=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}q.pixelStorei(37440,H.flipY),q.pixelStorei(37441,H.premultiplyAlpha),q.pixelStorei(3317,H.unpackAlignment);let j=q.getParameter(3314),re=q.getParameter(32878),pe=q.getParameter(3316),ae=q.getParameter(3315),fe=q.getParameter(32877),be=G.isCompressedTexture?G.mipmaps[0]:G.image;q.pixelStorei(3314,be.width),q.pixelStorei(32878,be.height),q.pixelStorei(3316,E.min.x),q.pixelStorei(3315,E.min.y),q.pixelStorei(32877,E.min.z),G.isDataTexture||G.isData3DTexture?q.texSubImage3D(B,ne,W.x,W.y,W.z,m,M,P,N,X,be.data):G.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),q.compressedTexSubImage3D(B,ne,W.x,W.y,W.z,m,M,P,N,be.data)):q.texSubImage3D(B,ne,W.x,W.y,W.z,m,M,P,N,X,be),q.pixelStorei(3314,j),q.pixelStorei(32878,re),q.pixelStorei(3316,pe),q.pixelStorei(3315,ae),q.pixelStorei(32877,fe),ne===0&&H.generateMipmaps&&q.generateMipmap(B),Te.unbindTexture()},this.initTexture=function(E){E.isCubeTexture?Le.setTextureCube(E,0):E.isData3DTexture?Le.setTexture3D(E,0):E.isDataArrayTexture?Le.setTexture2DArray(E,0):Le.setTexture2D(E,0),Te.unbindTexture()},this.resetState=function(){y=0,w=0,S=null,Te.reset(),oe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}var $a=class extends mo{};$a.prototype.isWebGL1Renderer=!0;var Cr=class extends Lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}};var Ka=class extends Dt{constructor(e=null,t=1,n=1,s,r,o,a,c,l=At,h=At,u,f){super(null,o,a,c,l,h,s,r,u,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};var Pr=class extends qt{constructor(e,t,n,s=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}},lc=new ot,cc=new ot,dr=[],ys=new bt,Es=class extends bt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Pr(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){let n=this.matrixWorld,s=this.count;if(ys.geometry=this.geometry,ys.material=this.material,ys.material!==void 0)for(let r=0;r<s;r++){this.getMatrixAt(r,lc),cc.multiplyMatrices(n,lc),ys.matrixWorld=cc,ys.raycast(e,dr);for(let o=0,a=dr.length;o<a;o++){let c=dr[o];c.instanceId=r,c.object=this,t.push(c)}dr.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Pr(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}};var $i=class extends Kt{constructor(e=1,t=1,n=1,s=8,r=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:s,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:c};let l=this;s=Math.floor(s),r=Math.floor(r);let h=[],u=[],f=[],g=[],_=0,p=[],d=n/2,y=0;w(),o===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(h),this.setAttribute("position",new Mt(u,3)),this.setAttribute("normal",new Mt(f,3)),this.setAttribute("uv",new Mt(g,2));function w(){let v=new z,b=new z,R=0,D=(t-e)/n;for(let x=0;x<=r;x++){let C=[],L=x/r,ee=L*(t-e)+e;for(let Y=0;Y<=s;Y++){let V=Y/s,F=V*c+a,Z=Math.sin(F),K=Math.cos(F);b.x=ee*Z,b.y=-L*n+d,b.z=ee*K,u.push(b.x,b.y,b.z),v.set(Z,D,K).normalize(),f.push(v.x,v.y,v.z),g.push(V,1-L),C.push(_++)}p.push(C)}for(let x=0;x<s;x++)for(let C=0;C<r;C++){let L=p[C][x],ee=p[C+1][x],Y=p[C+1][x+1],V=p[C][x+1];h.push(L,ee,V),h.push(ee,Y,V),R+=6}l.addGroup(y,R,0),y+=R}function S(v){let b=_,R=new ze,D=new z,x=0,C=v===!0?e:t,L=v===!0?1:-1;for(let Y=1;Y<=s;Y++)u.push(0,d*L,0),f.push(0,L,0),g.push(.5,.5),_++;let ee=_;for(let Y=0;Y<=s;Y++){let F=Y/s*c+a,Z=Math.cos(F),K=Math.sin(F);D.x=C*K,D.y=d*L,D.z=C*Z,u.push(D.x,D.y,D.z),f.push(0,L,0),R.x=Z*.5+.5,R.y=K*.5*L+.5,g.push(R.x,R.y),_++}for(let Y=0;Y<s;Y++){let V=b+Y,F=ee+Y;v===!0?h.push(F,F+1,V):h.push(F+1,F,V),x+=3}l.addGroup(y,x,v===!0?1:2),y+=x}}static fromJSON(e){return new $i(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}};var Cs=class extends Kt{constructor(e=[],t=[],n=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:s};let r=[],o=[];a(s),l(n),h(),this.setAttribute("position",new Mt(r,3)),this.setAttribute("normal",new Mt(r.slice(),3)),this.setAttribute("uv",new Mt(o,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function a(w){let S=new z,v=new z,b=new z;for(let R=0;R<t.length;R+=3)g(t[R+0],S),g(t[R+1],v),g(t[R+2],b),c(S,v,b,w)}function c(w,S,v,b){let R=b+1,D=[];for(let x=0;x<=R;x++){D[x]=[];let C=w.clone().lerp(v,x/R),L=S.clone().lerp(v,x/R),ee=R-x;for(let Y=0;Y<=ee;Y++)Y===0&&x===R?D[x][Y]=C:D[x][Y]=C.clone().lerp(L,Y/ee)}for(let x=0;x<R;x++)for(let C=0;C<2*(R-x)-1;C++){let L=Math.floor(C/2);C%2===0?(f(D[x][L+1]),f(D[x+1][L]),f(D[x][L])):(f(D[x][L+1]),f(D[x+1][L+1]),f(D[x+1][L]))}}function l(w){let S=new z;for(let v=0;v<r.length;v+=3)S.x=r[v+0],S.y=r[v+1],S.z=r[v+2],S.normalize().multiplyScalar(w),r[v+0]=S.x,r[v+1]=S.y,r[v+2]=S.z}function h(){let w=new z;for(let S=0;S<r.length;S+=3){w.x=r[S+0],w.y=r[S+1],w.z=r[S+2];let v=d(w)/2/Math.PI+.5,b=y(w)/Math.PI+.5;o.push(v,1-b)}_(),u()}function u(){for(let w=0;w<o.length;w+=6){let S=o[w+0],v=o[w+2],b=o[w+4],R=Math.max(S,v,b),D=Math.min(S,v,b);R>.9&&D<.1&&(S<.2&&(o[w+0]+=1),v<.2&&(o[w+2]+=1),b<.2&&(o[w+4]+=1))}}function f(w){r.push(w.x,w.y,w.z)}function g(w,S){let v=w*3;S.x=e[v+0],S.y=e[v+1],S.z=e[v+2]}function _(){let w=new z,S=new z,v=new z,b=new z,R=new ze,D=new ze,x=new ze;for(let C=0,L=0;C<r.length;C+=9,L+=6){w.set(r[C+0],r[C+1],r[C+2]),S.set(r[C+3],r[C+4],r[C+5]),v.set(r[C+6],r[C+7],r[C+8]),R.set(o[L+0],o[L+1]),D.set(o[L+2],o[L+3]),x.set(o[L+4],o[L+5]),b.copy(w).add(S).add(v).divideScalar(3);let ee=d(b);p(R,L+0,w,ee),p(D,L+2,S,ee),p(x,L+4,v,ee)}}function p(w,S,v,b){b<0&&w.x===1&&(o[S]=w.x-1),v.x===0&&v.z===0&&(o[S]=b/2/Math.PI+.5)}function d(w){return Math.atan2(w.z,-w.x)}function y(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}static fromJSON(e){return new Cs(e.vertices,e.indices,e.radius,e.details)}};var Ki=class extends Cs{constructor(e=1,t=0){let n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],s=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,s,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ki(e.radius,e.detail)}};var ji=class extends Kt{constructor(e=1,t=32,n=16,s=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));let c=Math.min(o+a,Math.PI),l=0,h=[],u=new z,f=new z,g=[],_=[],p=[],d=[];for(let y=0;y<=n;y++){let w=[],S=y/n,v=0;y==0&&o==0?v=.5/t:y==n&&c==Math.PI&&(v=-.5/t);for(let b=0;b<=t;b++){let R=b/t;u.x=-e*Math.cos(s+R*r)*Math.sin(o+S*a),u.y=e*Math.cos(o+S*a),u.z=e*Math.sin(s+R*r)*Math.sin(o+S*a),_.push(u.x,u.y,u.z),f.copy(u).normalize(),p.push(f.x,f.y,f.z),d.push(R+v,1-S),w.push(l++)}h.push(w)}for(let y=0;y<n;y++)for(let w=0;w<t;w++){let S=h[y][w+1],v=h[y][w],b=h[y+1][w],R=h[y+1][w+1];(y!==0||o>0)&&g.push(S,v,R),(y!==n-1||c<Math.PI)&&g.push(v,b,R)}this.setIndex(g),this.setAttribute("position",new Mt(_,3)),this.setAttribute("normal",new Mt(p,3)),this.setAttribute("uv",new Mt(d,2))}static fromJSON(e){return new ji(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};var On=class extends di{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ye(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gc,this.normalScale=new ze(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};function Jn(i,e,t){return Sc(i)?new i.constructor(i.subarray(e,t!==void 0?t:i.length)):i.slice(e,t)}function pr(i,e,t){return!i||!t&&i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)}function Sc(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}var Qi=class{constructor(e,t,n,s){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,n=this._cachedIndex,s=t[n],r=t[n-1];n:{e:{let o;t:{i:if(!(e<s)){for(let a=n+2;;){if(s===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=s,s=t[++n],e<s)break e}o=t.length;break t}if(!(e>=r)){let a=t[1];e<a&&(n=2,r=a);for(let c=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(s=r,r=t[--n-1],e>=r)break e}o=n,n=0;break t}break n}for(;n<o;){let a=n+o>>>1;e<t[a]?o=a:n=a+1}if(s=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(s===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,s)}return this.interpolate_(n,r,e,s)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,n=this.sampleValues,s=this.valueSize,r=e*s;for(let o=0;o!==s;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}},ja=class extends Qi{constructor(e,t,n,s){super(e,t,n,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:bl,endingEnd:bl}}intervalChanged_(e,t,n){let s=this.parameterPositions,r=e-2,o=e+1,a=s[r],c=s[o];if(a===void 0)switch(this.getSettings_().endingStart){case Sl:r=e,a=2*t-n;break;case Tl:r=s.length-2,a=t+s[r]-s[r+1];break;default:r=e,a=n}if(c===void 0)switch(this.getSettings_().endingEnd){case Sl:o=e,c=2*n-t;break;case Tl:o=1,c=n+s[1]-s[0];break;default:o=e-1,c=t}let l=(n-t)*.5,h=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(c-n),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(e,t,n,s){let r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,l=c-a,h=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,g=this._weightNext,_=(n-t)/(s-t),p=_*_,d=p*_,y=-f*d+2*f*p-f*_,w=(1+f)*d+(-1.5-2*f)*p+(-.5+f)*_+1,S=(-1-g)*d+(1.5+g)*p+.5*_,v=g*d-g*p;for(let b=0;b!==a;++b)r[b]=y*o[h+b]+w*o[l+b]+S*o[c+b]+v*o[u+b];return r}},Qa=class extends Qi{constructor(e,t,n,s){super(e,t,n,s)}interpolate_(e,t,n,s){let r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,l=c-a,h=(n-t)/(s-t),u=1-h;for(let f=0;f!==a;++f)r[f]=o[l+f]*u+o[c+f]*h;return r}},eo=class extends Qi{constructor(e,t,n,s){super(e,t,n,s)}interpolate_(e){return this.copySampleValue_(e-1)}},un=class{constructor(e,t,n,s){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=pr(t,this.TimeBufferType),this.values=pr(n,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:pr(e.times,Array),values:pr(e.values,Array)};let s=e.getInterpolation();s!==e.DefaultInterpolation&&(n.interpolation=s)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new eo(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Qa(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ja(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case gr:t=this.InterpolantFactoryMethodDiscrete;break;case xr:t=this.InterpolantFactoryMethodLinear;break;case ea:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){let n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return gr;case this.InterpolantFactoryMethodLinear:return xr;case this.InterpolantFactoryMethodSmooth:return ea}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){let t=this.times;for(let n=0,s=t.length;n!==s;++n)t[n]+=e}return this}scale(e){if(e!==1){let t=this.times;for(let n=0,s=t.length;n!==s;++n)t[n]*=e}return this}trim(e,t){let n=this.times,s=n.length,r=0,o=s-1;for(;r!==s&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==s){r>=o&&(o=Math.max(o,1),r=o-1);let a=this.getValueSize();this.times=Jn(n,r,o),this.values=Jn(this.values,r*a,o*a)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let n=this.times,s=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){let c=n[a];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,c),e=!1;break}if(o!==null&&o>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,c,o),e=!1;break}o=c}if(s!==void 0&&Sc(s))for(let a=0,c=s.length;a!==c;++a){let l=s[a];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,l),e=!1;break}}return e}optimize(){let e=Jn(this.times),t=Jn(this.values),n=this.getValueSize(),s=this.getInterpolation()===ea,r=e.length-1,o=1;for(let a=1;a<r;++a){let c=!1,l=e[a],h=e[a+1];if(l!==h&&(a!==1||l!==e[0]))if(s)c=!0;else{let u=a*n,f=u-n,g=u+n;for(let _=0;_!==n;++_){let p=t[u+_];if(p!==t[f+_]||p!==t[g+_]){c=!0;break}}}if(c){if(a!==o){e[o]=e[a];let u=a*n,f=o*n;for(let g=0;g!==n;++g)t[f+g]=t[u+g]}++o}}if(r>0){e[o]=e[r];for(let a=r*n,c=o*n,l=0;l!==n;++l)t[c+l]=t[a+l];++o}return o!==e.length?(this.times=Jn(e,0,o),this.values=Jn(t,0,o*n)):(this.times=e,this.values=t),this}clone(){let e=Jn(this.times,0),t=Jn(this.values,0),n=this.constructor,s=new n(this.name,e,t);return s.createInterpolant=this.createInterpolant,s}};un.prototype.TimeBufferType=Float32Array;un.prototype.ValueBufferType=Float32Array;un.prototype.DefaultInterpolation=xr;var mi=class extends un{};mi.prototype.ValueTypeName="bool";mi.prototype.ValueBufferType=Array;mi.prototype.DefaultInterpolation=gr;mi.prototype.InterpolantFactoryMethodLinear=void 0;mi.prototype.InterpolantFactoryMethodSmooth=void 0;var to=class extends un{};to.prototype.ValueTypeName="color";var no=class extends un{};no.prototype.ValueTypeName="number";var io=class extends Qi{constructor(e,t,n,s){super(e,t,n,s)}interpolate_(e,t,n,s){let r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=(n-t)/(s-t),l=e*a;for(let h=l+a;l!==h;l+=4)Zt.slerpFlat(r,0,o,l-a,o,l,c);return r}},Ps=class extends un{InterpolantFactoryMethodLinear(e){return new io(this.times,this.values,this.getValueSize(),e)}};Ps.prototype.ValueTypeName="quaternion";Ps.prototype.DefaultInterpolation=xr;Ps.prototype.InterpolantFactoryMethodSmooth=void 0;var gi=class extends un{};gi.prototype.ValueTypeName="string";gi.prototype.ValueBufferType=Array;gi.prototype.DefaultInterpolation=gr;gi.prototype.InterpolantFactoryMethodLinear=void 0;gi.prototype.InterpolantFactoryMethodSmooth=void 0;var so=class extends un{};so.prototype.ValueTypeName="vector";var Rr={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}},ro=class{constructor(e,t,n){let s=this,r=!1,o=0,a=0,c,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){a++,r===!1&&s.onStart!==void 0&&s.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,s.onProgress!==void 0&&s.onProgress(h,o,a),o===a&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){let u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=l.length;u<f;u+=2){let g=l[u],_=l[u+1];if(g.global&&(g.lastIndex=0),g.test(h))return _}return null}}},Zm=new ro,es=class{constructor(e){this.manager=e!==void 0?e:Zm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let n=this;return new Promise(function(s,r){n.load(e,s,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}},Cn={},ao=class extends Error{constructor(e,t){super(e),this.response=t}},oo=class extends es{constructor(e){super(e)}load(e,t,n,s){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);let r=Rr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Cn[e]!==void 0){Cn[e].push({onLoad:t,onProgress:n,onError:s});return}Cn[e]=[],Cn[e].push({onLoad:t,onProgress:n,onError:s});let o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(o).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;let h=Cn[e],u=l.body.getReader(),f=l.headers.get("Content-Length"),g=f?parseInt(f):0,_=g!==0,p=0,d=new ReadableStream({start(y){w();function w(){u.read().then(({done:S,value:v})=>{if(S)y.close();else{p+=v.byteLength;let b=new ProgressEvent("progress",{lengthComputable:_,loaded:p,total:g});for(let R=0,D=h.length;R<D;R++){let x=h[R];x.onProgress&&x.onProgress(b)}y.enqueue(v),w()}})}}});return new Response(d)}else throw new ao(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return l.json();default:if(a===void 0)return l.text();{let u=/charset="?([^;"\s]*)"?/i.exec(a),f=u&&u[1]?u[1].toLowerCase():void 0,g=new TextDecoder(f);return l.arrayBuffer().then(_=>g.decode(_))}}}).then(l=>{Rr.add(e,l);let h=Cn[e];delete Cn[e];for(let u=0,f=h.length;u<f;u++){let g=h[u];g.onLoad&&g.onLoad(l)}}).catch(l=>{let h=Cn[e];if(h===void 0)throw this.manager.itemError(e),l;delete Cn[e];for(let u=0,f=h.length;u<f;u++){let g=h[u];g.onError&&g.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}};var lo=class extends es{constructor(e){super(e)}load(e,t,n,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,o=Rr.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;let a=Ss("img");function c(){h(),Rr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(u){h(),s&&s(u),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){a.removeEventListener("load",c,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}};var Ir=class extends es{constructor(e){super(e)}load(e,t,n,s){let r=this,o=new Ka,a=new oo(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(c){let l=r.parse(c);!l||(l.image!==void 0?o.image=l.image:l.data!==void 0&&(o.image.width=l.width,o.image.height=l.height,o.image.data=l.data),o.wrapS=l.wrapS!==void 0?l.wrapS:Xt,o.wrapT=l.wrapT!==void 0?l.wrapT:Xt,o.magFilter=l.magFilter!==void 0?l.magFilter:yt,o.minFilter=l.minFilter!==void 0?l.minFilter:yt,o.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.encoding!==void 0&&(o.encoding=l.encoding),l.flipY!==void 0&&(o.flipY=l.flipY),l.format!==void 0&&(o.format=l.format),l.type!==void 0&&(o.type=l.type),l.mipmaps!==void 0&&(o.mipmaps=l.mipmaps,o.minFilter=Is),l.mipmapCount===1&&(o.minFilter=yt),l.generateMipmaps!==void 0&&(o.generateMipmaps=l.generateMipmaps),o.needsUpdate=!0,t&&t(o,l))},n,s),o}},Lr=class extends es{constructor(e){super(e)}load(e,t,n,s){let r=new Dt,o=new lo(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,s),r}};var go="\\[\\]\\.:\\/",Ym=new RegExp("["+go+"]","g"),xo="[^"+go+"]",Jm="[^"+go.replace("\\.","")+"]",$m=/((?:WC+[\/:])*)/.source.replace("WC",xo),Km=/(WCOD+)?/.source.replace("WCOD",Jm),jm=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",xo),Qm=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",xo),eg=new RegExp("^"+$m+Km+jm+Qm+"$"),tg=["material","materials","bones","map"],co=class{constructor(e,t,n){let s=n||$e.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,s)}getValue(e,t){this.bind();let n=this._targetGroup.nCachedObjects_,s=this._bindings[n];s!==void 0&&s.getValue(e,t)}setValue(e,t){let n=this._bindings;for(let s=this._targetGroup.nCachedObjects_,r=n.length;s!==r;++s)n[s].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},$e=class{constructor(e,t,n){this.path=t,this.parsedPath=n||$e.parseTrackName(t),this.node=$e.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new $e.Composite(e,t,n):new $e(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Ym,"")}static parseTrackName(e){let t=eg.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);let n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},s=n.nodeName&&n.nodeName.lastIndexOf(".");if(s!==void 0&&s!==-1){let r=n.nodeName.substring(s+1);tg.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,s),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){let n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){let n=function(r){for(let o=0;o<r.length;o++){let a=r[o];if(a.name===t||a.uuid===t)return a;let c=n(a.children);if(c)return c}return null},s=n(e.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)e[t++]=n[s]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,n=t.objectName,s=t.propertyName,r=t.propertyIndex;if(e||(e=$e.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===l){l=h;break}break;case"map":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}let o=e[s];if(o===void 0){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+s+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(r!==void 0){if(s==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=s;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};$e.Composite=co;$e.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};$e.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};$e.prototype.GetterByBindingType=[$e.prototype._getValue_direct,$e.prototype._getValue_array,$e.prototype._getValue_arrayElement,$e.prototype._getValue_toArray];$e.prototype.SetterByBindingTypeAndVersioning=[[$e.prototype._setValue_direct,$e.prototype._setValue_direct_setNeedsUpdate,$e.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[$e.prototype._setValue_array,$e.prototype._setValue_array_setNeedsUpdate,$e.prototype._setValue_array_setMatrixWorldNeedsUpdate],[$e.prototype._setValue_arrayElement,$e.prototype._setValue_arrayElement_setNeedsUpdate,$e.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[$e.prototype._setValue_fromArray,$e.prototype._setValue_fromArray_setNeedsUpdate,$e.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var Gg=new Float32Array(1);var Rs=class{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Rt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}};var In=ng();function ng(){let i=new ArrayBuffer(4),e=new Float32Array(i),t=new Uint32Array(i),n=new Uint32Array(512),s=new Uint32Array(512);for(let c=0;c<256;++c){let l=c-127;l<-27?(n[c]=0,n[c|256]=32768,s[c]=24,s[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,s[c]=-l-1,s[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,s[c]=13,s[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,s[c]=24,s[c|256]=24):(n[c]=31744,n[c|256]=64512,s[c]=13,s[c|256]=13)}let r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,h=0;for(;(l&8388608)===0;)l<<=1,h-=8388608;l&=-8388609,h+=947912704,r[c]=l|h}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)o[c]=c<<23;o[31]=1199570944,o[32]=2147483648;for(let c=33;c<63;++c)o[c]=2147483648+(c-32<<23);o[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(a[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:s,mantissaTable:r,exponentTable:o,offsetTable:a}}function ig(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=Rt(i,-65504,65504),In.floatView[0]=i;let e=In.uint32View[0],t=e>>23&511;return In.baseTable[t]+((e&8388607)>>In.shiftTable[t])}function sg(i){let e=i>>10;return In.uint32View[0]=In.mantissaTable[In.offsetTable[e]+(i&1023)]+In.exponentTable[e],In.floatView[0]}var _o=Object.freeze({__proto__:null,toHalfFloat:ig,fromHalfFloat:sg});typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ho}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ho);var rg=Math.PI/180,Xg=180/Math.PI;function vo(i){return i*rg}var Tc={type:"change"},yo={type:"start"},Ac={type:"end"},Or=class extends xn{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new z,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:xi.ROTATE,MIDDLE:xi.DOLLY,RIGHT:xi.PAN},this.touches={ONE:_i.ROTATE,TWO:_i.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(A){A.addEventListener("keydown",Pt),this._domElementKeyEvents=A},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Tc),n.update(),r=s.NONE},this.update=function(){let A=new z,oe=new Zt().setFromUnitVectors(e.up,new z(0,1,0)),ge=oe.clone().invert(),we=new z,_e=new Zt,Ce=2*Math.PI;return function(){let Ze=n.object.position;A.copy(Ze).sub(n.target),A.applyQuaternion(oe),a.setFromVector3(A),n.autoRotate&&r===s.NONE&&C(D()),n.enableDamping?(a.theta+=c.theta*n.dampingFactor,a.phi+=c.phi*n.dampingFactor):(a.theta+=c.theta,a.phi+=c.phi);let O=n.minAzimuthAngle,ce=n.maxAzimuthAngle;return isFinite(O)&&isFinite(ce)&&(O<-Math.PI?O+=Ce:O>Math.PI&&(O-=Ce),ce<-Math.PI?ce+=Ce:ce>Math.PI&&(ce-=Ce),O<=ce?a.theta=Math.max(O,Math.min(ce,a.theta)):a.theta=a.theta>(O+ce)/2?Math.max(O,a.theta):Math.min(ce,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=l,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),A.setFromSpherical(a),A.applyQuaternion(ge),Ze.copy(n.target).add(A),n.object.lookAt(n.target),n.enableDamping===!0?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),h.set(0,0,0)),l=1,u||we.distanceToSquared(n.object.position)>o||8*(1-_e.dot(n.object.quaternion))>o?(n.dispatchEvent(Tc),we.copy(n.object.position),_e.copy(n.object.quaternion),u=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",te),n.domElement.removeEventListener("pointerdown",et),n.domElement.removeEventListener("pointercancel",Ct),n.domElement.removeEventListener("wheel",zt),n.domElement.removeEventListener("pointermove",pt),n.domElement.removeEventListener("pointerup",ct),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Pt)};let n=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},r=s.NONE,o=1e-6,a=new Rs,c=new Rs,l=1,h=new z,u=!1,f=new ze,g=new ze,_=new ze,p=new ze,d=new ze,y=new ze,w=new ze,S=new ze,v=new ze,b=[],R={};function D(){return 2*Math.PI/60/60*n.autoRotateSpeed}function x(){return Math.pow(.95,n.zoomSpeed)}function C(A){c.theta-=A}function L(A){c.phi-=A}let ee=function(){let A=new z;return function(ge,we){A.setFromMatrixColumn(we,0),A.multiplyScalar(-ge),h.add(A)}}(),Y=function(){let A=new z;return function(ge,we){n.screenSpacePanning===!0?A.setFromMatrixColumn(we,1):(A.setFromMatrixColumn(we,0),A.crossVectors(n.object.up,A)),A.multiplyScalar(ge),h.add(A)}}(),V=function(){let A=new z;return function(ge,we){let _e=n.domElement;if(n.object.isPerspectiveCamera){let Ce=n.object.position;A.copy(Ce).sub(n.target);let ke=A.length();ke*=Math.tan(n.object.fov/2*Math.PI/180),ee(2*ge*ke/_e.clientHeight,n.object.matrix),Y(2*we*ke/_e.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(ee(ge*(n.object.right-n.object.left)/n.object.zoom/_e.clientWidth,n.object.matrix),Y(we*(n.object.top-n.object.bottom)/n.object.zoom/_e.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function F(A){n.object.isPerspectiveCamera?l/=A:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*A)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Z(A){n.object.isPerspectiveCamera?l*=A:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/A)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function K(A){f.set(A.clientX,A.clientY)}function se(A){w.set(A.clientX,A.clientY)}function $(A){p.set(A.clientX,A.clientY)}function U(A){g.set(A.clientX,A.clientY),_.subVectors(g,f).multiplyScalar(n.rotateSpeed);let oe=n.domElement;C(2*Math.PI*_.x/oe.clientHeight),L(2*Math.PI*_.y/oe.clientHeight),f.copy(g),n.update()}function k(A){S.set(A.clientX,A.clientY),v.subVectors(S,w),v.y>0?F(x()):v.y<0&&Z(x()),w.copy(S),n.update()}function le(A){d.set(A.clientX,A.clientY),y.subVectors(d,p).multiplyScalar(n.panSpeed),V(y.x,y.y),p.copy(d),n.update()}function ie(A){A.deltaY<0?Z(x()):A.deltaY>0&&F(x()),n.update()}function ue(A){let oe=!1;switch(A.code){case n.keys.UP:V(0,n.keyPanSpeed),oe=!0;break;case n.keys.BOTTOM:V(0,-n.keyPanSpeed),oe=!0;break;case n.keys.LEFT:V(n.keyPanSpeed,0),oe=!0;break;case n.keys.RIGHT:V(-n.keyPanSpeed,0),oe=!0;break}oe&&(A.preventDefault(),n.update())}function xe(){if(b.length===1)f.set(b[0].pageX,b[0].pageY);else{let A=.5*(b[0].pageX+b[1].pageX),oe=.5*(b[0].pageY+b[1].pageY);f.set(A,oe)}}function Ae(){if(b.length===1)p.set(b[0].pageX,b[0].pageY);else{let A=.5*(b[0].pageX+b[1].pageX),oe=.5*(b[0].pageY+b[1].pageY);p.set(A,oe)}}function q(){let A=b[0].pageX-b[1].pageX,oe=b[0].pageY-b[1].pageY,ge=Math.sqrt(A*A+oe*oe);w.set(0,ge)}function Ue(){n.enableZoom&&q(),n.enablePan&&Ae()}function Re(){n.enableZoom&&q(),n.enableRotate&&xe()}function De(A){if(b.length==1)g.set(A.pageX,A.pageY);else{let ge=Ne(A),we=.5*(A.pageX+ge.x),_e=.5*(A.pageY+ge.y);g.set(we,_e)}_.subVectors(g,f).multiplyScalar(n.rotateSpeed);let oe=n.domElement;C(2*Math.PI*_.x/oe.clientHeight),L(2*Math.PI*_.y/oe.clientHeight),f.copy(g)}function Te(A){if(b.length===1)d.set(A.pageX,A.pageY);else{let oe=Ne(A),ge=.5*(A.pageX+oe.x),we=.5*(A.pageY+oe.y);d.set(ge,we)}y.subVectors(d,p).multiplyScalar(n.panSpeed),V(y.x,y.y),p.copy(d)}function We(A){let oe=Ne(A),ge=A.pageX-oe.x,we=A.pageY-oe.y,_e=Math.sqrt(ge*ge+we*we);S.set(0,_e),v.set(0,Math.pow(S.y/w.y,n.zoomSpeed)),F(v.y),w.copy(S)}function Fe(A){n.enableZoom&&We(A),n.enablePan&&Te(A)}function Le(A){n.enableZoom&&We(A),n.enableRotate&&De(A)}function et(A){n.enabled!==!1&&(b.length===0&&(n.domElement.setPointerCapture(A.pointerId),n.domElement.addEventListener("pointermove",pt),n.domElement.addEventListener("pointerup",ct)),he(A),A.pointerType==="touch"?I(A):ht(A))}function pt(A){n.enabled!==!1&&(A.pointerType==="touch"?T(A):qe(A))}function ct(A){me(A),b.length===0&&(n.domElement.releasePointerCapture(A.pointerId),n.domElement.removeEventListener("pointermove",pt),n.domElement.removeEventListener("pointerup",ct)),n.dispatchEvent(Ac),r=s.NONE}function Ct(A){me(A)}function ht(A){let oe;switch(A.button){case 0:oe=n.mouseButtons.LEFT;break;case 1:oe=n.mouseButtons.MIDDLE;break;case 2:oe=n.mouseButtons.RIGHT;break;default:oe=-1}switch(oe){case xi.DOLLY:if(n.enableZoom===!1)return;se(A),r=s.DOLLY;break;case xi.ROTATE:if(A.ctrlKey||A.metaKey||A.shiftKey){if(n.enablePan===!1)return;$(A),r=s.PAN}else{if(n.enableRotate===!1)return;K(A),r=s.ROTATE}break;case xi.PAN:if(A.ctrlKey||A.metaKey||A.shiftKey){if(n.enableRotate===!1)return;K(A),r=s.ROTATE}else{if(n.enablePan===!1)return;$(A),r=s.PAN}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(yo)}function qe(A){switch(r){case s.ROTATE:if(n.enableRotate===!1)return;U(A);break;case s.DOLLY:if(n.enableZoom===!1)return;k(A);break;case s.PAN:if(n.enablePan===!1)return;le(A);break}}function zt(A){n.enabled===!1||n.enableZoom===!1||r!==s.NONE||(A.preventDefault(),n.dispatchEvent(yo),ie(A),n.dispatchEvent(Ac))}function Pt(A){n.enabled===!1||n.enablePan===!1||ue(A)}function I(A){switch(Me(A),b.length){case 1:switch(n.touches.ONE){case _i.ROTATE:if(n.enableRotate===!1)return;xe(),r=s.TOUCH_ROTATE;break;case _i.PAN:if(n.enablePan===!1)return;Ae(),r=s.TOUCH_PAN;break;default:r=s.NONE}break;case 2:switch(n.touches.TWO){case _i.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ue(),r=s.TOUCH_DOLLY_PAN;break;case _i.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Re(),r=s.TOUCH_DOLLY_ROTATE;break;default:r=s.NONE}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(yo)}function T(A){switch(Me(A),r){case s.TOUCH_ROTATE:if(n.enableRotate===!1)return;De(A),n.update();break;case s.TOUCH_PAN:if(n.enablePan===!1)return;Te(A),n.update();break;case s.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Fe(A),n.update();break;case s.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Le(A),n.update();break;default:r=s.NONE}}function te(A){n.enabled!==!1&&A.preventDefault()}function he(A){b.push(A)}function me(A){delete R[A.pointerId];for(let oe=0;oe<b.length;oe++)if(b[oe].pointerId==A.pointerId){b.splice(oe,1);return}}function Me(A){let oe=R[A.pointerId];oe===void 0&&(oe=new ze,R[A.pointerId]=oe),oe.set(A.pageX,A.pageY)}function Ne(A){let oe=A.pointerId===b[0].pointerId?b[1]:b[0];return R[oe.pointerId]}n.domElement.addEventListener("contextmenu",te),n.domElement.addEventListener("pointerdown",et),n.domElement.addEventListener("pointercancel",Ct),n.domElement.addEventListener("wheel",zt,{passive:!1}),this.update()}};var Xr={};ph(Xr,{AsyncCompress:()=>lg,AsyncDecompress:()=>fg,AsyncDeflate:()=>Jc,AsyncGunzip:()=>Kc,AsyncGzip:()=>lg,AsyncInflate:()=>Bo,AsyncUnzipInflate:()=>bg,AsyncUnzlib:()=>Qc,AsyncZipDeflate:()=>_g,AsyncZlib:()=>hg,Compress:()=>Ao,DecodeUTF8:()=>mg,Decompress:()=>th,Deflate:()=>vn,EncodeUTF8:()=>gg,Gunzip:()=>Hr,Gzip:()=>Ao,Inflate:()=>Vt,Unzip:()=>Sg,UnzipInflate:()=>wg,UnzipPassThrough:()=>lh,Unzlib:()=>Wr,Zip:()=>vg,ZipDeflate:()=>xg,ZipPassThrough:()=>Fs,Zlib:()=>Co,compress:()=>cg,compressSync:()=>Eo,decompress:()=>dg,decompressSync:()=>pg,deflate:()=>$c,deflateSync:()=>ks,gunzip:()=>jc,gunzipSync:()=>Gr,gzip:()=>cg,gzipSync:()=>Eo,inflate:()=>ko,inflateSync:()=>ds,strFromU8:()=>Ho,strToU8:()=>Qn,unzip:()=>Tg,unzipSync:()=>Ag,unzlib:()=>eh,unzlibSync:()=>kn,zip:()=>yg,zipSync:()=>Mg,zlib:()=>ug,zlibSync:()=>Po});var Ec={},wo=function(i){return URL.createObjectURL(new Blob([i],{type:"text/javascript"}))},Rc=function(i){return new Worker(i)};try{URL.revokeObjectURL(wo(""))}catch{wo=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},Rc=function(e){return new Worker(e,{type:"module"})}}var ag=function(i,e,t,n,s){var r=Rc(Ec[e]||(Ec[e]=wo(i)));return r.onerror=function(o){return s(o.error,null)},r.onmessage=function(o){return s(null,o.data)},r.postMessage(t,n),r},Ge=Uint8Array,wt=Uint16Array,Un=Uint32Array,as=new Ge([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),os=new Ge([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ns=new Ge([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ic=function(i,e){for(var t=new wt(31),n=0;n<31;++n)t[n]=e+=1<<i[n-1];for(var s=new Un(t[30]),n=1;n<30;++n)for(var r=t[n];r<t[n+1];++r)s[r]=r-t[n]<<5|n;return[t,s]},Lc=Ic(as,2),Io=Lc[0],kr=Lc[1];Io[28]=258,kr[258]=28;var Dc=Ic(os,0),Nc=Dc[0],bo=Dc[1],Os=new wt(32768);for(Je=0;Je<32768;++Je)Fn=(Je&43690)>>>1|(Je&21845)<<1,Fn=(Fn&52428)>>>2|(Fn&13107)<<2,Fn=(Fn&61680)>>>4|(Fn&3855)<<4,Os[Je]=((Fn&65280)>>>8|(Fn&255)<<8)>>>1;var Fn,Je,Qt=function(i,e,t){for(var n=i.length,s=0,r=new wt(e);s<n;++s)++r[i[s]-1];var o=new wt(e);for(s=0;s<e;++s)o[s]=o[s-1]+r[s-1]<<1;var a;if(t){a=new wt(1<<e);var c=15-e;for(s=0;s<n;++s)if(i[s])for(var l=s<<4|i[s],h=e-i[s],u=o[i[s]-1]++<<h,f=u|(1<<h)-1;u<=f;++u)a[Os[u]>>>c]=l}else for(a=new wt(n),s=0;s<n;++s)i[s]&&(a[s]=Os[o[i[s]-1]++]>>>15-i[s]);return a},Bn=new Ge(288);for(Je=0;Je<144;++Je)Bn[Je]=8;var Je;for(Je=144;Je<256;++Je)Bn[Je]=9;var Je;for(Je=256;Je<280;++Je)Bn[Je]=7;var Je;for(Je=280;Je<288;++Je)Bn[Je]=8;var Je,ss=new Ge(32);for(Je=0;Je<32;++Je)ss[Je]=5;var Je,Oc=Qt(Bn,9,0),Fc=Qt(Bn,9,1),zc=Qt(ss,5,0),Uc=Qt(ss,5,1),zr=function(i){for(var e=i[0],t=1;t<i.length;++t)i[t]>e&&(e=i[t]);return e},jt=function(i,e,t){var n=e/8|0;return(i[n]|i[n+1]<<8)>>(e&7)&t},Ur=function(i,e){var t=e/8|0;return(i[t]|i[t+1]<<8|i[t+2]<<16)>>(e&7)},zs=function(i){return(i/8|0)+(i&7&&1)},en=function(i,e,t){(e==null||e<0)&&(e=0),(t==null||t>i.length)&&(t=i.length);var n=new(i instanceof wt?wt:i instanceof Un?Un:Ge)(t-e);return n.set(i.subarray(e,t)),n},Us=function(i,e,t){var n=i.length;if(!n||t&&!t.l&&n<5)return e||new Ge(0);var s=!e||t,r=!t||t.i;t||(t={}),e||(e=new Ge(n*3));var o=function(q){var Ue=e.length;if(q>Ue){var Re=new Ge(Math.max(Ue*2,q));Re.set(e),e=Re}},a=t.f||0,c=t.p||0,l=t.b||0,h=t.l,u=t.d,f=t.m,g=t.n,_=n*8;do{if(!h){t.f=a=jt(i,c,1);var p=jt(i,c+1,3);if(c+=3,p)if(p==1)h=Fc,u=Uc,f=9,g=5;else if(p==2){var S=jt(i,c,31)+257,v=jt(i,c+10,15)+4,b=S+jt(i,c+5,31)+1;c+=14;for(var R=new Ge(b),D=new Ge(19),x=0;x<v;++x)D[Ns[x]]=jt(i,c+x*3,7);c+=v*3;for(var C=zr(D),L=(1<<C)-1,ee=Qt(D,C,1),x=0;x<b;){var Y=ee[jt(i,c,L)];c+=Y&15;var d=Y>>>4;if(d<16)R[x++]=d;else{var V=0,F=0;for(d==16?(F=3+jt(i,c,3),c+=2,V=R[x-1]):d==17?(F=3+jt(i,c,7),c+=3):d==18&&(F=11+jt(i,c,127),c+=7);F--;)R[x++]=V}}var Z=R.subarray(0,S),K=R.subarray(S);f=zr(Z),g=zr(K),h=Qt(Z,f,1),u=Qt(K,g,1)}else throw"invalid block type";else{var d=zs(c)+4,y=i[d-4]|i[d-3]<<8,w=d+y;if(w>n){if(r)throw"unexpected EOF";break}s&&o(l+y),e.set(i.subarray(d,w),l),t.b=l+=y,t.p=c=w*8;continue}if(c>_){if(r)throw"unexpected EOF";break}}s&&o(l+131072);for(var se=(1<<f)-1,$=(1<<g)-1,U=c;;U=c){var V=h[Ur(i,c)&se],k=V>>>4;if(c+=V&15,c>_){if(r)throw"unexpected EOF";break}if(!V)throw"invalid length/literal";if(k<256)e[l++]=k;else if(k==256){U=c,h=null;break}else{var le=k-254;if(k>264){var x=k-257,ie=as[x];le=jt(i,c,(1<<ie)-1)+Io[x],c+=ie}var ue=u[Ur(i,c)&$],xe=ue>>>4;if(!ue)throw"invalid distance";c+=ue&15;var K=Nc[xe];if(xe>3){var ie=os[xe];K+=Ur(i,c)&(1<<ie)-1,c+=ie}if(c>_){if(r)throw"unexpected EOF";break}s&&o(l+131072);for(var Ae=l+le;l<Ae;l+=4)e[l]=e[l-K],e[l+1]=e[l+1-K],e[l+2]=e[l+2-K],e[l+3]=e[l+3-K];l=Ae}}t.l=h,t.p=U,t.b=l,h&&(a=1,t.m=f,t.d=u,t.n=g)}while(!a);return l==e.length?e:en(e,0,l)},_n=function(i,e,t){t<<=e&7;var n=e/8|0;i[n]|=t,i[n+1]|=t>>>8},ns=function(i,e,t){t<<=e&7;var n=e/8|0;i[n]|=t,i[n+1]|=t>>>8,i[n+2]|=t>>>16},Br=function(i,e){for(var t=[],n=0;n<i.length;++n)i[n]&&t.push({s:n,f:i[n]});var s=t.length,r=t.slice();if(!s)return[zn,0];if(s==1){var o=new Ge(t[0].s+1);return o[t[0].s]=1,[o,1]}t.sort(function(b,R){return b.f-R.f}),t.push({s:-1,f:25001});var a=t[0],c=t[1],l=0,h=1,u=2;for(t[0]={s:-1,f:a.f+c.f,l:a,r:c};h!=s-1;)a=t[t[l].f<t[u].f?l++:u++],c=t[l!=h&&t[l].f<t[u].f?l++:u++],t[h++]={s:-1,f:a.f+c.f,l:a,r:c};for(var f=r[0].s,n=1;n<s;++n)r[n].s>f&&(f=r[n].s);var g=new wt(f+1),_=Vr(t[h-1],g,0);if(_>e){var n=0,p=0,d=_-e,y=1<<d;for(r.sort(function(R,D){return g[D.s]-g[R.s]||R.f-D.f});n<s;++n){var w=r[n].s;if(g[w]>e)p+=y-(1<<_-g[w]),g[w]=e;else break}for(p>>>=d;p>0;){var S=r[n].s;g[S]<e?p-=1<<e-g[S]++-1:++n}for(;n>=0&&p;--n){var v=r[n].s;g[v]==e&&(--g[v],++p)}_=e}return[new Ge(g),_]},Vr=function(i,e,t){return i.s==-1?Math.max(Vr(i.l,e,t+1),Vr(i.r,e,t+1)):e[i.s]=t},So=function(i){for(var e=i.length;e&&!i[--e];);for(var t=new wt(++e),n=0,s=i[0],r=1,o=function(c){t[n++]=c},a=1;a<=e;++a)if(i[a]==s&&a!=e)++r;else{if(!s&&r>2){for(;r>138;r-=138)o(32754);r>2&&(o(r>10?r-11<<5|28690:r-3<<5|12305),r=0)}else if(r>3){for(o(s),--r;r>6;r-=6)o(8304);r>2&&(o(r-3<<5|8208),r=0)}for(;r--;)o(s);r=1,s=i[a]}return[t.subarray(0,n),e]},is=function(i,e){for(var t=0,n=0;n<e.length;++n)t+=i[n]*e[n];return t},Ds=function(i,e,t){var n=t.length,s=zs(e+2);i[s]=n&255,i[s+1]=n>>>8,i[s+2]=i[s]^255,i[s+3]=i[s+1]^255;for(var r=0;r<n;++r)i[s+r+4]=t[r];return(s+4+n)*8},To=function(i,e,t,n,s,r,o,a,c,l,h){_n(e,h++,t),++s[256];for(var u=Br(s,15),f=u[0],g=u[1],_=Br(r,15),p=_[0],d=_[1],y=So(f),w=y[0],S=y[1],v=So(p),b=v[0],R=v[1],D=new wt(19),x=0;x<w.length;++x)D[w[x]&31]++;for(var x=0;x<b.length;++x)D[b[x]&31]++;for(var C=Br(D,7),L=C[0],ee=C[1],Y=19;Y>4&&!L[Ns[Y-1]];--Y);var V=l+5<<3,F=is(s,Bn)+is(r,ss)+o,Z=is(s,f)+is(r,p)+o+14+3*Y+is(D,L)+(2*D[16]+3*D[17]+7*D[18]);if(V<=F&&V<=Z)return Ds(e,h,i.subarray(c,c+l));var K,se,$,U;if(_n(e,h,1+(Z<F)),h+=2,Z<F){K=Qt(f,g,0),se=f,$=Qt(p,d,0),U=p;var k=Qt(L,ee,0);_n(e,h,S-257),_n(e,h+5,R-1),_n(e,h+10,Y-4),h+=14;for(var x=0;x<Y;++x)_n(e,h+3*x,L[Ns[x]]);h+=3*Y;for(var le=[w,b],ie=0;ie<2;++ie)for(var ue=le[ie],x=0;x<ue.length;++x){var xe=ue[x]&31;_n(e,h,k[xe]),h+=L[xe],xe>15&&(_n(e,h,ue[x]>>>5&127),h+=ue[x]>>>12)}}else K=Oc,se=Bn,$=zc,U=ss;for(var x=0;x<a;++x)if(n[x]>255){var xe=n[x]>>>18&31;ns(e,h,K[xe+257]),h+=se[xe+257],xe>7&&(_n(e,h,n[x]>>>23&31),h+=as[xe]);var Ae=n[x]&31;ns(e,h,$[Ae]),h+=U[Ae],Ae>3&&(ns(e,h,n[x]>>>5&8191),h+=os[Ae])}else ns(e,h,K[n[x]]),h+=se[n[x]];return ns(e,h,K[256]),h+se[256]},Bc=new Un([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),zn=new Ge(0),kc=function(i,e,t,n,s,r){var o=i.length,a=new Ge(n+o+5*(1+Math.ceil(o/7e3))+s),c=a.subarray(n,a.length-s),l=0;if(!e||o<8)for(var h=0;h<=o;h+=65535){var u=h+65535;u<o?l=Ds(c,l,i.subarray(h,u)):(c[h]=r,l=Ds(c,l,i.subarray(h,o)))}else{for(var f=Bc[e-1],g=f>>>13,_=f&8191,p=(1<<t)-1,d=new wt(32768),y=new wt(p+1),w=Math.ceil(t/3),S=2*w,v=function(et){return(i[et]^i[et+1]<<w^i[et+2]<<S)&p},b=new Un(25e3),R=new wt(288),D=new wt(32),x=0,C=0,h=0,L=0,ee=0,Y=0;h<o;++h){var V=v(h),F=h&32767,Z=y[V];if(d[F]=Z,y[V]=F,ee<=h){var K=o-h;if((x>7e3||L>24576)&&K>423){l=To(i,c,0,b,R,D,C,L,Y,h-Y,l),L=x=C=0,Y=h;for(var se=0;se<286;++se)R[se]=0;for(var se=0;se<30;++se)D[se]=0}var $=2,U=0,k=_,le=F-Z&32767;if(K>2&&V==v(h-le))for(var ie=Math.min(g,K)-1,ue=Math.min(32767,h),xe=Math.min(258,K);le<=ue&&--k&&F!=Z;){if(i[h+$]==i[h+$-le]){for(var Ae=0;Ae<xe&&i[h+Ae]==i[h+Ae-le];++Ae);if(Ae>$){if($=Ae,U=le,Ae>ie)break;for(var q=Math.min(le,Ae-2),Ue=0,se=0;se<q;++se){var Re=h-le+se+32768&32767,De=d[Re],Te=Re-De+32768&32767;Te>Ue&&(Ue=Te,Z=Re)}}}F=Z,Z=d[F],le+=F-Z+32768&32767}if(U){b[L++]=268435456|kr[$]<<18|bo[U];var We=kr[$]&31,Fe=bo[U]&31;C+=as[We]+os[Fe],++R[257+We],++D[Fe],ee=h+$,++x}else b[L++]=i[h],++R[i[h]]}}l=To(i,c,r,b,R,D,C,L,Y,h-Y,l),!r&&l&7&&(l=Ds(c,l+1,zn))}return en(a,0,n+zs(l)+s)},Vc=function(){for(var i=new Un(256),e=0;e<256;++e){for(var t=e,n=9;--n;)t=(t&1&&3988292384)^t>>>1;i[e]=t}return i}(),ls=function(){var i=-1;return{p:function(e){for(var t=i,n=0;n<e.length;++n)t=Vc[t&255^e[n]]^t>>>8;i=t},d:function(){return~i}}},Lo=function(){var i=1,e=0;return{p:function(t){for(var n=i,s=e,r=t.length,o=0;o!=r;){for(var a=Math.min(o+2655,r);o<a;++o)s+=n+=t[o];n=(n&65535)+15*(n>>16),s=(s&65535)+15*(s>>16)}i=n,e=s},d:function(){return i%=65521,e%=65521,(i&255)<<24|i>>>8<<16|(e&255)<<8|e>>>8}}},vi=function(i,e,t,n,s){return kc(i,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(i.length)))*1.5):12+e.mem,t,n,!s)},Bs=function(i,e){var t={};for(var n in i)t[n]=i[n];for(var n in e)t[n]=e[n];return t},Cc=function(i,e,t){for(var n=i(),s=i.toString(),r=s.slice(s.indexOf("[")+1,s.lastIndexOf("]")).replace(/ /g,"").split(","),o=0;o<n.length;++o){var a=n[o],c=r[o];if(typeof a=="function"){e+=";"+c+"=";var l=a.toString();if(a.prototype)if(l.indexOf("[native code]")!=-1){var h=l.indexOf(" ",8)+1;e+=l.slice(h,l.indexOf("(",h))}else{e+=l;for(var u in a.prototype)e+=";"+c+".prototype."+u+"="+a.prototype[u].toString()}else e+=l}else t[c]=a}return[e,t]},Fr=[],og=function(i){var e=[];for(var t in i)(i[t]instanceof Ge||i[t]instanceof wt||i[t]instanceof Un)&&e.push((i[t]=new i[t].constructor(i[t])).buffer);return e},Hc=function(i,e,t,n){var s;if(!Fr[t]){for(var r="",o={},a=i.length-1,c=0;c<a;++c)s=Cc(i[c],r,o),r=s[0],o=s[1];Fr[t]=Cc(i[a],r,o)}var l=Bs({},Fr[t][1]);return ag(Fr[t][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",t,l,og(l),n)},cs=function(){return[Ge,wt,Un,as,os,Ns,Io,Nc,Fc,Uc,Os,Qt,zr,jt,Ur,zs,en,Us,ds,ei,Do]},hs=function(){return[Ge,wt,Un,as,os,Ns,kr,bo,Oc,Bn,zc,ss,Os,Bc,zn,Qt,_n,ns,Br,Vr,So,is,Ds,To,zs,en,kc,vi,ks,ei]},Gc=function(){return[No,Fo,Ke,ls,Vc]},Wc=function(){return[Oo,Zc]},Xc=function(){return[zo,Ke,Lo]},qc=function(){return[Yc]},ei=function(i){return postMessage(i,[i.buffer])},Do=function(i){return i&&i.size&&new Ge(i.size)},us=function(i,e,t,n,s,r){var o=Hc(t,n,s,function(a,c){o.terminate(),r(a,c)});return o.postMessage([i,e],e.consume?[i.buffer]:[]),function(){o.terminate()}},tn=function(i){return i.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(e){return i.push(e.data[0],e.data[1])}},fs=function(i,e,t,n,s){var r,o=Hc(i,n,s,function(a,c){a?(o.terminate(),e.ondata.call(e,a)):(c[1]&&o.terminate(),e.ondata.call(e,a,c[0],c[1]))});o.postMessage(t),e.push=function(a,c){if(r)throw"stream finished";if(!e.ondata)throw"no stream handler";o.postMessage([a,r=c],[a.buffer])},e.terminate=function(){o.terminate()}},Ft=function(i,e){return i[e]|i[e+1]<<8},dt=function(i,e){return(i[e]|i[e+1]<<8|i[e+2]<<16|i[e+3]<<24)>>>0},Mo=function(i,e){return dt(i,e)+dt(i,e+4)*4294967296},Ke=function(i,e,t){for(;t;++e)i[e]=t,t>>>=8},No=function(i,e){var t=e.filename;if(i[0]=31,i[1]=139,i[2]=8,i[8]=e.level<2?4:e.level==9?2:0,i[9]=3,e.mtime!=0&&Ke(i,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),t){i[3]=8;for(var n=0;n<=t.length;++n)i[n+10]=t.charCodeAt(n)}},Oo=function(i){if(i[0]!=31||i[1]!=139||i[2]!=8)throw"invalid gzip data";var e=i[3],t=10;e&4&&(t+=i[10]|(i[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!i[t++]);return t+(e&2)},Zc=function(i){var e=i.length;return(i[e-4]|i[e-3]<<8|i[e-2]<<16|i[e-1]<<24)>>>0},Fo=function(i){return 10+(i.filename&&i.filename.length+1||0)},zo=function(i,e){var t=e.level,n=t==0?0:t<6?1:t==9?3:2;i[0]=120,i[1]=n<<6|(n?32-2*n:1)},Yc=function(i){if((i[0]&15)!=8||i[0]>>>4>7||(i[0]<<8|i[1])%31)throw"invalid zlib data";if(i[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Uo(i,e){return!e&&typeof i=="function"&&(e=i,i={}),this.ondata=e,i}var vn=function(){function i(e,t){!t&&typeof e=="function"&&(t=e,e={}),this.ondata=t,this.o=e||{}}return i.prototype.p=function(e,t){this.ondata(vi(e,this.o,0,0,!t),t)},i.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},i}();var Jc=function(){function i(e,t){fs([hs,function(){return[tn,vn]}],this,Uo.call(this,e,t),function(n){var s=new vn(n.data);onmessage=tn(s)},6)}return i}();function $c(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return us(i,e,[hs],function(n){return ei(ks(n.data[0],n.data[1]))},0,t)}function ks(i,e){return vi(i,e||{},0,0)}var Vt=function(){function i(e){this.s={},this.p=new Ge(0),this.ondata=e}return i.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Ge(t+e.length);n.set(this.p),n.set(e,t),this.p=n},i.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=Us(this.p,this.o,this.s);this.ondata(en(n,t,this.s.b),this.d),this.o=en(n,this.s.b-32768),this.s.b=this.o.length,this.p=en(this.p,this.s.p/8|0),this.s.p&=7},i.prototype.push=function(e,t){this.e(e),this.c(t)},i}();var Bo=function(){function i(e){this.ondata=e,fs([cs,function(){return[tn,Vt]}],this,0,function(){var t=new Vt;onmessage=tn(t)},7)}return i}();function ko(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return us(i,e,[cs],function(n){return ei(ds(n.data[0],Do(n.data[1])))},1,t)}function ds(i,e){return Us(i,e)}var Ao=function(){function i(e,t){this.c=ls(),this.l=0,this.v=1,vn.call(this,e,t)}return i.prototype.push=function(e,t){vn.prototype.push.call(this,e,t)},i.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=vi(e,this.o,this.v&&Fo(this.o),t&&8,!t);this.v&&(No(n,this.o),this.v=0),t&&(Ke(n,n.length-8,this.c.d()),Ke(n,n.length-4,this.l)),this.ondata(n,t)},i}();var lg=function(){function i(e,t){fs([hs,Gc,function(){return[tn,vn,Ao]}],this,Uo.call(this,e,t),function(n){var s=new Ao(n.data);onmessage=tn(s)},8)}return i}();function cg(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return us(i,e,[hs,Gc,function(){return[Eo]}],function(n){return ei(Eo(n.data[0],n.data[1]))},2,t)}function Eo(i,e){e||(e={});var t=ls(),n=i.length;t.p(i);var s=vi(i,e,Fo(e),8),r=s.length;return No(s,e),Ke(s,r-8,t.d()),Ke(s,r-4,n),s}var Hr=function(){function i(e){this.v=1,Vt.call(this,e)}return i.prototype.push=function(e,t){if(Vt.prototype.e.call(this,e),this.v){var n=this.p.length>3?Oo(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Vt.prototype.c.call(this,t)},i}();var Kc=function(){function i(e){this.ondata=e,fs([cs,Wc,function(){return[tn,Vt,Hr]}],this,0,function(){var t=new Hr;onmessage=tn(t)},9)}return i}();function jc(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return us(i,e,[cs,Wc,function(){return[Gr]}],function(n){return ei(Gr(n.data[0]))},3,t)}function Gr(i,e){return Us(i.subarray(Oo(i),-8),e||new Ge(Zc(i)))}var Co=function(){function i(e,t){this.c=Lo(),this.v=1,vn.call(this,e,t)}return i.prototype.push=function(e,t){vn.prototype.push.call(this,e,t)},i.prototype.p=function(e,t){this.c.p(e);var n=vi(e,this.o,this.v&&2,t&&4,!t);this.v&&(zo(n,this.o),this.v=0),t&&Ke(n,n.length-4,this.c.d()),this.ondata(n,t)},i}();var hg=function(){function i(e,t){fs([hs,Xc,function(){return[tn,vn,Co]}],this,Uo.call(this,e,t),function(n){var s=new Co(n.data);onmessage=tn(s)},10)}return i}();function ug(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return us(i,e,[hs,Xc,function(){return[Po]}],function(n){return ei(Po(n.data[0],n.data[1]))},4,t)}function Po(i,e){e||(e={});var t=Lo();t.p(i);var n=vi(i,e,2,4);return zo(n,e),Ke(n,n.length-4,t.d()),n}var Wr=function(){function i(e){this.v=1,Vt.call(this,e)}return i.prototype.push=function(e,t){if(Vt.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Vt.prototype.c.call(this,t)},i}();var Qc=function(){function i(e){this.ondata=e,fs([cs,qc,function(){return[tn,Vt,Wr]}],this,0,function(){var t=new Wr;onmessage=tn(t)},11)}return i}();function eh(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return us(i,e,[cs,qc,function(){return[kn]}],function(n){return ei(kn(n.data[0],Do(n.data[1])))},5,t)}function kn(i,e){return Us((Yc(i),i.subarray(2,-4)),e)}var th=function(){function i(e){this.G=Hr,this.I=Vt,this.Z=Wr,this.ondata=e}return i.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Ge(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var s=this,r=function(){s.ondata.apply(s,arguments)};this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(r):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(r):new this.Z(r),this.s.push(this.p,t),this.p=null}}},i}();var fg=function(){function i(e){this.G=Kc,this.I=Bo,this.Z=Qc,this.ondata=e}return i.prototype.push=function(e,t){th.prototype.push.call(this,e,t)},i}();function dg(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return i[0]==31&&i[1]==139&&i[2]==8?jc(i,e,t):(i[0]&15)!=8||i[0]>>4>7||(i[0]<<8|i[1])%31?ko(i,e,t):eh(i,e,t)}function pg(i,e){return i[0]==31&&i[1]==139&&i[2]==8?Gr(i,e):(i[0]&15)!=8||i[0]>>4>7||(i[0]<<8|i[1])%31?ds(i,e):kn(i,e)}var Vo=function(i,e,t,n){for(var s in i){var r=i[s],o=e+s;r instanceof Ge?t[o]=[r,n]:Array.isArray(r)?t[o]=[r[0],Bs(n,r[1])]:Vo(r,o+"/",t,n)}},Pc=typeof TextEncoder<"u"&&new TextEncoder,Ro=typeof TextDecoder<"u"&&new TextDecoder,nh=0;try{Ro.decode(zn,{stream:!0}),nh=1}catch{}var ih=function(i){for(var e="",t=0;;){var n=i[t++],s=(n>127)+(n>223)+(n>239);if(t+s>i.length)return[e,en(i,t-1)];s?s==3?(n=((n&15)<<18|(i[t++]&63)<<12|(i[t++]&63)<<6|i[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):s&1?e+=String.fromCharCode((n&31)<<6|i[t++]&63):e+=String.fromCharCode((n&15)<<12|(i[t++]&63)<<6|i[t++]&63):e+=String.fromCharCode(n)}},mg=function(){function i(e){this.ondata=e,nh?this.t=new TextDecoder:this.p=zn}return i.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var n=new Ge(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var s=ih(n),r=s[0],o=s[1];if(t){if(o.length)throw"invalid utf-8 data";this.p=null}else this.p=o;this.ondata(r,t)},i}();var gg=function(){function i(e){this.ondata=e}return i.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(Qn(e),this.d=t||!1)},i}();function Qn(i,e){if(e){for(var t=new Ge(i.length),n=0;n<i.length;++n)t[n]=i.charCodeAt(n);return t}if(Pc)return Pc.encode(i);for(var s=i.length,r=new Ge(i.length+(i.length>>1)),o=0,a=function(h){r[o++]=h},n=0;n<s;++n){if(o+5>r.length){var c=new Ge(o+8+(s-n<<1));c.set(r),r=c}var l=i.charCodeAt(n);l<128||e?a(l):l<2048?(a(192|l>>6),a(128|l&63)):l>55295&&l<57344?(l=65536+(l&1023<<10)|i.charCodeAt(++n)&1023,a(240|l>>18),a(128|l>>12&63),a(128|l>>6&63),a(128|l&63)):(a(224|l>>12),a(128|l>>6&63),a(128|l&63))}return en(r,0,o)}function Ho(i,e){if(e){for(var t="",n=0;n<i.length;n+=16384)t+=String.fromCharCode.apply(null,i.subarray(n,n+16384));return t}else{if(Ro)return Ro.decode(i);var s=ih(i),r=s[0],o=s[1];if(o.length)throw"invalid utf-8 data";return r}}var sh=function(i){return i==1?3:i<6?2:i==9?1:0},rh=function(i,e){return e+30+Ft(i,e+26)+Ft(i,e+28)},ah=function(i,e,t){var n=Ft(i,e+28),s=Ho(i.subarray(e+46,e+46+n),!(Ft(i,e+8)&2048)),r=e+46+n,o=dt(i,e+20),a=t&&o==4294967295?oh(i,r):[o,dt(i,e+24),dt(i,e+42)],c=a[0],l=a[1],h=a[2];return[Ft(i,e+10),c,l,s,r+Ft(i,e+30)+Ft(i,e+32),h]},oh=function(i,e){for(;Ft(i,e)!=1;e+=4+Ft(i,e+2));return[Mo(i,e+12),Mo(i,e+4),Mo(i,e+20)]},jn=function(i){var e=0;if(i)for(var t in i){var n=i[t].length;if(n>65535)throw"extra field too long";e+=n+4}return e},rs=function(i,e,t,n,s,r,o,a){var c=n.length,l=t.extra,h=a&&a.length,u=jn(l);Ke(i,e,o!=null?33639248:67324752),e+=4,o!=null&&(i[e++]=20,i[e++]=t.os),i[e]=20,e+=2,i[e++]=t.flag<<1|(r==null&&8),i[e++]=s&&8,i[e++]=t.compression&255,i[e++]=t.compression>>8;var f=new Date(t.mtime==null?Date.now():t.mtime),g=f.getFullYear()-1980;if(g<0||g>119)throw"date not in range 1980-2099";if(Ke(i,e,g<<25|f.getMonth()+1<<21|f.getDate()<<16|f.getHours()<<11|f.getMinutes()<<5|f.getSeconds()>>>1),e+=4,r!=null&&(Ke(i,e,t.crc),Ke(i,e+4,r),Ke(i,e+8,t.size)),Ke(i,e+12,c),Ke(i,e+14,u),e+=16,o!=null&&(Ke(i,e,h),Ke(i,e+6,t.attrs),Ke(i,e+10,o),e+=14),i.set(n,e),e+=c,u)for(var _ in l){var p=l[_],d=p.length;Ke(i,e,+_),Ke(i,e+2,d),i.set(p,e+4),e+=4+d}return h&&(i.set(a,e),e+=h),e},Go=function(i,e,t,n,s){Ke(i,e,101010256),Ke(i,e+8,t),Ke(i,e+10,t),Ke(i,e+12,n),Ke(i,e+16,s)},Fs=function(){function i(e){this.filename=e,this.c=ls(),this.size=0,this.compression=0}return i.prototype.process=function(e,t){this.ondata(null,e,t)},i.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},i}();var xg=function(){function i(e,t){var n=this;t||(t={}),Fs.call(this,e),this.d=new vn(t,function(s,r){n.ondata(null,s,r)}),this.compression=8,this.flag=sh(t.level)}return i.prototype.process=function(e,t){try{this.d.push(e,t)}catch(n){this.ondata(n,null,t)}},i.prototype.push=function(e,t){Fs.prototype.push.call(this,e,t)},i}();var _g=function(){function i(e,t){var n=this;t||(t={}),Fs.call(this,e),this.d=new Jc(t,function(s,r,o){n.ondata(s,r,o)}),this.compression=8,this.flag=sh(t.level),this.terminate=this.d.terminate}return i.prototype.process=function(e,t){this.d.push(e,t)},i.prototype.push=function(e,t){Fs.prototype.push.call(this,e,t)},i}();var vg=function(){function i(e){this.ondata=e,this.u=[],this.d=1}return i.prototype.add=function(e){var t=this;if(this.d&2)throw"stream finished";var n=Qn(e.filename),s=n.length,r=e.comment,o=r&&Qn(r),a=s!=e.filename.length||o&&r.length!=o.length,c=s+jn(e.extra)+30;if(s>65535)throw"filename too long";var l=new Ge(c);rs(l,0,e,n,a);var h=[l],u=function(){for(var d=0,y=h;d<y.length;d++){var w=y[d];t.ondata(null,w,!1)}h=[]},f=this.d;this.d=0;var g=this.u.length,_=Bs(e,{f:n,u:a,o,t:function(){e.terminate&&e.terminate()},r:function(){if(u(),f){var d=t.u[g+1];d?d.r():t.d=1}f=1}}),p=0;e.ondata=function(d,y,w){if(d)t.ondata(d,y,w),t.terminate();else if(p+=y.length,h.push(y),w){var S=new Ge(16);Ke(S,0,134695760),Ke(S,4,e.crc),Ke(S,8,p),Ke(S,12,e.size),h.push(S),_.c=p,_.b=c+p+16,_.crc=e.crc,_.size=e.size,f&&_.r(),f=1}else f&&u()},this.u.push(_)},i.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){!(e.d&1)||(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},i.prototype.e=function(){for(var e=0,t=0,n=0,s=0,r=this.u;s<r.length;s++){var o=r[s];n+=46+o.f.length+jn(o.extra)+(o.o?o.o.length:0)}for(var a=new Ge(n+22),c=0,l=this.u;c<l.length;c++){var o=l[c];rs(a,e,o,o.f,o.u,o.c,t,o.o),e+=46+o.f.length+jn(o.extra)+(o.o?o.o.length:0),t+=o.b}Go(a,e,this.u.length,n,t),this.ondata(null,a,!0),this.d=2},i.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){var n=t[e];n.t()}this.d=2},i}();function yg(i,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";var n={};Vo(i,"",n,e);var s=Object.keys(n),r=s.length,o=0,a=0,c=r,l=new Array(r),h=[],u=function(){for(var p=0;p<h.length;++p)h[p]()},f=function(){var p=new Ge(a+22),d=o,y=a-o;a=0;for(var w=0;w<c;++w){var S=l[w];try{var v=S.c.length;rs(p,a,S,S.f,S.u,v);var b=30+S.f.length+jn(S.extra),R=a+b;p.set(S.c,R),rs(p,o,S,S.f,S.u,v,a,S.m),o+=16+b+(S.m?S.m.length:0),a=R+v}catch(D){return t(D,null)}}Go(p,o,l.length,y,d),t(null,p)};r||f();for(var g=function(p){var d=s[p],y=n[d],w=y[0],S=y[1],v=ls(),b=w.length;v.p(w);var R=Qn(d),D=R.length,x=S.comment,C=x&&Qn(x),L=C&&C.length,ee=jn(S.extra),Y=S.level==0?0:8,V=function(F,Z){if(F)u(),t(F,null);else{var K=Z.length;l[p]=Bs(S,{size:b,crc:v.d(),c:Z,f:R,m:C,u:D!=d.length||C&&x.length!=L,compression:Y}),o+=30+D+ee+K,a+=76+2*(D+ee)+(L||0)+K,--r||f()}};if(D>65535&&V("filename too long",null),!Y)V(null,w);else if(b<16e4)try{V(null,ks(w,S))}catch(F){V(F,null)}else h.push($c(w,S,V))},_=0;_<c;++_)g(_);return u}function Mg(i,e){e||(e={});var t={},n=[];Vo(i,"",t,e);var s=0,r=0;for(var o in t){var a=t[o],c=a[0],l=a[1],h=l.level==0?0:8,u=Qn(o),f=u.length,g=l.comment,_=g&&Qn(g),p=_&&_.length,d=jn(l.extra);if(f>65535)throw"filename too long";var y=h?ks(c,l):c,w=y.length,S=ls();S.p(c),n.push(Bs(l,{size:c.length,crc:S.d(),c:y,f:u,m:_,u:f!=o.length||_&&g.length!=p,o:s,compression:h})),s+=30+f+d+w,r+=76+2*(f+d)+(p||0)+w}for(var v=new Ge(r+22),b=s,R=r-s,D=0;D<n.length;++D){var u=n[D];rs(v,u.o,u,u.f,u.u,u.c.length);var x=30+u.f.length+jn(u.extra);v.set(u.c,u.o+x),rs(v,s,u,u.f,u.u,u.c.length,u.o,u.m),s+=16+x+(u.m?u.m.length:0)}return Go(v,s,n.length,R,b),v}var lh=function(){function i(){}return i.prototype.push=function(e,t){this.ondata(null,e,t)},i.compression=0,i}();var wg=function(){function i(){var e=this;this.i=new Vt(function(t,n){e.ondata(null,t,n)})}return i.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},i.compression=8,i}();var bg=function(){function i(e,t){var n=this;t<32e4?this.i=new Vt(function(s,r){n.ondata(null,s,r)}):(this.i=new Bo(function(s,r,o){n.ondata(s,r,o)}),this.terminate=this.i.terminate)}return i.prototype.push=function(e,t){this.i.terminate&&(e=en(e,0)),this.i.push(e,t)},i.compression=8,i}();var Sg=function(){function i(e){this.onfile=e,this.k=[],this.o={0:lh},this.p=zn}return i.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var s=Math.min(this.c,e.length),r=e.subarray(0,s);if(this.c-=s,this.d?this.d.push(r,!this.c):this.k[0].push(r),e=e.subarray(s),e.length)return this.push(e,t)}else{var o=0,a=0,c=void 0,l=void 0;this.p.length?e.length?(l=new Ge(this.p.length+e.length),l.set(this.p),l.set(e,this.p.length)):l=this.p:l=e;for(var h=l.length,u=this.c,f=u&&this.d,g=function(){var y,w=dt(l,a);if(w==67324752){o=1,c=a,_.d=null,_.c=0;var S=Ft(l,a+6),v=Ft(l,a+8),b=S&2048,R=S&8,D=Ft(l,a+26),x=Ft(l,a+28);if(h>a+30+D+x){var C=[];_.k.unshift(C),o=2;var L=dt(l,a+18),ee=dt(l,a+22),Y=Ho(l.subarray(a+30,a+=30+D),!b);L==4294967295?(y=R?[-2]:oh(l,a),L=y[0],ee=y[1]):R&&(L=-1),a+=x,_.c=L;var V,F={name:Y,compression:v,start:function(){if(!F.ondata)throw"no callback";if(!L)F.ondata(null,zn,!0);else{var Z=n.o[v];if(!Z)throw"unknown compression type "+v;V=L<0?new Z(Y):new Z(Y,L,ee),V.ondata=function(U,k,le){F.ondata(U,k,le)};for(var K=0,se=C;K<se.length;K++){var $=se[K];V.push($,!1)}n.k[0]==C&&n.c?n.d=V:V.push(zn,!0)}},terminate:function(){V&&V.terminate&&V.terminate()}};L>=0&&(F.size=L,F.originalSize=ee),_.onfile(F)}return"break"}else if(u){if(w==134695760)return c=a+=12+(u==-2&&8),o=3,_.c=0,"break";if(w==33639248)return c=a-=4,o=3,_.c=0,"break"}},_=this;a<h-4;++a){var p=g();if(p==="break")break}if(this.p=zn,u<0){var d=o?l.subarray(0,c-12-(u==-2&&8)-(dt(l,c-16)==134695760&&4)):l.subarray(0,a);f?f.push(d,!!o):this.k[+(o==2)].push(d)}if(o&2)return this.push(l.subarray(a),t);this.p=l.subarray(a)}if(t){if(this.c)throw"invalid zip file";this.p=null}},i.prototype.register=function(e){this.o[e.compression]=e},i}();function Tg(i,e){if(typeof e!="function")throw"no callback";for(var t=[],n=function(){for(var f=0;f<t.length;++f)t[f]()},s={},r=i.length-22;dt(i,r)!=101010256;--r)if(!r||i.length-r>65558){e("invalid zip file",null);return}var o=Ft(i,r+8);o||e(null,{});var a=o,c=dt(i,r+16),l=c==4294967295;if(l){if(r=dt(i,r-12),dt(i,r)!=101075792){e("invalid zip file",null);return}a=o=dt(i,r+32),c=dt(i,r+48)}for(var h=function(f){var g=ah(i,c,l),_=g[0],p=g[1],d=g[2],y=g[3],w=g[4],S=g[5],v=rh(i,S);c=w;var b=function(D,x){D?(n(),e(D,null)):(s[y]=x,--o||e(null,s))};if(!_)b(null,en(i,v,v+p));else if(_==8){var R=i.subarray(v,v+p);if(p<32e4)try{b(null,ds(R,new Ge(d)))}catch(D){b(D,null)}else t.push(ko(R,{size:d},b))}else b("unknown compression type "+_,null)},u=0;u<a;++u)h(u);return n}function Ag(i){for(var e={},t=i.length-22;dt(i,t)!=101010256;--t)if(!t||i.length-t>65558)throw"invalid zip file";var n=Ft(i,t+8);if(!n)return{};var s=dt(i,t+16),r=s==4294967295;if(r){if(t=dt(i,t-12),dt(i,t)!=101075792)throw"invalid zip file";n=dt(i,t+32),s=dt(i,t+48)}for(var o=0;o<n;++o){var a=ah(i,s,r),c=a[0],l=a[1],h=a[2],u=a[3],f=a[4],g=a[5],_=rh(i,g);if(s=f,!c)e[u]=en(i,_,_+l);else if(c==8)e[u]=ds(i.subarray(_,_+l),new Ge(h));else throw"unknown compression type "+c}return e}var qr=class extends Ir{constructor(e){super(e),this.type=mn}parse(e){let C=Math.pow(2.7182818,2.2);function L(m,M){let P=0;for(let X=0;X<65536;++X)(X==0||m[X>>3]&1<<(X&7))&&(M[P++]=X);let N=P-1;for(;P<65536;)M[P++]=0;return N}function ee(m){for(let M=0;M<16384;M++)m[M]={},m[M].len=0,m[M].lit=0,m[M].p=null}let Y={l:0,c:0,lc:0};function V(m,M,P,N,X){for(;P<m;)M=M<<8|ke(N,X),P+=8;P-=m,Y.l=M>>P&(1<<m)-1,Y.c=M,Y.lc=P}let F=new Array(59);function Z(m){for(let P=0;P<=58;++P)F[P]=0;for(let P=0;P<65537;++P)F[m[P]]+=1;let M=0;for(let P=58;P>0;--P){let N=M+F[P]>>1;F[P]=M,M=N}for(let P=0;P<65537;++P){let N=m[P];N>0&&(m[P]=N|F[N]++<<6)}}function K(m,M,P,N,X,B){let j=M,re=0,pe=0;for(;N<=X;N++){if(j.value-M.value>P)return!1;V(6,re,pe,m,j);let ae=Y.l;if(re=Y.c,pe=Y.lc,B[N]=ae,ae==63){if(j.value-M.value>P)throw new Error("Something wrong with hufUnpackEncTable");V(8,re,pe,m,j);let fe=Y.l+6;if(re=Y.c,pe=Y.lc,N+fe>X+1)throw new Error("Something wrong with hufUnpackEncTable");for(;fe--;)B[N++]=0;N--}else if(ae>=59){let fe=ae-59+2;if(N+fe>X+1)throw new Error("Something wrong with hufUnpackEncTable");for(;fe--;)B[N++]=0;N--}}Z(B)}function se(m){return m&63}function $(m){return m>>6}function U(m,M,P,N){for(;M<=P;M++){let X=$(m[M]),B=se(m[M]);if(X>>B)throw new Error("Invalid table entry");if(B>14){let j=N[X>>B-14];if(j.len)throw new Error("Invalid table entry");if(j.lit++,j.p){let re=j.p;j.p=new Array(j.lit);for(let pe=0;pe<j.lit-1;++pe)j.p[pe]=re[pe]}else j.p=new Array(1);j.p[j.lit-1]=M}else if(B){let j=0;for(let re=1<<14-B;re>0;re--){let pe=N[(X<<14-B)+j];if(pe.len||pe.p)throw new Error("Invalid table entry");pe.len=B,pe.lit=M,j++}}}return!0}let k={c:0,lc:0};function le(m,M,P,N){m=m<<8|ke(P,N),M+=8,k.c=m,k.lc=M}let ie={c:0,lc:0};function ue(m,M,P,N,X,B,j,re,pe){if(m==M){N<8&&(le(P,N,X,B),P=k.c,N=k.lc),N-=8;let ae=P>>N;if(ae=new Uint8Array([ae])[0],re.value+ae>pe)return!1;let fe=j[re.value-1];for(;ae-- >0;)j[re.value++]=fe}else if(re.value<pe)j[re.value++]=m;else return!1;ie.c=P,ie.lc=N}function xe(m){return m&65535}function Ae(m){let M=xe(m);return M>32767?M-65536:M}let q={a:0,b:0};function Ue(m,M){let P=Ae(m),X=Ae(M),B=P+(X&1)+(X>>1),j=B,re=B-X;q.a=j,q.b=re}function Re(m,M){let P=xe(m),N=xe(M),X=P-(N>>1)&65535,B=N+X-32768&65535;q.a=B,q.b=X}function De(m,M,P,N,X,B,j){let re=j<16384,pe=P>X?X:P,ae=1,fe,be;for(;ae<=pe;)ae<<=1;for(ae>>=1,fe=ae,ae>>=1;ae>=1;){be=0;let de=be+B*(X-fe),Ie=B*ae,Pe=B*fe,Se=N*ae,Ee=N*fe,Be,tt,Ve,ut;for(;be<=de;be+=Pe){let je=be,Oe=be+N*(P-fe);for(;je<=Oe;je+=Ee){let at=je+Se,Bt=je+Ie,ft=Bt+Se;re?(Ue(m[je+M],m[Bt+M]),Be=q.a,Ve=q.b,Ue(m[at+M],m[ft+M]),tt=q.a,ut=q.b,Ue(Be,tt),m[je+M]=q.a,m[at+M]=q.b,Ue(Ve,ut),m[Bt+M]=q.a,m[ft+M]=q.b):(Re(m[je+M],m[Bt+M]),Be=q.a,Ve=q.b,Re(m[at+M],m[ft+M]),tt=q.a,ut=q.b,Re(Be,tt),m[je+M]=q.a,m[at+M]=q.b,Re(Ve,ut),m[Bt+M]=q.a,m[ft+M]=q.b)}if(P&ae){let at=je+Ie;re?Ue(m[je+M],m[at+M]):Re(m[je+M],m[at+M]),Be=q.a,m[at+M]=q.b,m[je+M]=Be}}if(X&ae){let je=be,Oe=be+N*(P-fe);for(;je<=Oe;je+=Ee){let at=je+Se;re?Ue(m[je+M],m[at+M]):Re(m[je+M],m[at+M]),Be=q.a,m[at+M]=q.b,m[je+M]=Be}}fe=ae,ae>>=1}return be}function Te(m,M,P,N,X,B,j,re,pe){let ae=0,fe=0,be=j,de=Math.trunc(N.value+(X+7)/8);for(;N.value<de;)for(le(ae,fe,P,N),ae=k.c,fe=k.lc;fe>=14;){let Pe=ae>>fe-14&16383,Se=M[Pe];if(Se.len)fe-=Se.len,ue(Se.lit,B,ae,fe,P,N,re,pe,be),ae=ie.c,fe=ie.lc;else{if(!Se.p)throw new Error("hufDecode issues");let Ee;for(Ee=0;Ee<Se.lit;Ee++){let Be=se(m[Se.p[Ee]]);for(;fe<Be&&N.value<de;)le(ae,fe,P,N),ae=k.c,fe=k.lc;if(fe>=Be&&$(m[Se.p[Ee]])==(ae>>fe-Be&(1<<Be)-1)){fe-=Be,ue(Se.p[Ee],B,ae,fe,P,N,re,pe,be),ae=ie.c,fe=ie.lc;break}}if(Ee==Se.lit)throw new Error("hufDecode issues")}}let Ie=8-X&7;for(ae>>=Ie,fe-=Ie;fe>0;){let Pe=M[ae<<14-fe&16383];if(Pe.len)fe-=Pe.len,ue(Pe.lit,B,ae,fe,P,N,re,pe,be),ae=ie.c,fe=ie.lc;else throw new Error("hufDecode issues")}return!0}function We(m,M,P,N,X,B){let j={value:0},re=P.value,pe=Ce(M,P),ae=Ce(M,P);P.value+=4;let fe=Ce(M,P);if(P.value+=4,pe<0||pe>=65537||ae<0||ae>=65537)throw new Error("Something wrong with HUF_ENCSIZE");let be=new Array(65537),de=new Array(16384);ee(de);let Ie=N-(P.value-re);if(K(m,P,Ie,pe,ae,be),fe>8*(N-(P.value-re)))throw new Error("Something wrong with hufUncompress");U(be,pe,ae,de),Te(be,de,m,P,fe,ae,B,X,j)}function Fe(m,M,P){for(let N=0;N<P;++N)M[N]=m[M[N]]}function Le(m){for(let M=1;M<m.length;M++){let P=m[M-1]+m[M]-128;m[M]=P}}function et(m,M){let P=0,N=Math.floor((m.length+1)/2),X=0,B=m.length-1;for(;!(X>B||(M[X++]=m[P++],X>B));)M[X++]=m[N++]}function pt(m){let M=m.byteLength,P=new Array,N=0,X=new DataView(m);for(;M>0;){let B=X.getInt8(N++);if(B<0){let j=-B;M-=j+1;for(let re=0;re<j;re++)P.push(X.getUint8(N++))}else{let j=B;M-=2;let re=X.getUint8(N++);for(let pe=0;pe<j+1;pe++)P.push(re)}}return P}function ct(m,M,P,N,X,B){let j=new DataView(B.buffer),re=P[m.idx[0]].width,pe=P[m.idx[0]].height,ae=3,fe=Math.floor(re/8),be=Math.ceil(re/8),de=Math.ceil(pe/8),Ie=re-(be-1)*8,Pe=pe-(de-1)*8,Se={value:0},Ee=new Array(ae),Be=new Array(ae),tt=new Array(ae),Ve=new Array(ae),ut=new Array(ae);for(let Oe=0;Oe<ae;++Oe)ut[Oe]=M[m.idx[Oe]],Ee[Oe]=Oe<1?0:Ee[Oe-1]+be*de,Be[Oe]=new Float32Array(64),tt[Oe]=new Uint16Array(64),Ve[Oe]=new Uint16Array(be*64);for(let Oe=0;Oe<de;++Oe){let at=8;Oe==de-1&&(at=Pe);let Bt=8;for(let Qe=0;Qe<be;++Qe){Qe==be-1&&(Bt=Ie);for(let nt=0;nt<ae;++nt)tt[nt].fill(0),tt[nt][0]=X[Ee[nt]++],Ct(Se,N,tt[nt]),ht(tt[nt],Be[nt]),qe(Be[nt]);ae==3&&zt(Be);for(let nt=0;nt<ae;++nt)Pt(Be[nt],Ve[nt],Qe*64)}let ft=0;for(let Qe=0;Qe<ae;++Qe){let nt=P[m.idx[Qe]].type;for(let wn=8*Oe;wn<8*Oe+at;++wn){ft=ut[Qe][wn];for(let gs=0;gs<fe;++gs){let dn=gs*64+(wn&7)*8;j.setUint16(ft+0*2*nt,Ve[Qe][dn+0],!0),j.setUint16(ft+1*2*nt,Ve[Qe][dn+1],!0),j.setUint16(ft+2*2*nt,Ve[Qe][dn+2],!0),j.setUint16(ft+3*2*nt,Ve[Qe][dn+3],!0),j.setUint16(ft+4*2*nt,Ve[Qe][dn+4],!0),j.setUint16(ft+5*2*nt,Ve[Qe][dn+5],!0),j.setUint16(ft+6*2*nt,Ve[Qe][dn+6],!0),j.setUint16(ft+7*2*nt,Ve[Qe][dn+7],!0),ft+=8*2*nt}}if(fe!=be)for(let wn=8*Oe;wn<8*Oe+at;++wn){let gs=ut[Qe][wn]+8*fe*2*nt,dn=fe*64+(wn&7)*8;for(let Xs=0;Xs<Bt;++Xs)j.setUint16(gs+Xs*2*nt,Ve[Qe][dn+Xs],!0)}}}let je=new Uint16Array(re);j=new DataView(B.buffer);for(let Oe=0;Oe<ae;++Oe){P[m.idx[Oe]].decoded=!0;let at=P[m.idx[Oe]].type;if(P[Oe].type==2)for(let Bt=0;Bt<pe;++Bt){let ft=ut[Oe][Bt];for(let Qe=0;Qe<re;++Qe)je[Qe]=j.getUint16(ft+Qe*2*at,!0);for(let Qe=0;Qe<re;++Qe)j.setFloat32(ft+Qe*2*at,J(je[Qe]),!0)}}}function Ct(m,M,P){let N,X=1;for(;X<64;)N=M[m.value],N==65280?X=64:N>>8==255?X+=N&255:(P[X]=N,X++),m.value++}function ht(m,M){M[0]=J(m[0]),M[1]=J(m[1]),M[2]=J(m[5]),M[3]=J(m[6]),M[4]=J(m[14]),M[5]=J(m[15]),M[6]=J(m[27]),M[7]=J(m[28]),M[8]=J(m[2]),M[9]=J(m[4]),M[10]=J(m[7]),M[11]=J(m[13]),M[12]=J(m[16]),M[13]=J(m[26]),M[14]=J(m[29]),M[15]=J(m[42]),M[16]=J(m[3]),M[17]=J(m[8]),M[18]=J(m[12]),M[19]=J(m[17]),M[20]=J(m[25]),M[21]=J(m[30]),M[22]=J(m[41]),M[23]=J(m[43]),M[24]=J(m[9]),M[25]=J(m[11]),M[26]=J(m[18]),M[27]=J(m[24]),M[28]=J(m[31]),M[29]=J(m[40]),M[30]=J(m[44]),M[31]=J(m[53]),M[32]=J(m[10]),M[33]=J(m[19]),M[34]=J(m[23]),M[35]=J(m[32]),M[36]=J(m[39]),M[37]=J(m[45]),M[38]=J(m[52]),M[39]=J(m[54]),M[40]=J(m[20]),M[41]=J(m[22]),M[42]=J(m[33]),M[43]=J(m[38]),M[44]=J(m[46]),M[45]=J(m[51]),M[46]=J(m[55]),M[47]=J(m[60]),M[48]=J(m[21]),M[49]=J(m[34]),M[50]=J(m[37]),M[51]=J(m[47]),M[52]=J(m[50]),M[53]=J(m[56]),M[54]=J(m[59]),M[55]=J(m[61]),M[56]=J(m[35]),M[57]=J(m[36]),M[58]=J(m[48]),M[59]=J(m[49]),M[60]=J(m[57]),M[61]=J(m[58]),M[62]=J(m[62]),M[63]=J(m[63])}function qe(m){let M=.5*Math.cos(.7853975),P=.5*Math.cos(3.14159/16),N=.5*Math.cos(3.14159/8),X=.5*Math.cos(3*3.14159/16),B=.5*Math.cos(5*3.14159/16),j=.5*Math.cos(3*3.14159/8),re=.5*Math.cos(7*3.14159/16),pe=new Array(4),ae=new Array(4),fe=new Array(4),be=new Array(4);for(let de=0;de<8;++de){let Ie=de*8;pe[0]=N*m[Ie+2],pe[1]=j*m[Ie+2],pe[2]=N*m[Ie+6],pe[3]=j*m[Ie+6],ae[0]=P*m[Ie+1]+X*m[Ie+3]+B*m[Ie+5]+re*m[Ie+7],ae[1]=X*m[Ie+1]-re*m[Ie+3]-P*m[Ie+5]-B*m[Ie+7],ae[2]=B*m[Ie+1]-P*m[Ie+3]+re*m[Ie+5]+X*m[Ie+7],ae[3]=re*m[Ie+1]-B*m[Ie+3]+X*m[Ie+5]-P*m[Ie+7],fe[0]=M*(m[Ie+0]+m[Ie+4]),fe[3]=M*(m[Ie+0]-m[Ie+4]),fe[1]=pe[0]+pe[3],fe[2]=pe[1]-pe[2],be[0]=fe[0]+fe[1],be[1]=fe[3]+fe[2],be[2]=fe[3]-fe[2],be[3]=fe[0]-fe[1],m[Ie+0]=be[0]+ae[0],m[Ie+1]=be[1]+ae[1],m[Ie+2]=be[2]+ae[2],m[Ie+3]=be[3]+ae[3],m[Ie+4]=be[3]-ae[3],m[Ie+5]=be[2]-ae[2],m[Ie+6]=be[1]-ae[1],m[Ie+7]=be[0]-ae[0]}for(let de=0;de<8;++de)pe[0]=N*m[16+de],pe[1]=j*m[16+de],pe[2]=N*m[48+de],pe[3]=j*m[48+de],ae[0]=P*m[8+de]+X*m[24+de]+B*m[40+de]+re*m[56+de],ae[1]=X*m[8+de]-re*m[24+de]-P*m[40+de]-B*m[56+de],ae[2]=B*m[8+de]-P*m[24+de]+re*m[40+de]+X*m[56+de],ae[3]=re*m[8+de]-B*m[24+de]+X*m[40+de]-P*m[56+de],fe[0]=M*(m[de]+m[32+de]),fe[3]=M*(m[de]-m[32+de]),fe[1]=pe[0]+pe[3],fe[2]=pe[1]-pe[2],be[0]=fe[0]+fe[1],be[1]=fe[3]+fe[2],be[2]=fe[3]-fe[2],be[3]=fe[0]-fe[1],m[0+de]=be[0]+ae[0],m[8+de]=be[1]+ae[1],m[16+de]=be[2]+ae[2],m[24+de]=be[3]+ae[3],m[32+de]=be[3]-ae[3],m[40+de]=be[2]-ae[2],m[48+de]=be[1]-ae[1],m[56+de]=be[0]-ae[0]}function zt(m){for(let M=0;M<64;++M){let P=m[0][M],N=m[1][M],X=m[2][M];m[0][M]=P+1.5747*X,m[1][M]=P-.1873*N-.4682*X,m[2][M]=P+1.8556*N}}function Pt(m,M,P){for(let N=0;N<64;++N)M[P+N]=_o.toHalfFloat(I(m[N]))}function I(m){return m<=1?Math.sign(m)*Math.pow(Math.abs(m),2.2):Math.sign(m)*Math.pow(C,Math.abs(m)-1)}function T(m){return new DataView(m.array.buffer,m.offset.value,m.size)}function te(m){let M=m.viewer.buffer.slice(m.offset.value,m.offset.value+m.size),P=new Uint8Array(pt(M)),N=new Uint8Array(P.length);return Le(P),et(P,N),new DataView(N.buffer)}function he(m){let M=m.array.slice(m.offset.value,m.offset.value+m.size);typeof Xr>"u"&&console.error("THREE.EXRLoader: External library fflate.min.js required.");let P=kn(M),N=new Uint8Array(P.length);return Le(P),et(P,N),new DataView(N.buffer)}function me(m){let M=m.viewer,P={value:m.offset.value},N=new Uint16Array(m.width*m.scanlineBlockSize*(m.channels*m.type)),X=new Uint8Array(8192),B=0,j=new Array(m.channels);for(let Pe=0;Pe<m.channels;Pe++)j[Pe]={},j[Pe].start=B,j[Pe].end=j[Pe].start,j[Pe].nx=m.width,j[Pe].ny=m.lines,j[Pe].size=m.type,B+=j[Pe].nx*j[Pe].ny*j[Pe].size;let re=ye(M,P),pe=ye(M,P);if(pe>=8192)throw new Error("Something is wrong with PIZ_COMPRESSION BITMAP_SIZE");if(re<=pe)for(let Pe=0;Pe<pe-re+1;Pe++)X[Pe+re]=Ze(M,P);let ae=new Uint16Array(65536),fe=L(X,ae),be=Ce(M,P);We(m.array,M,P,be,N,B);for(let Pe=0;Pe<m.channels;++Pe){let Se=j[Pe];for(let Ee=0;Ee<j[Pe].size;++Ee)De(N,Se.start+Ee,Se.nx,Se.size,Se.ny,Se.nx*Se.size,fe)}Fe(ae,N,B);let de=0,Ie=new Uint8Array(N.buffer.byteLength);for(let Pe=0;Pe<m.lines;Pe++)for(let Se=0;Se<m.channels;Se++){let Ee=j[Se],Be=Ee.nx*Ee.size,tt=new Uint8Array(N.buffer,Ee.end*2,Be*2);Ie.set(tt,de),de+=Be*2,Ee.end+=Be}return new DataView(Ie.buffer)}function Me(m){let M=m.array.slice(m.offset.value,m.offset.value+m.size);typeof Xr>"u"&&console.error("THREE.EXRLoader: External library fflate.min.js required.");let P=kn(M),N=m.lines*m.channels*m.width,X=m.type==1?new Uint16Array(N):new Uint32Array(N),B=0,j=0,re=new Array(4);for(let pe=0;pe<m.lines;pe++)for(let ae=0;ae<m.channels;ae++){let fe=0;switch(m.type){case 1:re[0]=B,re[1]=re[0]+m.width,B=re[1]+m.width;for(let be=0;be<m.width;++be)fe+=P[re[0]++]<<8|P[re[1]++],X[j]=fe,j++;break;case 2:re[0]=B,re[1]=re[0]+m.width,re[2]=re[1]+m.width,B=re[2]+m.width;for(let be=0;be<m.width;++be)fe+=P[re[0]++]<<24|P[re[1]++]<<16|P[re[2]++]<<8,X[j]=fe,j++;break}}return new DataView(X.buffer)}function Ne(m){let M=m.viewer,P={value:m.offset.value},N=new Uint8Array(m.width*m.lines*(m.channels*m.type*2)),X={version:O(M,P),unknownUncompressedSize:O(M,P),unknownCompressedSize:O(M,P),acCompressedSize:O(M,P),dcCompressedSize:O(M,P),rleCompressedSize:O(M,P),rleUncompressedSize:O(M,P),rleRawSize:O(M,P),totalAcUncompressedCount:O(M,P),totalDcUncompressedCount:O(M,P),acCompression:O(M,P)};if(X.version<2)throw new Error("EXRLoader.parse: "+W.compression+" version "+X.version+" is unsupported");let B=new Array,j=ye(M,P)-2;for(;j>0;){let Se=A(M.buffer,P),Ee=Ze(M,P),Be=Ee>>2&3,tt=(Ee>>4)-1,Ve=new Int8Array([tt])[0],ut=Ze(M,P);B.push({name:Se,index:Ve,type:ut,compression:Be}),j-=Se.length+3}let re=W.channels,pe=new Array(m.channels);for(let Se=0;Se<m.channels;++Se){let Ee=pe[Se]={},Be=re[Se];Ee.name=Be.name,Ee.compression=0,Ee.decoded=!1,Ee.type=Be.pixelType,Ee.pLinear=Be.pLinear,Ee.width=m.width,Ee.height=m.lines}let ae={idx:new Array(3)};for(let Se=0;Se<m.channels;++Se){let Ee=pe[Se];for(let Be=0;Be<B.length;++Be){let tt=B[Be];Ee.name==tt.name&&(Ee.compression=tt.compression,tt.index>=0&&(ae.idx[tt.index]=Se),Ee.offset=Se)}}let fe,be,de;if(X.acCompressedSize>0)switch(X.acCompression){case 0:fe=new Uint16Array(X.totalAcUncompressedCount),We(m.array,M,P,X.acCompressedSize,fe,X.totalAcUncompressedCount);break;case 1:let Se=m.array.slice(P.value,P.value+X.totalAcUncompressedCount),Ee=kn(Se);fe=new Uint16Array(Ee.buffer),P.value+=X.totalAcUncompressedCount;break}if(X.dcCompressedSize>0){let Se={array:m.array,offset:P,size:X.dcCompressedSize};be=new Uint16Array(he(Se).buffer),P.value+=X.dcCompressedSize}if(X.rleRawSize>0){let Se=m.array.slice(P.value,P.value+X.rleCompressedSize),Ee=kn(Se);de=pt(Ee.buffer),P.value+=X.rleCompressedSize}let Ie=0,Pe=new Array(pe.length);for(let Se=0;Se<Pe.length;++Se)Pe[Se]=new Array;for(let Se=0;Se<m.lines;++Se)for(let Ee=0;Ee<pe.length;++Ee)Pe[Ee].push(Ie),Ie+=pe[Ee].width*m.type*2;ct(ae,Pe,pe,fe,be,N);for(let Se=0;Se<pe.length;++Se){let Ee=pe[Se];if(!Ee.decoded)switch(Ee.compression){case 2:let Be=0,tt=0;for(let Ve=0;Ve<m.lines;++Ve){let ut=Pe[Se][Be];for(let je=0;je<Ee.width;++je){for(let Oe=0;Oe<2*Ee.type;++Oe)N[ut++]=de[tt+Oe*Ee.width*Ee.height];tt++}Be++}break;case 1:default:throw new Error("EXRLoader.parse: unsupported channel compression")}}return new DataView(N.buffer)}function A(m,M){let P=new Uint8Array(m),N=0;for(;P[M.value+N]!=0;)N+=1;let X=new TextDecoder().decode(P.slice(M.value,M.value+N));return M.value=M.value+N+1,X}function oe(m,M,P){let N=new TextDecoder().decode(new Uint8Array(m).slice(M.value,M.value+P));return M.value=M.value+P,N}function ge(m,M){let P=_e(m,M),N=Ce(m,M);return[P,N]}function we(m,M){let P=Ce(m,M),N=Ce(m,M);return[P,N]}function _e(m,M){let P=m.getInt32(M.value,!0);return M.value=M.value+4,P}function Ce(m,M){let P=m.getUint32(M.value,!0);return M.value=M.value+4,P}function ke(m,M){let P=m[M.value];return M.value=M.value+1,P}function Ze(m,M){let P=m.getUint8(M.value);return M.value=M.value+1,P}let O=function(m,M){let P=Number(m.getBigInt64(M.value,!0));return M.value+=8,P};function ce(m,M){let P=m.getFloat32(M.value,!0);return M.value+=4,P}function Q(m,M){return _o.toHalfFloat(ce(m,M))}function J(m){let M=(m&31744)>>10,P=m&1023;return(m>>15?-1:1)*(M?M===31?P?NaN:1/0:Math.pow(2,M-15)*(1+P/1024):6103515625e-14*(P/1024))}function ye(m,M){let P=m.getUint16(M.value,!0);return M.value+=2,P}function Xe(m,M){return J(ye(m,M))}function mt(m,M,P,N){let X=P.value,B=[];for(;P.value<X+N-1;){let j=A(M,P),re=_e(m,P),pe=Ze(m,P);P.value+=3;let ae=_e(m,P),fe=_e(m,P);B.push({name:j,pixelType:re,pLinear:pe,xSampling:ae,ySampling:fe})}return P.value+=1,B}function rt(m,M){let P=ce(m,M),N=ce(m,M),X=ce(m,M),B=ce(m,M),j=ce(m,M),re=ce(m,M),pe=ce(m,M),ae=ce(m,M);return{redX:P,redY:N,greenX:X,greenY:B,blueX:j,blueY:re,whiteX:pe,whiteY:ae}}function fn(m,M){let P=["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"],N=Ze(m,M);return P[N]}function it(m,M){let P=Ce(m,M),N=Ce(m,M),X=Ce(m,M),B=Ce(m,M);return{xMin:P,yMin:N,xMax:X,yMax:B}}function sn(m,M){let P=["INCREASING_Y"],N=Ze(m,M);return P[N]}function Ut(m,M){let P=ce(m,M),N=ce(m,M);return[P,N]}function Zr(m,M){let P=ce(m,M),N=ce(m,M),X=ce(m,M);return[P,N,X]}function wi(m,M,P,N,X){if(N==="string"||N==="stringvector"||N==="iccProfile")return oe(M,P,X);if(N==="chlist")return mt(m,M,P,X);if(N==="chromaticities")return rt(m,P);if(N==="compression")return fn(m,P);if(N==="box2i")return it(m,P);if(N==="lineOrder")return sn(m,P);if(N==="float")return ce(m,P);if(N==="v2f")return Ut(m,P);if(N==="v3f")return Zr(m,P);if(N==="int")return _e(m,P);if(N==="rational")return ge(m,P);if(N==="timecode")return we(m,P);if(N==="preview")return P.value+=X,"skipped";P.value+=X}function Ws(m,M,P){let N={};if(m.getUint32(0,!0)!=20000630)throw new Error("THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.");N.version=m.getUint8(4);let X=m.getUint8(5);N.spec={singleTile:!!(X&2),longName:!!(X&4),deepFormat:!!(X&8),multiPart:!!(X&16)},P.value=8;let B=!0;for(;B;){let j=A(M,P);if(j==0)B=!1;else{let re=A(M,P),pe=Ce(m,P),ae=wi(m,M,P,re,pe);ae===void 0?console.warn(`EXRLoader.parse: skipped unknown header attribute type '${re}'.`):N[j]=ae}}if((X&-5)!=0)throw console.error("EXRHeader:",N),new Error("THREE.EXRLoader: provided file is currently unsupported.");return N}function Yr(m,M,P,N,X){let B={size:0,viewer:M,array:P,offset:N,width:m.dataWindow.xMax-m.dataWindow.xMin+1,height:m.dataWindow.yMax-m.dataWindow.yMin+1,channels:m.channels.length,bytesPerLine:null,lines:null,inputSize:null,type:m.channels[0].pixelType,uncompress:null,getter:null,format:null,encoding:null};switch(m.compression){case"NO_COMPRESSION":B.lines=1,B.uncompress=T;break;case"RLE_COMPRESSION":B.lines=1,B.uncompress=te;break;case"ZIPS_COMPRESSION":B.lines=1,B.uncompress=he;break;case"ZIP_COMPRESSION":B.lines=16,B.uncompress=he;break;case"PIZ_COMPRESSION":B.lines=32,B.uncompress=me;break;case"PXR24_COMPRESSION":B.lines=16,B.uncompress=Me;break;case"DWAA_COMPRESSION":B.lines=32,B.uncompress=Ne;break;case"DWAB_COMPRESSION":B.lines=256,B.uncompress=Ne;break;default:throw new Error("EXRLoader.parse: "+m.compression+" is unsupported")}if(B.scanlineBlockSize=B.lines,B.type==1)switch(X){case hn:B.getter=Xe,B.inputSize=2;break;case mn:B.getter=ye,B.inputSize=2;break}else if(B.type==2)switch(X){case hn:B.getter=ce,B.inputSize=4;break;case mn:B.getter=Q,B.inputSize=4}else throw new Error("EXRLoader.parse: unsupported pixelType "+B.type+" for "+m.compression+".");B.blockCount=(m.dataWindow.yMax+1)/B.scanlineBlockSize;for(let re=0;re<B.blockCount;re++)O(M,N);B.outputChannels=B.channels==3?4:B.channels;let j=B.width*B.height*B.outputChannels;switch(X){case hn:B.byteArray=new Float32Array(j),B.channels<B.outputChannels&&B.byteArray.fill(1,0,j);break;case mn:B.byteArray=new Uint16Array(j),B.channels<B.outputChannels&&B.byteArray.fill(15360,0,j);break;default:console.error("THREE.EXRLoader: unsupported type: ",X);break}return B.bytesPerLine=B.width*B.inputSize*B.channels,B.outputChannels==4?(B.format=Jt,B.encoding=gn):(B.format=fo,B.encoding=gn),B}let bi=new DataView(e),Jr=new Uint8Array(e),E={value:0},W=Ws(bi,e,E),G=Yr(W,bi,Jr,E,this.type),H={value:0},ne={R:0,G:1,B:2,A:3,Y:0};for(let m=0;m<G.height/G.scanlineBlockSize;m++){let M=Ce(bi,E);G.size=Ce(bi,E),G.lines=M+G.scanlineBlockSize>G.height?G.height-M:G.scanlineBlockSize;let N=G.size<G.lines*G.bytesPerLine?G.uncompress(G):T(G);E.value+=G.size;for(let X=0;X<G.scanlineBlockSize;X++){let B=X+m*G.scanlineBlockSize;if(B>=G.height)break;for(let j=0;j<G.channels;j++){let re=ne[W.channels[j].name];for(let pe=0;pe<G.width;pe++){H.value=(X*(G.channels*G.width)+j*G.width+pe)*G.inputSize;let ae=(G.height-1-B)*(G.width*G.outputChannels)+pe*G.outputChannels+re;G.byteArray[ae]=G.getter(N,H)}}}}return{header:W,width:G.width,height:G.height,data:G.byteArray,format:G.format,encoding:G.encoding,type:this.type}}setDataType(e){return this.type=e,this}load(e,t,n,s){function r(o,a){o.encoding=a.encoding,o.minFilter=yt,o.magFilter=yt,o.generateMipmaps=!1,o.flipY=!1,t&&t(o,a)}return super.load(e,r,n,s)}};var Eg=223142;var uh=15696724;var Hs=new On({color:16738658}),qo=new On({color:6151423}),Zo=new On({color:15584598}),yn=new On({color:16777215,metalness:1,roughness:.05}),nn=new On({color:uh}),ti=new On({color:uh}),Gs=new Cr,Vs=document.querySelector("canvas"),Vn=new mo({canvas:Vs,antialias:!0});Vn.setClearColor(Eg);Vn.setPixelRatio(window.devicePixelRatio);Vn.shadowMap.enabled=!1;Vn.toneMapping=uo;Vn.toneMappingExposure=1;var Mn=new Lr,Cg=new qr,Pg=new Ji(Vn);Mn.load("assets/textures/paper-normal.jpg",i=>{i.repeat.set(2,2),i.wrapS=st,i.wrapT=st,Hs.normalMap=i,qo.normalMap=i,Zo.normalMap=i,Hs.needsUpdate=!0});Mn.load("assets/textures/rope_albedo.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(1,10),i.needsUpdate=!0,ti.map=i,ti.color=new Ye(16777215),ti.needsUpdate=!0});Mn.load("assets/textures/rope_normal.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(1,10),i.needsUpdate=!0,ti.normalMap=i,ti.needsUpdate=!0});Mn.load("assets/textures/wood_albedo.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(10,1),i.rotation=Math.PI/2,i.needsUpdate=!0,nn.map=i,nn.color=new Ye(16777215),nn.needsUpdate=!0});Mn.load("assets/textures/wood_normal.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(10,1),i.rotation=Math.PI/2,i.needsUpdate=!0,nn.normalMap=i,nn.needsUpdate=!0});Mn.load("assets/textures/wood_roughness.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(10,1),i.rotation=Math.PI/2,i.needsUpdate=!0,nn.roughnessMap=i,nn.needsUpdate=!0});Mn.load("assets/textures/wood_ao.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(10,1),i.rotation=Math.PI/2,i.needsUpdate=!0,nn.aoMap=i,nn.needsUpdate=!0});Mn.load("assets/textures/bronze_albedo.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(10,1),i.rotation=Math.PI/2,i.needsUpdate=!0,yn.map=i,yn.color=new Ye(16777215),yn.needsUpdate=!0});Mn.load("assets/textures/bronze_roughness.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(10,1),i.rotation=Math.PI/2,i.needsUpdate=!0,yn.roughnessMap=i,yn.needsUpdate=!0});Mn.load("assets/textures/bronze_metallic.png",i=>{i.wrapS=st,i.wrapT=st,i.repeat.set(10,1),i.rotation=Math.PI/2,i.needsUpdate=!0,yn.metalnessMap=i,yn.needsUpdate=!0});Cg.load("assets/textures/brown_photostudio_02_1k.exr",i=>{let e=Pg.fromEquirectangular(i);Gs.background=e.texture,yn.envMap=e.texture,yn.needsUpdate=!0,nn.envMap=e.texture,nn.needsUpdate=!0,ti.envMap=e.texture,ti.needsUpdate=!0,Hs.envMap=e.texture,Hs.needsUpdate=!0,Zo.envMap=e.texture,qo.envMap=e.texture});function yi(i,e,t){let n=new Zt;n.setFromEuler(e);let s=new ot;return s.compose(i,n,t),s}function Rg(i){let e=new Ki(1,0),t=new bt(e,Zo);t.position.set(-1,3.5,0),t.scale.set(.3,.3,.3),t.updateMatrix(),i.add(t);let n=new bt(e,Hs);n.position.set(0,3,0),n.scale.set(.3,.3,.3),n.updateMatrix(),i.add(n);let s=new bt(e,qo);return s.position.set(1,2.5,0),s.scale.set(.3,.3,.3),s.updateMatrix(),i.add(s),[t,n,s]}function Ig(i){let e=[yi(new z(0,6,0),new Et(0,0,0),new z(.01,3,.01)),yi(new z(-1,4,0),new Et(0,0,0),new z(.01,1,.01)),yi(new z(0,3.75,0),new Et(0,0,0),new z(.01,1.5,.01)),yi(new z(1,3.5,0),new Et(0,0,0),new z(.01,2,.01))],t=new $i(1,1,1,16),n=new Es(t,ti,e.length);for(let r=0;r<e.length;r++)n.setMatrixAt(r,e[r]);let s=new bt(t,nn);s.position.set(0,4.5,0),s.setRotationFromEuler(new Et(vo(-90),0,vo(-90))),s.scale.set(.05,3,.05),n.matrixAutoUpdate=!1,s.matrixAutoUpdate=!1,s.updateMatrix(),i.add(n),i.add(s)}function Lg(i){let e=[yi(new z(-1,4.6,0),new Et(0,0,0),new z(.05,.05,.05)),yi(new z(0,4.65,0),new Et(0,0,0),new z(.1,.1,.1)),yi(new z(1,4.6,0),new Et(0,0,0),new z(.05,.05,.05))],t=new ji(1,20),n=new Es(t,yn,e.length);for(let s=0;s<e.length;s++)n.setMatrixAt(s,e[s]);n.matrixAutoUpdate=!1,i.add(n)}var Mi=new It;Mi.position.set(1,5,4);Mi.updateProjectionMatrix();Mi.lookAt(0,4,0);var ms=new Or(Mi,Vn.domElement);ms.target.set(0,4,0);ms.update();ms.autoRotate=!0;ms.autoRotateSpeed=.1;ms.enableDamping=!0;var Dg=10,Ng=10,Og=window.innerWidth/2,Fg=window.innerHeight/2;document.addEventListener("mousemove",zg);function zg(i){Dg=i.clientX-Og,Ng=i.clientY-Fg}var ps=Rg(Gs);Ig(Gs);Lg(Gs);function Ug(){let i=Vs.clientWidth,e=Vs.clientHeight;(i!=Vs.width||e!=Vs.height)&&(Vn.setSize(i,e,!1),Mi.aspect=i/e,Mi.updateProjectionMatrix())}var Bg=24,kg=1e3/Bg,ch=0,hh=0,Wo=Math.PI*2;function Vg(i){ps[0].rotation.set(0,Xo[0]+Wo*.004*Math.sin(i*.001+20),0),ps[1].rotation.set(0,Xo[1]+Wo*.007*Math.sin(i*.001+40),0),ps[2].rotation.set(0,Xo[2]+Wo*.006*Math.sin(i*.001+66),0)}var Xo=[ps[0].rotation.y,ps[1].rotation.y,ps[2].rotation.y];function fh(i){Vg(i),i>hh&&(Ug(),ms.update(),Vn.render(Gs,Mi),ch=performance.now(),hh=ch+kg),requestAnimationFrame(fh)}fh();})();
/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
